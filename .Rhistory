synth_original = synth_original,
synth_new = synth_new,
gap_origin = gap_original,
gap_new = gap_new,
diff_original = diff_original,
diff_new = diff_new),
mse = mse)
}
)
df = lapply(res, "[[", "df") %>% do.call("rbind", .)
# log(mse/mse) t test ==========================================
mse = lapply(res, "[[", "mse") %>% do.call("rbind", .)
t.test(mse$log_ratio)
# full nested variance v2 ======================================
df2 = df %>%
filter(time %in% 60:69) %>%
mutate(id = factor(id))
res.aov.sc = aov(diff_original ~ id, df2)
summary.aov.sc = summary(res.aov.sc)
DF.sc = summary.aov.sc[[1]]$Df %>% sum
sum.sq.sc = summary.aov.sc[[1]]$`Sum Sq` %>% sum
var.sc = sum.sq.sc/DF.sc
res.aov.dsc = aov(diff_new ~ id, df2)
summary.aov.dsc = summary(res.aov.dsc)
DF.dsc = summary.aov.dsc[[1]]$Df %>% sum
sum.sq.dsc = summary.aov.dsc[[1]]$`Sum Sq` %>% sum
var.dsc = sum.sq.dsc/DF.dsc
F.value = var.dsc/var.sc
p.value = pf(F.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
summary.aov.sc
summary.aov.dsc
F.value
p.value
# full nested variance v2 ======================================
df2 = df %>%
filter(time %in% 61:70) %>%
mutate(id = factor(id))
res.aov.sc = aov(diff_original ~ id, df2)
summary.aov.sc = summary(res.aov.sc)
DF.sc = summary.aov.sc[[1]]$Df %>% sum
sum.sq.sc = summary.aov.sc[[1]]$`Sum Sq` %>% sum
var.sc = sum.sq.sc/DF.sc
res.aov.dsc = aov(diff_new ~ id, df2)
summary.aov.dsc = summary(res.aov.dsc)
DF.dsc = summary.aov.dsc[[1]]$Df %>% sum
sum.sq.dsc = summary.aov.dsc[[1]]$`Sum Sq` %>% sum
var.dsc = sum.sq.dsc/DF.dsc
F.value = var.dsc/var.sc
p.value = pf(F.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
F.value
p.value
df2 = df %>%
filter(time %in% 61:70) %>%
mutate(id = factor(id))
res.aov.sc = aov(diff_original ~ id, df2)
summary.aov.sc = summary(res.aov.sc)
DF.sc = summary.aov.sc[[1]]$Df %>% sum
sum.sq.sc = summary.aov.sc[[1]]$`Sum Sq` %>% sum
var.sc = sum.sq.sc/DF.sc
res.aov.dsc = aov(diff_new ~ id, df2)
summary.aov.dsc = summary(res.aov.dsc)
DF.dsc = summary.aov.dsc[[1]]$Df %>% sum
sum.sq.dsc = summary.aov.dsc[[1]]$`Sum Sq` %>% sum
var.dsc = sum.sq.dsc/DF.dsc
F.value = var.dsc/var.sc
p.value = pf(F.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
F.value
p.value
DF.dsc
results = NULL
beta = 1
folder = "./data/res_sim/1006/"
res.files = list.files(folder)
for (res.file in res.files) {
results = c(results, list(readRDS(paste0(folder, res.file))))
}
length = 100
shock = 10
treat_time = 60
n_mse = 10
causal_effect = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
# placebo test figure
res = future_map2(
results,
as.list(1:length(results)),
~{
item = .x
id = .y
# neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
# # neg.ratio.rank = rank(neg.ratio, ties.method = "max")
# ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
# p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
# # p.value.rank = rank(1 - p.value, ties.method = "max")
# ind.min.p.value = which(p.value == min(p.value, na.rm = T))[1]
# # mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
# #   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# # mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# # score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# # ind = which(score == max(score, na.rm = T))[1]
# ind = ind.max.neg.ratio[1]
neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
ind.min.p.value = which(p.value == min(p.value, na.rm = T))
# mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
#   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# ind = which(score == max(score, na.rm = T))[1]
ind = ind.max.neg.ratio[ind.min.p.value[1]]
synth_original = item[[ind]][["res.synth.target.raw"]][["synthetic"]]
synth_new = item[[ind]][["res.synth.target.TFDTW"]][["synthetic"]]
value_raw = item[[ind]][["res.synth.target.raw"]][["value"]]
gap_original = value_raw - synth_original
gap_new = value_raw - synth_new
diff_original = value_raw - synth_original - causal_effect
diff_new = value_raw - synth_new - causal_effect
mse_original = mean(diff_original[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse_new = mean(diff_new[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse = data.frame(mse_original = mse_original,
mse_new = mse_new,
log_ratio = log(mse_new/mse_original))
list(df = data.frame(time = 0:(length(value_raw)-1),
id = id,
value_raw = value_raw,
synth_original = synth_original,
synth_new = synth_new,
gap_origin = gap_original,
gap_new = gap_new,
diff_original = diff_original,
diff_new = diff_new),
mse = mse)
}
)
df = lapply(res, "[[", "df") %>% do.call("rbind", .)
df2 = df %>%
filter(time %in% 61:70) %>%
mutate(id = factor(id))
res.aov.sc = aov(diff_original ~ id, df2)
summary.aov.sc = summary(res.aov.sc)
DF.sc = summary.aov.sc[[1]]$Df %>% sum
sum.sq.sc = summary.aov.sc[[1]]$`Sum Sq` %>% sum
var.sc = sum.sq.sc/DF.sc
res.aov.dsc = aov(diff_new ~ id, df2)
summary.aov.dsc = summary(res.aov.dsc)
DF.dsc = summary.aov.dsc[[1]]$Df %>% sum
sum.sq.dsc = summary.aov.dsc[[1]]$`Sum Sq` %>% sum
var.dsc = sum.sq.dsc/DF.dsc
F.value = var.dsc/var.sc
p.value = pf(F.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
F.value
p.value
results = NULL
beta = 1
folder = "./data/res_sim/1011/"
res.files = list.files(folder)
for (res.file in res.files) {
results = c(results, list(readRDS(paste0(folder, res.file))))
}
length = 100
shock = 10
treat_time = 60
n_mse = 10
causal_effect = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
# placebo test figure
res = future_map2(
results,
as.list(1:length(results)),
~{
item = .x
id = .y
# neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
# # neg.ratio.rank = rank(neg.ratio, ties.method = "max")
# ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
# p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
# # p.value.rank = rank(1 - p.value, ties.method = "max")
# ind.min.p.value = which(p.value == min(p.value, na.rm = T))[1]
# # mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
# #   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# # mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# # score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# # ind = which(score == max(score, na.rm = T))[1]
# ind = ind.max.neg.ratio[1]
neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
ind.min.p.value = which(p.value == min(p.value, na.rm = T))
# mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
#   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# ind = which(score == max(score, na.rm = T))[1]
ind = ind.max.neg.ratio[ind.min.p.value[1]]
synth_original = item[[ind]][["res.synth.target.raw"]][["synthetic"]]
synth_new = item[[ind]][["res.synth.target.TFDTW"]][["synthetic"]]
value_raw = item[[ind]][["res.synth.target.raw"]][["value"]]
gap_original = value_raw - synth_original
gap_new = value_raw - synth_new
diff_original = value_raw - synth_original - causal_effect
diff_new = value_raw - synth_new - causal_effect
mse_original = mean(diff_original[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse_new = mean(diff_new[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse = data.frame(mse_original = mse_original,
mse_new = mse_new,
log_ratio = log(mse_new/mse_original))
list(df = data.frame(time = 0:(length(value_raw)-1),
id = id,
value_raw = value_raw,
synth_original = synth_original,
synth_new = synth_new,
gap_origin = gap_original,
gap_new = gap_new,
diff_original = diff_original,
diff_new = diff_new),
mse = mse)
}
)
df = lapply(res, "[[", "df") %>% do.call("rbind", .)
df2 = df %>%
filter(time %in% 61:70) %>%
mutate(id = factor(id))
res.aov.sc = aov(diff_original ~ id, df2)
summary.aov.sc = summary(res.aov.sc)
DF.sc = summary.aov.sc[[1]]$Df %>% sum
sum.sq.sc = summary.aov.sc[[1]]$`Sum Sq` %>% sum
var.sc = sum.sq.sc/DF.sc
res.aov.dsc = aov(diff_new ~ id, df2)
summary.aov.dsc = summary(res.aov.dsc)
DF.dsc = summary.aov.dsc[[1]]$Df %>% sum
sum.sq.dsc = summary.aov.dsc[[1]]$`Sum Sq` %>% sum
var.dsc = sum.sq.dsc/DF.dsc
F.value = var.dsc/var.sc
p.value = pf(F.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
# log(mse/mse) t test ==========================================
mse = lapply(res, "[[", "mse") %>% do.call("rbind", .)
t.test(mse$log_ratio)
F.value
p.value
df2$diff_original %>% mean
df2$diff_new %>% mean
df11 = df
results = NULL
beta = 1
folder = "./data/res_sim/1010/"
res.files = list.files(folder)
for (res.file in res.files) {
results = c(results, list(readRDS(paste0(folder, res.file))))
}
length = 100
shock = 10
treat_time = 60
n_mse = 10
causal_effect = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
# placebo test figure
res = future_map2(
results,
as.list(1:length(results)),
~{
item = .x
id = .y
# neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
# # neg.ratio.rank = rank(neg.ratio, ties.method = "max")
# ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
# p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
# # p.value.rank = rank(1 - p.value, ties.method = "max")
# ind.min.p.value = which(p.value == min(p.value, na.rm = T))[1]
# # mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
# #   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# # mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# # score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# # ind = which(score == max(score, na.rm = T))[1]
# ind = ind.max.neg.ratio[1]
neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
ind.min.p.value = which(p.value == min(p.value, na.rm = T))
# mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
#   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# ind = which(score == max(score, na.rm = T))[1]
ind = ind.max.neg.ratio[ind.min.p.value[1]]
synth_original = item[[ind]][["res.synth.target.raw"]][["synthetic"]]
synth_new = item[[ind]][["res.synth.target.TFDTW"]][["synthetic"]]
value_raw = item[[ind]][["res.synth.target.raw"]][["value"]]
gap_original = value_raw - synth_original
gap_new = value_raw - synth_new
diff_original = value_raw - synth_original - causal_effect
diff_new = value_raw - synth_new - causal_effect
mse_original = mean(diff_original[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse_new = mean(diff_new[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse = data.frame(mse_original = mse_original,
mse_new = mse_new,
log_ratio = log(mse_new/mse_original))
list(df = data.frame(time = 0:(length(value_raw)-1),
id = id,
value_raw = value_raw,
synth_original = synth_original,
synth_new = synth_new,
gap_origin = gap_original,
gap_new = gap_new,
diff_original = diff_original,
diff_new = diff_new),
mse = mse)
}
)
df = lapply(res, "[[", "df") %>% do.call("rbind", .)
df10 = df
results = NULL
beta = 1
folder = "./data/res_sim/1006/"
res.files = list.files(folder)
for (res.file in res.files) {
results = c(results, list(readRDS(paste0(folder, res.file))))
}
length = 100
shock = 10
treat_time = 60
n_mse = 10
causal_effect = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
# placebo test figure
res = future_map2(
results,
as.list(1:length(results)),
~{
item = .x
id = .y
# neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
# # neg.ratio.rank = rank(neg.ratio, ties.method = "max")
# ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
# p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
# # p.value.rank = rank(1 - p.value, ties.method = "max")
# ind.min.p.value = which(p.value == min(p.value, na.rm = T))[1]
# # mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
# #   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# # mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# # score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# # ind = which(score == max(score, na.rm = T))[1]
# ind = ind.max.neg.ratio[1]
neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
ind.min.p.value = which(p.value == min(p.value, na.rm = T))
# mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
#   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# ind = which(score == max(score, na.rm = T))[1]
ind = ind.max.neg.ratio[ind.min.p.value[1]]
synth_original = item[[ind]][["res.synth.target.raw"]][["synthetic"]]
synth_new = item[[ind]][["res.synth.target.TFDTW"]][["synthetic"]]
value_raw = item[[ind]][["res.synth.target.raw"]][["value"]]
gap_original = value_raw - synth_original
gap_new = value_raw - synth_new
diff_original = value_raw - synth_original - causal_effect
diff_new = value_raw - synth_new - causal_effect
mse_original = mean(diff_original[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse_new = mean(diff_new[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse = data.frame(mse_original = mse_original,
mse_new = mse_new,
log_ratio = log(mse_new/mse_original))
list(df = data.frame(time = 0:(length(value_raw)-1),
id = id,
value_raw = value_raw,
synth_original = synth_original,
synth_new = synth_new,
gap_origin = gap_original,
gap_new = gap_new,
diff_original = diff_original,
diff_new = diff_new),
mse = mse)
}
)
df = lapply(res, "[[", "df") %>% do.call("rbind", .)
df06 = df
# full nested variance v2 ======================================
df2 = df %>%
filter(time %in% 61:70) %>%
mutate(id = factor(id))
df2$diff_original %>% mean()
df2$diff_new %>% mean()
# full nested variance v2 ======================================
df2 = df10 %>%
filter(time %in% 61:70) %>%
mutate(id = factor(id))
df2$diff_new %>% mean()
df2$diff_original %>% mean()
# full nested variance v2 ======================================
df2 = df11 %>%
filter(time %in% 61:70) %>%
mutate(id = factor(id))
df2$diff_original %>% mean()
df2$diff_new %>% mean()
df2 = df11 %>%
filter(time %in% 61:70) %>%
mutate(id = factor(id))
res.aov.sc = aov(diff_original ~ id, df2)
summary.aov.sc = summary(res.aov.sc)
DF.sc = summary.aov.sc[[1]]$Df %>% sum
sum.sq.sc = summary.aov.sc[[1]]$`Sum Sq` %>% sum
var.sc = sum.sq.sc/DF.sc
res.aov.dsc = aov(diff_new ~ id, df2)
summary.aov.dsc = summary(res.aov.dsc)
DF.dsc = summary.aov.dsc[[1]]$Df %>% sum
sum.sq.dsc = summary.aov.dsc[[1]]$`Sum Sq` %>% sum
var.dsc = sum.sq.dsc/DF.dsc
F.value = var.dsc/var.sc
p.value = pf(F.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
summary.aov.sc
summary.aov.dsc
t.interval = 61:70
df2 = df %>% filter(time %in% t.interval)
n.t = length(t.interval)
n.datasets = nrow(df2)/length(t.interval)
n.datasets
n.t
var.original = df2 %>% group_by(id) %>%
summarise(variance = var(diff_original)*(n.t - 1)) %>%
ungroup %>%
.[["variance"]] %>%
sum(., na.rm = T)/(n.datasets*(n.t - 1))
var.new = df2 %>% group_by(id) %>%
summarise(variance = var(diff_new)*(n.t - 1)) %>%
ungroup %>%
.[["variance"]] %>%
sum(., na.rm = T)/(n.datasets*(n.t - 1))
var.original
var.new
var(df2$diff_original)/999
var(df2$diff_original)
var(df2$diff_new)
?irr::icc
?psych::ICC
sf = data.frame(J1 = c(9,6,8,7,10,6),
J2 = c(2,1,4,1,5,2),
J3 = c(5,3,6,2,6,4),
J4 = c(8,2,8,6,9,7))
irr::icc(
sf, model = "twoway",
type = "agreement", unit = "single"
)$value
irr::icc(
sf, model = "twoway",
type = "agreement", unit = "single"
)
irr::icc(
sf, model = "oneway",
type = "c", unit = "s"
)
irr::icc(
sf, model = "twoway",
type = "c", unit = "s"
)
irr::icc(
sf, model = "twoway",
type = "a", unit = "s"
)
(24*(11.24-1.02))/(24*11.24+32.49-1.02)
BMS = 11.24
EMS = 1.02
JMS = 32.49
N = 24
(N*(BMS-EMS))/(N*BMS+JMS-EMS)
N = 6
(N*(BMS-EMS))/(N*BMS+JMS-EMS)
(BMS-EMS)/(BMS+(k-1)*EMS+k*(JMS-EMS)/N)
K = 4
(BMS-EMS)/(BMS+(k-1)*EMS+k*(JMS-EMS)/N)
k = 4
(BMS-EMS)/(BMS+(k-1)*EMS+k*(JMS-EMS)/N)
irr::icc(
sf, model = "twoway",
type = "a", unit = "s"
)
sf.df = reshape::melt(sf, varnames=c("Subject", "Rater"))
sf.df = reshape2::melt(sf, varnames=c("Subject", "Rater"))
sf.df
sf.df = reshape2::melt(sf)
sf.df
aov(value ~ variable, sf.df) %>% summary
# ----------------------------------------------------------------
sf = data.frame(J1 = c(9,6,8,7,10,6),
J2 = c(2,1,4,1,5,2),
J3 = c(5,3,6,2,6,4),
J4 = c(8,2,8,6,9,7)) %>%
`rownames<-`(c("S1", "S2", "S3", "S4", "S5", "S6"))
sf
sf.df = reshape2::melt(sf)
sf.df
install.packages("reshape")
sf.df = reshape::melt(sf, varnames=c("Subject", "Rater"))
sf.df
sf.df$subject = rep(c("S1", "S2", "S3", "S4", "S5", "S6"), 4)
sf.df
aov(value ~ variable*subject, sf.df) %>% summary
aov(value ~ subject, sf.df) %>% summary
(BMS-WMS)/(BMS+(k-1)•WMS)
(BMS-WMS)/(BMS+(k-1)*WMS)
WMS = 6.26
(BMS-WMS)/(BMS+(k-1)*WMS)
irr::icc(
sf, model = "oneway",
type = "c", unit = "s"
)
