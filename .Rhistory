min.p = which(scores$p.value[max.percent] == min(scores$p.value[max.percent])[1])[1]
opt.ind = as.numeric(scores$id[max.percent[min.p]])
df.gap.list[[i]] = data.frame(
unit = paste0("d", index, "-", target),
time = 1970:2000,
value = item[[opt.ind]]$results.TFDTW.synth[[target]]$res.synth.raw$value,
gap_original = item[[opt.ind]]$results.TFDTW.synth[[target]]$gap.raw,
gap_new = item[[opt.ind]]$results.TFDTW.synth[[target]]$gap.TFDTW
)
# df.gap.list[[i]] = item[[opt.ind]]$mse %>% filter(unit == target) #%>%
#mutate(unit = paste0("d", index, "-", target))
}
df.gap.list %>% do.call("rbind", .)
}
) %>%
do.call("rbind", .)
df2 = df
df = df %>% filter(time %in% 1990:1997)
df = df %>%
mutate(id = factor(str_split(unit, "-", simplify = TRUE)[,1]),
target = factor(str_split(unit, "-", simplify = TRUE)[,2]))
n = 39
k = 38
l = 10
res.aov.dsc = aov(gap_new ~ id*target, df)
summary.aov.dsc = summary(res.aov.dsc)
BMS = summary.aov.dsc[[1]]$`Mean Sq`[1]
JMS = summary.aov.dsc[[1]]$`Mean Sq`[2]
IMS = summary.aov.dsc[[1]]$`Mean Sq`[3]
EMS = summary.aov.dsc[[1]]$`Mean Sq`[4]
target = (BMS-IMS)/(l*k) + (JMS-IMS)/(l*n) + (IMS-EMS)/(l)
res.icc = target/(target + EMS)
res.vif = 1 + (l - 1)*res.icc
DF.dsc = nrow(df)/res.vif
# var.dsc = target + EMS
var.dsc = EMS
res.aov.sc = aov(gap_original ~ id*target, df)
summary.aov.sc = summary(res.aov.sc)
BMS = summary.aov.sc[[1]]$`Mean Sq`[1]
JMS = summary.aov.sc[[1]]$`Mean Sq`[2]
IMS = summary.aov.sc[[1]]$`Mean Sq`[3]
EMS = summary.aov.sc[[1]]$`Mean Sq`[4]
target = (BMS-IMS)/(l*k) + (JMS-IMS)/(l*n) + (IMS-EMS)/(l)
res.icc = target/(target + EMS)
res.vif = 1 + (l - 1)*res.icc
DF.sc = nrow(df)/res.vif
# var.sc = target + EMS
var.sc = EMS
f.value = var.dsc/var.sc
p.value = pf(f.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
f.value
DF.dsc
DF.sc
f.value = var.dsc/var.sc
p.value = pf(f.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
p.value
var.dsc
var.sc
DF.dsc
DF.sc
f.value
p.value
target = (BMS-IMS)/(l*k) + (JMS-IMS)/(l*n) + (IMS-EMS)/(l)
res.icc = target/(target + EMS)
res.vif = 1 + (l - 1)*res.icc
DF.dsc = nrow(df)/res.vif
DF.dsc
BMS = summary.aov.dsc[[1]]$`Mean Sq`[1]
JMS = summary.aov.dsc[[1]]$`Mean Sq`[2]
IMS = summary.aov.dsc[[1]]$`Mean Sq`[3]
EMS = summary.aov.dsc[[1]]$`Mean Sq`[4]
target = (BMS-IMS)/(l*k) + (JMS-IMS)/(l*n) + (IMS-EMS)/(l)
res.icc = target/(target + EMS)
res.vif = 1 + (l - 1)*res.icc
DF.dsc = nrow(df)/res.vif
DF.dsc
BMS = summary.aov.sc[[1]]$`Mean Sq`[1]
JMS = summary.aov.sc[[1]]$`Mean Sq`[2]
IMS = summary.aov.sc[[1]]$`Mean Sq`[3]
EMS = summary.aov.sc[[1]]$`Mean Sq`[4]
target = (BMS-IMS)/(l*k) + (JMS-IMS)/(l*n) + (IMS-EMS)/(l)
res.icc = target/(target + EMS)
res.vif = 1 + (l - 1)*res.icc
DF.sc = nrow(df)/res.vif
DF.sc
t.interval = 1990:1997
n.t = length(t.interval)
n.datasets = nrow(df)/length(t.interval)
var.sc = df %>% group_by(unit) %>%
summarise(variance = var(gap_original, na.rm = TRUE)*(n.t - 1)) %>%
ungroup %>%
.[["variance"]] %>%
sum(., na.rm = T)/(n.datasets*(n.t - 1))
var.dsc = df %>% group_by(unit) %>%
summarise(variance = var(gap_new, na.rm = TRUE)*(n.t - 1)) %>%
ungroup %>%
.[["variance"]] %>%
sum(., na.rm = T)/(n.datasets*(n.t - 1))
var.dsc
var.sc
f.value = var.dsc/var.sc
p.value = pf(f.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
DF.dsc
f.value
p.value = pf(f.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
p.value
var.dsc
var.sc
f.value
p.value
#         legend.background = element_rect(fill=NA))
#
# # ggsave("./figures/placebo_germany_1103.pdf",
# #        fig_germany, width = 8, height = 6,
# #        units = "in", limitsize = FALSE)
#
#
#
#
## Placebo v2 ------------------------------------------------------------------
results = NULL
folder = "./data/placebo/germany/"
res.files = list.files(folder)
for (res.file in res.files) {
results = c(results, list(readRDS(paste0(folder, res.file))))
}
df = future_map2(
results,
as.list(1:length(results)),
~{
item = .x
index = .y
mse = future_map2(
item,
names(item),
~{
item = .x
id = .y
item$mse %>% mutate(id = id)
}
) %>%
do.call("rbind", .)
units = unique(mse$unit)
df.gap.list = NULL
for (i in 1:length(units)) {
target = units[[i]]
scores = mse %>%
filter(unit != target) %>%
group_by(id) %>%
summarise(percent = mean(log.ratio < 0),
p.value = t.test(log.ratio)$p.value)
max.percent = which(scores$percent == max(scores$percent))
min.p = which(scores$p.value[max.percent] == min(scores$p.value[max.percent])[1])[1]
opt.ind = as.numeric(scores$id[max.percent[min.p]])
df.gap.list[[i]] = data.frame(
unit = paste0("d", index, "-", target),
time = 1960:2003,
value = item[[opt.ind]]$results.TFDTW.synth[[target]]$res.synth.raw$value,
gap_original = item[[opt.ind]]$results.TFDTW.synth[[target]]$gap.raw,
gap_new = item[[opt.ind]]$results.TFDTW.synth[[target]]$gap.TFDTW
)
# df.gap.list[[i]] = item[[opt.ind]]$mse %>% filter(unit == target) #%>%
#mutate(unit = paste0("d", index, "-", target))
}
df.gap.list %>% do.call("rbind", .)
}
) %>%
do.call("rbind", .)
df3 = df
df = df %>% filter(time %in% 1991:2000)
df = df %>%
mutate(id = factor(str_split(unit, "-", simplify = TRUE)[,1]),
target = factor(str_split(unit, "-", simplify = TRUE)[,2]))
n = 17
k = 16
l = 10
res.aov.dsc = aov(gap_new ~ id*target, df)
summary.aov.dsc = summary(res.aov.dsc)
BMS = summary.aov.dsc[[1]]$`Mean Sq`[1]
JMS = summary.aov.dsc[[1]]$`Mean Sq`[2]
IMS = summary.aov.dsc[[1]]$`Mean Sq`[3]
EMS = summary.aov.dsc[[1]]$`Mean Sq`[4]
target = (BMS-IMS)/(l*k) + (JMS-IMS)/(l*n) + (IMS-EMS)/(l)
res.icc = target/(target + EMS)
res.vif = 1 + (l - 1)*res.icc
DF.dsc = nrow(df)/res.vif
# var.dsc = target + EMS
var.dsc = EMS
res.aov.sc = aov(gap_original ~ id*target, df)
summary.aov.sc = summary(res.aov.sc)
BMS = summary.aov.sc[[1]]$`Mean Sq`[1]
JMS = summary.aov.sc[[1]]$`Mean Sq`[2]
IMS = summary.aov.sc[[1]]$`Mean Sq`[3]
EMS = summary.aov.sc[[1]]$`Mean Sq`[4]
target = (BMS-IMS)/(l*k) + (JMS-IMS)/(l*n) + (IMS-EMS)/(l)
res.icc = target/(target + EMS)
res.vif = 1 + (l - 1)*res.icc
DF.sc = nrow(df)/res.vif
# var.sc = target + EMS
var.sc = EMS
f.value = var.dsc/var.sc
p.value = pf(f.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
var.dsc
var.sc
f.value
DF.dsc
DF.sc
p.value = pf(f.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
p.value
var.dsc
var.sc
DF.dsc
DF.sc
f.value
p.value
BMS = summary.aov.dsc[[1]]$`Mean Sq`[1]
JMS = summary.aov.dsc[[1]]$`Mean Sq`[2]
IMS = summary.aov.dsc[[1]]$`Mean Sq`[3]
EMS = summary.aov.dsc[[1]]$`Mean Sq`[4]
target = (BMS-IMS)/(l*k) + (JMS-IMS)/(l*n) + (IMS-EMS)/(l)
res.icc = target/(target + EMS)
res.vif = 1 + (l - 1)*res.icc
DF.dsc = nrow(df)/res.vif
BMS = summary.aov.sc[[1]]$`Mean Sq`[1]
JMS = summary.aov.sc[[1]]$`Mean Sq`[2]
IMS = summary.aov.sc[[1]]$`Mean Sq`[3]
EMS = summary.aov.sc[[1]]$`Mean Sq`[4]
target = (BMS-IMS)/(l*k) + (JMS-IMS)/(l*n) + (IMS-EMS)/(l)
res.icc = target/(target + EMS)
res.vif = 1 + (l - 1)*res.icc
DF.sc = nrow(df)/res.vif
t.interval = 1991:2000
n.t = length(t.interval)
n.datasets = nrow(df)/length(t.interval)
var.sc = df %>% group_by(unit) %>%
summarise(variance = var(gap_original, na.rm = T)*(n.t - 1)) %>%
ungroup %>%
.[["variance"]] %>%
sum(., na.rm = T)/(n.datasets*(n.t - 1))
var.dsc = df %>% group_by(unit) %>%
summarise(variance = var(gap_new, na.rm = T)*(n.t - 1)) %>%
ungroup %>%
.[["variance"]] %>%
sum(., na.rm = T)/(n.datasets*(n.t - 1))
f.value = var.dsc/var.sc
p.value = pf(f.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
var.dsc
var.sc
f.value
f.value = var.dsc/var.sc
p.value = pf(f.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
p.value
mean(df$gap_original, na.rm = T)
mean(df$gap_new, na.rm = T)
mean(df2$gap_original, na.rm = T)
mean(df2$gap_new, na.rm = T)
#   theme(legend.position = "none",
#         legend.box = "horizontal",
#         legend.background = element_rect(fill=NA))
#
# # ggsave("./figures/placebo_basque_1103.pdf",
# #        fig_basque, width = 8, height = 6,
# #        units = "in", limitsize = FALSE)
#
#
## Placebo v2 ------------------------------------------------------------------
results = NULL
folder = "./data/placebo/basque/"
res.files = list.files(folder)
for (res.file in res.files) {
results = c(results, list(readRDS(paste0(folder, res.file))))
}
df = future_map2(
results,
as.list(1:length(results)),
~{
item = .x
index = .y
mse = future_map2(
item,
names(item),
~{
item = .x
id = .y
item$mse %>% mutate(id = id)
}
) %>%
do.call("rbind", .)
units = unique(mse$unit)
df.gap.list = NULL
for (i in 1:length(units)) {
target = units[[i]]
scores = mse %>%
filter(unit != target) %>%
group_by(id) %>%
summarise(percent = mean(log.ratio < 0),
p.value = t.test(log.ratio)$p.value)
max.percent = which(scores$percent == max(scores$percent))
min.p = which(scores$p.value[max.percent] == min(scores$p.value[max.percent])[1])[1]
opt.ind = as.numeric(scores$id[max.percent[min.p]])
df.gap.list[[i]] = data.frame(
unit = paste0("d", index, "-", target),
time = 1955:1997,
value = item[[opt.ind]]$results.TFDTW.synth[[target]]$res.synth.raw$value,
gap_original = item[[opt.ind]]$results.TFDTW.synth[[target]]$gap.raw,
gap_new = item[[opt.ind]]$results.TFDTW.synth[[target]]$gap.TFDTW
)
# df.gap.list[[i]] = item[[opt.ind]]$mse %>% filter(unit == target) #%>%
#mutate(unit = paste0("d", index, "-", target))
}
df.gap.list %>% do.call("rbind", .)
}
) %>%
do.call("rbind", .)
df4 = df
t.interval = 1971:1980
df = df %>% filter(time %in% t.interval)
n.t = length(t.interval)
n.datasets = nrow(df)/length(t.interval)
df = df %>%
mutate(id = factor(str_split(unit, "-", simplify = TRUE)[,1]),
target = factor(str_split(unit, "-", simplify = TRUE)[,2]))
n = 18
k = 17
l = 10
res.aov.dsc = aov(gap_new ~ id*target, df)
summary.aov.dsc = summary(res.aov.dsc)
BMS = summary.aov.dsc[[1]]$`Mean Sq`[1]
JMS = summary.aov.dsc[[1]]$`Mean Sq`[2]
IMS = summary.aov.dsc[[1]]$`Mean Sq`[3]
EMS = summary.aov.dsc[[1]]$`Mean Sq`[4]
target = (BMS-IMS)/(l*k) + (JMS-IMS)/(l*n) + (IMS-EMS)/(l)
res.icc = target/(target + EMS)
res.vif = 1 + (l - 1)*res.icc
DF.dsc = nrow(df)/res.vif
# var.dsc = target + EMS
var.dsc = EMS
res.aov.sc = aov(gap_original ~ id*target, df)
summary.aov.sc = summary(res.aov.sc)
BMS = summary.aov.sc[[1]]$`Mean Sq`[1]
JMS = summary.aov.sc[[1]]$`Mean Sq`[2]
IMS = summary.aov.sc[[1]]$`Mean Sq`[3]
EMS = summary.aov.sc[[1]]$`Mean Sq`[4]
target = (BMS-IMS)/(l*k) + (JMS-IMS)/(l*n) + (IMS-EMS)/(l)
res.icc = target/(target + EMS)
res.vif = 1 + (l - 1)*res.icc
DF.sc = nrow(df)/res.vif
# var.sc = target + EMS
var.sc = EMS
f.value = var.dsc/var.sc
p.value = pf(f.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
var.dsc
var.sc
DF.dsc
DF.sc
f.value
p.value
BMS = summary.aov.dsc[[1]]$`Mean Sq`[1]
JMS = summary.aov.dsc[[1]]$`Mean Sq`[2]
IMS = summary.aov.dsc[[1]]$`Mean Sq`[3]
EMS = summary.aov.dsc[[1]]$`Mean Sq`[4]
target = (BMS-IMS)/(l*k) + (JMS-IMS)/(l*n) + (IMS-EMS)/(l)
res.icc = target/(target + EMS)
res.vif = 1 + (l - 1)*res.icc
DF.dsc = nrow(df)/res.vif
BMS = summary.aov.dsc[[1]]$`Mean Sq`[1]
JMS = summary.aov.dsc[[1]]$`Mean Sq`[2]
IMS = summary.aov.dsc[[1]]$`Mean Sq`[3]
EMS = summary.aov.dsc[[1]]$`Mean Sq`[4]
target = (BMS-IMS)/(l*k) + (JMS-IMS)/(l*n) + (IMS-EMS)/(l)
res.icc = target/(target + EMS)
res.vif = 1 + (l - 1)*res.icc
DF.dsc = nrow(df)/res.vif
BMS = summary.aov.sc[[1]]$`Mean Sq`[1]
JMS = summary.aov.sc[[1]]$`Mean Sq`[2]
IMS = summary.aov.sc[[1]]$`Mean Sq`[3]
EMS = summary.aov.sc[[1]]$`Mean Sq`[4]
target = (BMS-IMS)/(l*k) + (JMS-IMS)/(l*n) + (IMS-EMS)/(l)
res.icc = target/(target + EMS)
res.vif = 1 + (l - 1)*res.icc
DF.sc = nrow(df)/res.vif
var.sc = df %>% group_by(unit) %>%
summarise(variance = var(gap_original, na.rm = T)*(n.t - 1)) %>%
ungroup %>%
.[["variance"]] %>%
sum(., na.rm = T)/(n.datasets*(n.t - 1))
var.dsc = df %>% group_by(unit) %>%
summarise(variance = var(gap_new, na.rm = T)*(n.t - 1)) %>%
ungroup %>%
.[["variance"]] %>%
sum(., na.rm = T)/(n.datasets*(n.t - 1))
f.value = var.dsc/var.sc
p.value = pf(f.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
var.dsc
var.sc
DF.dsc
DF.sc
f.value
p.value
f.value = var.dsc/var.sc
p.value = pf(f.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
p.value
17*16
18*17
40*39
results = NULL
folder = "./data/placebo/basque/"
res.files = list.files(folder)
for (res.file in res.files) {
results = c(results, list(readRDS(paste0(folder, res.file))))
}
df = future_map2(
results,
as.list(1:length(results)),
~{
item = .x
index = .y
mse = future_map2(
item,
names(item),
~{
item = .x
id = .y
item$mse %>% mutate(id = id)
}
) %>%
do.call("rbind", .)
units = unique(mse$unit)
df.gap.list = NULL
for (i in 1:length(units)) {
target = units[[i]]
scores = mse %>%
filter(unit != target) %>%
group_by(id) %>%
summarise(percent = mean(log.ratio < 0),
p.value = t.test(log.ratio)$p.value)
max.percent = which(scores$percent == max(scores$percent))
min.p = which(scores$p.value[max.percent] == min(scores$p.value[max.percent])[1])[1]
opt.ind = as.numeric(scores$id[max.percent[min.p]])
df.gap.list[[i]] = data.frame(
unit = paste0("d", index, "-", target),
time = 1955:1997,
value = item[[opt.ind]]$results.TFDTW.synth[[target]]$res.synth.raw$value,
gap_original = item[[opt.ind]]$results.TFDTW.synth[[target]]$gap.raw,
gap_new = item[[opt.ind]]$results.TFDTW.synth[[target]]$gap.TFDTW
)
# df.gap.list[[i]] = item[[opt.ind]]$mse %>% filter(unit == target) #%>%
#mutate(unit = paste0("d", index, "-", target))
}
df.gap.list %>% do.call("rbind", .)
}
) %>%
do.call("rbind", .)
# ICC::ICCest(unit, log.ratio, data = df, CI.type = "S")
t.interval = 1971:1980
df = df %>% filter(time %in% t.interval)
n.t = length(t.interval)
n.datasets = nrow(df)/length(t.interval)
df = df %>%
mutate(id = factor(str_split(unit, "-", simplify = TRUE)[,1]),
target = factor(str_split(unit, "-", simplify = TRUE)[,2]))
n = 18
k = 17
l = 10
res.aov.dsc = aov(gap_new ~ id*target, df)
summary.aov.dsc = summary(res.aov.dsc)
BMS = summary.aov.dsc[[1]]$`Mean Sq`[1]
JMS = summary.aov.dsc[[1]]$`Mean Sq`[2]
IMS = summary.aov.dsc[[1]]$`Mean Sq`[3]
EMS = summary.aov.dsc[[1]]$`Mean Sq`[4]
target = (BMS-IMS)/(l*k) + (JMS-IMS)/(l*n) + (IMS-EMS)/(l)
res.icc = target/(target + EMS)
res.vif = 1 + (l - 1)*res.icc
DF.dsc = nrow(df)/res.vif
# var.dsc = target + EMS
var.dsc = EMS
res.aov.sc = aov(gap_original ~ id*target, df)
summary.aov.sc = summary(res.aov.sc)
BMS = summary.aov.sc[[1]]$`Mean Sq`[1]
JMS = summary.aov.sc[[1]]$`Mean Sq`[2]
IMS = summary.aov.sc[[1]]$`Mean Sq`[3]
EMS = summary.aov.sc[[1]]$`Mean Sq`[4]
target = (BMS-IMS)/(l*k) + (JMS-IMS)/(l*n) + (IMS-EMS)/(l)
res.icc = target/(target + EMS)
res.vif = 1 + (l - 1)*res.icc
DF.sc = nrow(df)/res.vif
# var.sc = target + EMS
var.sc = EMS
f.value = var.dsc/var.sc
p.value = pf(f.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
var.dsc
var.sc
DF.dsc
DF.sc
f.value
p.value
var.sc = df %>% group_by(unit) %>%
summarise(variance = var(gap_original, na.rm = T)*(n.t - 1)) %>%
ungroup %>%
.[["variance"]] %>%
sum(., na.rm = T)/(n.datasets*(n.t - 1))
var.dsc = df %>% group_by(unit) %>%
summarise(variance = var(gap_new, na.rm = T)*(n.t - 1)) %>%
ungroup %>%
.[["variance"]] %>%
sum(., na.rm = T)/(n.datasets*(n.t - 1))
f.value = var.dsc/var.sc
p.value = pf(f.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
var.dsc
var.sc
DF.dsc
f.value
