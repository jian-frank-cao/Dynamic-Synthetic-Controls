# neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
# ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
# p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
# ind.min.p.value = which(p.value == min(p.value, na.rm = T))
# ind = ind.max.neg.ratio[ind.min.p.value[1]]
# mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
#   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# ind = which(score == max(score, na.rm = T))[1]
mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
filter(unit == "A") %>% .[["mse.preT.TFDTW"]]
ind = which(mse.pre == min(mse.pre, na.rm = T))[1]
synth_original = item[[ind]][["res.synth.target.raw"]][["synthetic"]]
synth_new = item[[ind]][["res.synth.target.TFDTW"]][["synthetic"]]
value_raw = item[[ind]][["res.synth.target.raw"]][["value"]]
gap_original = value_raw - synth_original
gap_new = value_raw - synth_new
diff_original = value_raw - synth_original - causal_effect
diff_new = value_raw - synth_new - causal_effect
mse_original = mean(diff_original[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse_new = mean(diff_new[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse = data.frame(mse_original = mse_original,
mse_new = mse_new,
log_ratio = log(mse_new/mse_original))
list(df = data.frame(time = 0:(length(value_raw)-1),
id = id,
value_raw = value_raw,
synth_original = synth_original,
synth_new = synth_new,
gap_origin = gap_original,
gap_new = gap_new,
diff_original = diff_original,
diff_new = diff_new),
# df = data.frame(time = 0:(length(value_raw)-1),
#                 id = id,
#                 synth.sc = synth_original,
#                 synth.dsc = synth_new,
#                 value = value_raw,
#                 treatment = causal_effect),
mse = mse)
}
)
df = lapply(res, "[[", "df") %>% do.call("rbind", .)
df = df %>% filter(time %in% 61:70)
# log(mse/mse) t test ==========================================
mse = lapply(res, "[[", "mse") %>% do.call("rbind", .)
t.test(mse$log_ratio)
View(mse)
df = lapply(res, "[[", "df") %>% do.call("rbind", .)
View(df)
df = df %>%
mutate(id = factor(id))
k = 10
res.aov.dsc = aov(diff_new ~ id, df)
summary.aov.dsc = summary(res.aov.dsc)
BMS = summary.aov.dsc[[1]]$`Mean Sq`[1]
WMS = summary.aov.dsc[[1]]$`Mean Sq`[2]
res.icc = (BMS - WMS)/(BMS + (k - 1)*WMS)
res.vif = 1 + (k - 1)*res.icc
DF.dsc = nrow(df)/res.vif
# var.dsc = BMS + (k - 1)*WMS
var.dsc = WMS
res.aov.sc = aov(diff_original ~ id, df)
summary.aov.sc = summary(res.aov.sc)
BMS = summary.aov.sc[[1]]$`Mean Sq`[1]
WMS = summary.aov.sc[[1]]$`Mean Sq`[2]
res.icc = (BMS - WMS)/(BMS + (k - 1)*WMS)
res.vif = 1 + (k - 1)*res.icc
DF.sc = nrow(df)/res.vif
# var.sc = BMS + (k - 1)*WMS
var.sc = WMS
f.value = var.dsc/var.sc
p.value = pf(f.value, DF.dsc, DF.sc, lower.tail = TRUE)*2
f.value
p.value
# log(mse/mse) t test ==========================================
mse = lapply(res, "[[", "mse") %>% do.call("rbind", .)
t.test(mse$log_ratio)
# placebo test figure
res = future_map2(
results,
as.list(1:length(results)),
~{
item = .x
id = .y
# neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
# # neg.ratio.rank = rank(neg.ratio, ties.method = "max")
# ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
# p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
# # p.value.rank = rank(1 - p.value, ties.method = "max")
# ind.min.p.value = which(p.value == min(p.value, na.rm = T))[1]
# # mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
# #   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# # mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# # score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# # ind = which(score == max(score, na.rm = T))[1]
# ind = ind.max.neg.ratio[1]
# neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
# ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
# p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
# ind.min.p.value = which(p.value == min(p.value, na.rm = T))
# ind = ind.max.neg.ratio[ind.min.p.value[1]]
# mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
#   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# ind = which(score == max(score, na.rm = T))[1]
mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
filter(unit == "A") %>% .[["mse.preT.TFDTW"]]
ind = which(mse.pre == min(mse.pre, na.rm = T))[1]
synth_original = item[[ind]][["res.synth.target.raw"]][["synthetic"]]
synth_new = item[[ind]][["res.synth.target.TFDTW"]][["synthetic"]]
value_raw = item[[ind]][["res.synth.target.raw"]][["value"]]
gap_original = value_raw - synth_original
gap_new = value_raw - synth_new
diff_original = value_raw - synth_original - causal_effect
diff_new = value_raw - synth_new - causal_effect
mse_original = mean(diff_original[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse_new = mean(diff_new[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse = data.frame(mse_original = mse_original,
mse_new = mse_new,
log_ratio = log(mse_new/mse_original))
list(#df = data.frame(time = 0:(length(value_raw)-1),
# id = id,
# value_raw = value_raw,
# synth_original = synth_original,
# synth_new = synth_new,
# gap_origin = gap_original,
# gap_new = gap_new,
# diff_original = diff_original,
# diff_new = diff_new),
df = data.frame(time = 0:(length(value_raw)-1),
id = id,
synth.sc = synth_original,
synth.dsc = synth_new,
value = value_raw,
treatment = causal_effect),
mse = mse)
}
)
df = lapply(res, "[[", "df") %>% do.call("rbind", .)
df = df %>% filter(time %in% 61:70)
df = lapply(res, "[[", "df") %>% do.call("rbind", .)
saveRDS(df, "./data/sim_beta_1_v2.Rds")
# log(mse/mse) t test ==========================================
mse = lapply(res, "[[", "mse") %>% do.call("rbind", .)
t.test(mse$log_ratio)
results = NULL
beta = 1
folder = "./data/res_sim/1124/"
res.files = list.files(folder)
for (res.file in res.files) {
results = c(results, list(readRDS(paste0(folder, res.file))))
}
length = 100
shock = 0
treat_time = 60
n_mse = 10
causal_effect = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
# placebo test figure
res = future_map2(
results,
as.list(1:length(results)),
~{
item = .x
id = .y
# neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
# # neg.ratio.rank = rank(neg.ratio, ties.method = "max")
# ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
# p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
# # p.value.rank = rank(1 - p.value, ties.method = "max")
# ind.min.p.value = which(p.value == min(p.value, na.rm = T))[1]
# # mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
# #   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# # mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# # score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# # ind = which(score == max(score, na.rm = T))[1]
# ind = ind.max.neg.ratio[1]
# neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
# ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
# p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
# ind.min.p.value = which(p.value == min(p.value, na.rm = T))
# ind = ind.max.neg.ratio[ind.min.p.value[1]]
# mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
#   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# ind = which(score == max(score, na.rm = T))[1]
mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
filter(unit == "A") %>% .[["mse.preT.TFDTW"]]
ind = which(mse.pre == min(mse.pre, na.rm = T))[1]
synth_original = item[[ind]][["res.synth.target.raw"]][["synthetic"]]
synth_new = item[[ind]][["res.synth.target.TFDTW"]][["synthetic"]]
value_raw = item[[ind]][["res.synth.target.raw"]][["value"]]
gap_original = value_raw - synth_original
gap_new = value_raw - synth_new
diff_original = value_raw - synth_original - causal_effect
diff_new = value_raw - synth_new - causal_effect
mse_original = mean(diff_original[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse_new = mean(diff_new[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse = data.frame(mse_original = mse_original,
mse_new = mse_new,
log_ratio = log(mse_new/mse_original))
list(#df = data.frame(time = 0:(length(value_raw)-1),
# id = id,
# value_raw = value_raw,
# synth_original = synth_original,
# synth_new = synth_new,
# gap_origin = gap_original,
# gap_new = gap_new,
# diff_original = diff_original,
# diff_new = diff_new),
df = data.frame(time = 0:(length(value_raw)-1),
id = id,
synth.sc = synth_original,
synth.dsc = synth_new,
value = value_raw,
treatment = causal_effect),
mse = mse)
}
)
df = lapply(res, "[[", "df") %>% do.call("rbind", .)
# log(mse/mse) t test ==========================================
mse = lapply(res, "[[", "mse") %>% do.call("rbind", .)
t.test(mse$log_ratio)
saveRDS(df,"./data/sim_beta_05_v2.Rds")
results = NULL
beta = 1
folder = "./data/res_sim/1010/"
res.files = list.files(folder)
for (res.file in res.files) {
results = c(results, list(readRDS(paste0(folder, res.file))))
}
length = 100
shock = 10
treat_time = 60
n_mse = 10
causal_effect = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
# placebo test figure
res = future_map2(
results,
as.list(1:length(results)),
~{
item = .x
id = .y
# neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
# # neg.ratio.rank = rank(neg.ratio, ties.method = "max")
# ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
# p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
# # p.value.rank = rank(1 - p.value, ties.method = "max")
# ind.min.p.value = which(p.value == min(p.value, na.rm = T))[1]
# # mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
# #   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# # mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# # score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# # ind = which(score == max(score, na.rm = T))[1]
# ind = ind.max.neg.ratio[1]
# neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
# ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
# p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
# ind.min.p.value = which(p.value == min(p.value, na.rm = T))
# ind = ind.max.neg.ratio[ind.min.p.value[1]]
# mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
#   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# ind = which(score == max(score, na.rm = T))[1]
mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
filter(unit == "A") %>% .[["mse.preT.TFDTW"]]
ind = which(mse.pre == min(mse.pre, na.rm = T))[1]
synth_original = item[[ind]][["res.synth.target.raw"]][["synthetic"]]
synth_new = item[[ind]][["res.synth.target.TFDTW"]][["synthetic"]]
value_raw = item[[ind]][["res.synth.target.raw"]][["value"]]
gap_original = value_raw - synth_original
gap_new = value_raw - synth_new
diff_original = value_raw - synth_original - causal_effect
diff_new = value_raw - synth_new - causal_effect
mse_original = mean(diff_original[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse_new = mean(diff_new[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse = data.frame(mse_original = mse_original,
mse_new = mse_new,
log_ratio = log(mse_new/mse_original))
list(#df = data.frame(time = 0:(length(value_raw)-1),
# id = id,
# value_raw = value_raw,
# synth_original = synth_original,
# synth_new = synth_new,
# gap_origin = gap_original,
# gap_new = gap_new,
# diff_original = diff_original,
# diff_new = diff_new),
df = data.frame(time = 0:(length(value_raw)-1),
id = id,
synth.sc = synth_original,
synth.dsc = synth_new,
value = value_raw,
treatment = causal_effect),
mse = mse)
}
)
df = lapply(res, "[[", "df") %>% do.call("rbind", .)
# log(mse/mse) t test ==========================================
mse = lapply(res, "[[", "mse") %>% do.call("rbind", .)
t.test(mse$log_ratio)
saveRDS(df,"./data/sim_beta_05_v2.Rds")
results = NULL
beta = 1
folder = "./data/res_sim/1011/"
res.files = list.files(folder)
for (res.file in res.files) {
results = c(results, list(readRDS(paste0(folder, res.file))))
}
length = 100
shock = 10
treat_time = 60
n_mse = 10
causal_effect = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
# placebo test figure
res = future_map2(
results,
as.list(1:length(results)),
~{
item = .x
id = .y
# neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
# # neg.ratio.rank = rank(neg.ratio, ties.method = "max")
# ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
# p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
# # p.value.rank = rank(1 - p.value, ties.method = "max")
# ind.min.p.value = which(p.value == min(p.value, na.rm = T))[1]
# # mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
# #   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# # mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# # score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# # ind = which(score == max(score, na.rm = T))[1]
# ind = ind.max.neg.ratio[1]
# neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
# ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
# p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
# ind.min.p.value = which(p.value == min(p.value, na.rm = T))
# ind = ind.max.neg.ratio[ind.min.p.value[1]]
# mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
#   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# ind = which(score == max(score, na.rm = T))[1]
mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
filter(unit == "A") %>% .[["mse.preT.TFDTW"]]
ind = which(mse.pre == min(mse.pre, na.rm = T))[1]
synth_original = item[[ind]][["res.synth.target.raw"]][["synthetic"]]
synth_new = item[[ind]][["res.synth.target.TFDTW"]][["synthetic"]]
value_raw = item[[ind]][["res.synth.target.raw"]][["value"]]
gap_original = value_raw - synth_original
gap_new = value_raw - synth_new
diff_original = value_raw - synth_original - causal_effect
diff_new = value_raw - synth_new - causal_effect
mse_original = mean(diff_original[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse_new = mean(diff_new[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse = data.frame(mse_original = mse_original,
mse_new = mse_new,
log_ratio = log(mse_new/mse_original))
list(#df = data.frame(time = 0:(length(value_raw)-1),
# id = id,
# value_raw = value_raw,
# synth_original = synth_original,
# synth_new = synth_new,
# gap_origin = gap_original,
# gap_new = gap_new,
# diff_original = diff_original,
# diff_new = diff_new),
df = data.frame(time = 0:(length(value_raw)-1),
id = id,
synth.sc = synth_original,
synth.dsc = synth_new,
value = value_raw,
treatment = causal_effect),
mse = mse)
}
)
df = lapply(res, "[[", "df") %>% do.call("rbind", .)
# log(mse/mse) t test ==========================================
mse = lapply(res, "[[", "mse") %>% do.call("rbind", .)
t.test(mse$log_ratio)
saveRDS(df,"./data/sim_beta_0_v2.Rds")
library(checkpoint)
checkpoint("2022-04-01")
library(tidyverse)
library(furrr)
plan(multisession, workers = 8)
options(future.rng.onMisuse="ignore")
options(stringsAsFactors = FALSE)
source("./R/misc.R")
source("./R/TFDTW.R")
source("./R/synth.R")
source("./R/implement.R")
source("./R/grid.search.R")
set.seed(20220407)
results = NULL
folder = "./data/placebo/tobacco/"
res.files = list.files(folder)
for (res.file in res.files) {
results = c(results, list(readRDS(paste0(folder, res.file))))
}
df = future_map2(
results,
as.list(1:length(results)),
~{
item = .x
index = .y
mse = future_map2(
item,
names(item),
~{
item = .x
id = .y
item$mse %>% mutate(id = id)
}
) %>%
do.call("rbind", .)
# score = mse %>%
#   mutate(log.ratio.preT = log(mse.preT.TFDTW/mse.preT.raw)) %>%
#   group_by(id) %>%
#   summarise(neg.count = sum(log.ratio.preT < 0),
#             mean.log.ratio = mean(log.ratio.preT, na.rm = TRUE))
#
# max.percent = which(score$neg.count == max(score$neg.count, na.rm = TRUE))
# min.p = which(score$mean.log.ratio[max.percent] == min(score$mean.log.ratio[max.percent], na.rm = TRUE)[1])
# opt.ind = score$id[max.percent[min.p]][1]
opt.ind = "1"
item[[opt.ind]]$results.TFDTW.synth %>%
map(
~{
task = .
target = task$dependent
data.frame(
unit = paste0("d", index, "-", target),
time = 1970:2000,
value = task$res.synth.raw$value,
gap_original = task$gap.raw,
gap_new = task$gap.TFDTW
)
}
) %>%
do.call("rbind", .)
# mse$data.id = index
# mse
# units = unique(mse$unit)
#
# df.gap.list = NULL
# for (i in 1:length(units)) {
#   target = units[[i]]
#   # scores = mse %>%
#   #   filter(unit != target) %>%
#   #   group_by(id) %>%
#   #   summarise(percent = mean(log.ratio < 0),
#   #             p.value = t.test(log.ratio)$p.value)
#   # max.percent = which(scores$percent == max(scores$percent))
#   # min.p = which(scores$p.value[max.percent] == min(scores$p.value[max.percent])[1])[1]
#   # opt.ind = as.numeric(scores$id[max.percent[min.p]])
#   scores = mse %>% filter(unit == target)
#   min.mse.new = which(scores$mse.postT.TFDTW == min(scores$mse.postT.TFDTW))[1]
#   opt.ind = as.numeric(scores$id[min.mse.new])
#
#   df.gap.list[[i]] = data.frame(
#     unit = paste0("d", index, "-", target),
#     time = 1970:2000,
#     value = item[[opt.ind]]$results.TFDTW.synth[[target]]$res.synth.raw$value,
#     gap_original = item[[opt.ind]]$results.TFDTW.synth[[target]]$gap.raw,
#     gap_new = item[[opt.ind]]$results.TFDTW.synth[[target]]$gap.TFDTW
#   )
#   # df.gap.list[[i]] = data.frame(
#   #   time = 1970:2000,
#   #   id = paste0("d", index, "-", target),
#   #   synth.sc = item[[opt.ind]]$results.TFDTW.synth[[target]]$res.synth.raw$synthetic,
#   #   synth.dsc = item[[opt.ind]]$results.TFDTW.synth[[target]]$res.synth.TFDTW$synthetic,
#   #   value = item[[opt.ind]]$results.TFDTW.synth[[target]]$res.synth.raw$value
#   # )
#   # df.gap.list[[i]] = item[[opt.ind]]$mse %>% filter(unit == target) #%>%
#   #mutate(unit = paste0("d", index, "-", target))
# }
# df.gap.list %>% do.call("rbind", .)
}
) %>%
do.call("rbind", .)
df = df %>% filter(time %in% 1990:1997)
df2 = df %>%
group_by(unit) %>%
summarise(mse.sc = mean(gap_original^2, na.rm = TRUE),
mse.dsc = mean(gap_new^2, na.rm = TRUE)) %>%
mutate(log.ratio = log(mse.dsc/mse.sc),
id = factor(str_split(unit, "-", simplify = TRUE)[,1]),
target = factor(str_split(unit, "-", simplify = TRUE)[,2]))
res.aov = aov(log.ratio ~ id*target, df2)
summary.aov = summary(res.aov)
BMS = summary.aov[[1]]$`Mean Sq`[1]
JMS = summary.aov[[1]]$`Mean Sq`[2]
EMS = summary.aov[[1]]$`Mean Sq`[3]
n = 138
k = 38
res.icc = (BMS - EMS)/(BMS + (k - 1)*EMS + k*(JMS - EMS)/n)
res.vif = 1 + (k - 1)*res.icc
DF = nrow(df2)/res.vif
t.value = t.test(df2$log.ratio)$statistic
p.value = pt(t.value, df = DF, lower.tail = FALSE)*2
t.value
