theme(legend.position = "none",
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.1, vjust = -10),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
fig.dtwA
## dtwA ------------------------------------------------------------------------
fig.dtwA = df %>%
filter(group %in% c("Y", "X0")) %>%
ggplot(aes(x = time, y = value, color = group)) +
geom_line(data = df %>% filter(!is.na(dtwA)),
aes(group = dtwA), color = "grey80",
linetype = "dashed", size = 1) +
geom_segment(aes(x = 500, y = -10, xend = 500, yend = 50),
color = "grey30", size = 0.5, linetype = "solid") +
geom_line(size = 1) +
geom_point(aes(x = t_treat, y = df$value[t_treat]),
color = "grey10", size = 3) +
geom_point(aes(x = cutoff, y = df$value[cutoff+1000]),
color = "#fe4a49", size = 3) +
scale_color_manual(name = NULL, values = c("grey10", "#fe4a49")) +
annotate("text", x = 475, y = df$value[t_treat]+5, label = "T",
size = 5, col = "grey10", parse=TRUE) +
annotate("text", x = 460, y = df$value[1000+cutoff]-3, label = "C",
size = 5, col = "#fe4a49", parse=TRUE) +
annotate("text", x = 250, y = 15, label = "P[pre]",
size = 6, col = "grey20", parse = TRUE) +
coord_cartesian(ylim = c(0, 45), xlim = c(-150, 1150)) +
ggtitle(expression(paste("1. Match ", Y[pre], " and ", X[pre]))) +
theme_bw() +
theme(legend.position = "none",
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.1, vjust = -20),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
fig.dtwA
## dtwA ------------------------------------------------------------------------
fig.dtwA = df %>%
filter(group %in% c("Y", "X0")) %>%
ggplot(aes(x = time, y = value, color = group)) +
geom_line(data = df %>% filter(!is.na(dtwA)),
aes(group = dtwA), color = "grey80",
linetype = "dashed", size = 1) +
geom_segment(aes(x = 500, y = -10, xend = 500, yend = 50),
color = "grey30", size = 0.5, linetype = "solid") +
geom_line(size = 1) +
geom_point(aes(x = t_treat, y = df$value[t_treat]),
color = "grey10", size = 3) +
geom_point(aes(x = cutoff, y = df$value[cutoff+1000]),
color = "#fe4a49", size = 3) +
scale_color_manual(name = NULL, values = c("grey10", "#fe4a49")) +
annotate("text", x = 475, y = df$value[t_treat]+5, label = "T",
size = 5, col = "grey10", parse=TRUE) +
annotate("text", x = 460, y = df$value[1000+cutoff]-3, label = "C",
size = 5, col = "#fe4a49", parse=TRUE) +
annotate("text", x = 250, y = 15, label = "P[pre]",
size = 6, col = "grey20", parse = TRUE) +
coord_cartesian(ylim = c(0, 45), xlim = c(-150, 1150)) +
ggtitle(expression(paste("1. Match ", Y[pre], " and ", X[pre]))) +
theme_bw() +
theme(legend.position = "none",
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.1, vjust = -20),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
## dtwB ------------------------------------------------------------------------
fig.dtwB = df %>%
filter(group %in% c("Y", "X0")) %>%
ggplot(aes(x = time, y = value, color = group)) +
# geom_segment(aes(x = cutoff, y = 0, xend = cutoff, yend = 25),
#              color = "#2ab7ca", size = 1, linetype = "dashed") +
geom_segment(aes(x = 500, y = -10, xend = 500, yend = 50),
color = "grey80", size = 0.5, linetype = "solid") +
geom_rect(aes(xmin = 560, xmax = 690, ymin = 7, ymax = 19),
color = NA, fill = "grey80") +
geom_rect(aes(xmin = 305, xmax = 435, ymin = 3, ymax = 14),
color = NA, fill = "grey80") +
geom_rect(aes(xmin = 810, xmax = 920, ymin = 13, ymax = 22),
color = NA, fill = "grey90") +
geom_rect(aes(xmin = 80, xmax = 190, ymin = -1, ymax = 8),
color = NA, fill = "grey90") +
geom_line(size = 1) +
geom_point(aes(x = t_treat, y = df$value[t_treat]),
color = "grey80", size = 3) +
geom_point(aes(x = cutoff, y = df$value[cutoff+1000]),
color = "#fe4a49", size = 3) +
geom_rect(aes(xmin = 560, xmax = 690, ymin = 7, ymax = 19),
color = "grey30", fill = NA) +
geom_rect(aes(xmin = 305, xmax = 435, ymin = 3, ymax = 14),
color = "grey30", fill = NA) +
geom_curve(aes(x = 560, y = 19,
xend = 435, yend = 14),
curvature = 0.2,
linetype = "solid",
color = "grey30",
arrow = arrow(length = unit(0.03, "npc"))) +
geom_rect(aes(xmin = 810, xmax = 920, ymin = 13, ymax = 22),
color = "grey30", fill = NA, linetype = "dashed") +
geom_rect(aes(xmin = 80, xmax = 190, ymin = -1, ymax = 8),
color = "grey30", fill = NA, linetype = "dashed") +
geom_curve(aes(x = 810, y = 13,
xend = 190, yend = -1),
curvature = -0.2,
linetype = "dashed",
color = "grey30",
arrow = arrow(length = unit(0.03, "npc"))) +
# annotate("text", x = 475, y = df$value[3000+t_treat]+3, label = "T",
#          size = 7, col = "#2ab7ca", parse=TRUE) +
annotate("text", x = 490, y = df$value[1000+cutoff]+3, label = "C",
size = 5, col = "#fe4a49", parse=TRUE) +
annotate("text", x = 500, y = 3, label = "P[Q%->%R]",
size = 6, col = "grey20", parse = TRUE) +
scale_color_manual(name = NULL, values = c("grey80", "#fe4a49")) +
coord_cartesian(ylim = c(-3, 45), xlim = c(-150, 1150)) +
ggtitle(expression(paste("2. Match ", X[pre], " and ", X[post]))) +
theme_bw() +
theme(legend.position = "none",
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.1, vjust = -20),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
## dtwC ------------------------------------------------------------------------
fig.dtwC = df %>%
filter(group %in% c("Y", "X", "X (Warped)")) %>%
ggplot(aes(x = time, y = value, color = group)) +
geom_line(data = df %>% filter(!is.na(dtwC1)),
aes(group = dtwC1), color = "grey80",
linetype = "longdash", size = 1) +
geom_line(data = df %>% filter(!is.na(dtwC2)),
aes(group = dtwC2), color = "grey80",
linetype = "dotted", size = 1) +
geom_segment(aes(x = 500, y = -20, xend = 500, yend = 50),
color = "grey80", size = 0.5, linetype = "solid") +
# geom_line(data = df %>% filter(!is.na(dtwC)),
#           aes(group = dtwC), color = "grey80",
#           linetype = "twodash", size = 1) +
geom_line(size = 1) +
geom_point(aes(x = t_treat, y = df$value[t_treat]),
color = "grey80", size = 3) +
# geom_segment(aes(x = cutoff, y = df$value[2000+cutoff],
#                  xend = t_treat, yend = df$value[3000+t_treat]),
#              color = "grey80", size = 1.5, linetype = "solid") +
geom_point(aes(x = cutoff, y = df$value[cutoff+2000]),
color = "#fe4a49", size = 3) +
geom_point(aes(x = t_treat, y = df$value[t_treat+3000]),
color = "#2ab7ca", size = 3) +
annotate("text", x = 475, y = df$value[3000+t_treat]+3, label = "T",
size = 5, col = "#2ab7ca", parse=TRUE) +
annotate("text", x = 460, y = df$value[2000+cutoff]-3, label = "C",
size = 5, col = "#fe4a49", parse=TRUE) +
annotate("text", x = 250, y = 5, label = "P[pre]",
size = 6, col = "grey20", parse=TRUE) +
annotate("text", x = 750, y = 14, label = "P[post]==P[Q%->%R](P[pre])",
size = 6, col = "grey20", parse=TRUE) +
scale_color_manual(name = NULL, labels = c("Y", "X", expression(paste(X^w))),
values = c("grey80","#fe4a49", # "#f4b6c2"
"#2ab7ca")) + # "#adcbe3"
# scale_color_manual(name = NULL, values = c("grey80","grey80","#fe4a49",
#                                            "#fe4a49","#2ab7ca","#2ab7ca")) +
coord_cartesian(ylim = c(-10, 45), xlim = c(-150, 1150)) +
ggtitle(expression(paste("3. Warp ", X[pre], " and ", X[post]))) +
theme_bw() +
theme(legend.position = c(0.92,0.6),
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.1, vjust = -20),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
## Plot ------------------------------------------------------------------------
fig.all = ggpubr::ggarrange(fig.dtwA,
fig.dtwB,
fig.dtwC,
# labels = c("1. Match Ypre and Xpre",
#            "2. Match Xpre and Xpost",
#            "3. Warp Xpre and Xpost"),
# label.x = 0.1,
# label.y = 0.9,
# hjust = c(0, 0, 0),
# font.label = list(size = 16, color = "grey20",
#                   face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
ggsave("./figures/figure_TFDTW2.pdf",
fig.all, width = 8, height = 8,
units = "in", limitsize = FALSE)
ggsave("./figures/figure_TFDTW2.pdf",
fig.all, width = 8, height = 8,
units = "in", limitsize = FALSE)
## Plot ------------------------------------------------------------------------
fig.all = ggpubr::ggarrange(fig.dtwA,
fig.dtwB,
fig.dtwC,
labels = c("1. Match Ypre and Xpre",
"2. Match Xpre and Xpost",
"3. Warp Xpre and Xpost"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
ggsave("./figures/figure_TFDTW2.pdf",
fig.all, width = 8, height = 8,
units = "in", limitsize = FALSE)
ggsave("./figures/figure_TFDTW2.pdf",
fig.all, width = 8, height = 8,
units = "in", limitsize = FALSE)
## Plot ------------------------------------------------------------------------
fig.all = ggpubr::ggarrange(fig.dtwA,
fig.dtwB,
fig.dtwC,
labels = c(expression(paste("3. Warp ", X[pre], " and ", X[post])),
"2. Match Xpre and Xpost",
"3. Warp Xpre and Xpost"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
## dtwA ------------------------------------------------------------------------
fig.dtwA = df %>%
filter(group %in% c("Y", "X0")) %>%
ggplot(aes(x = time, y = value, color = group)) +
geom_line(data = df %>% filter(!is.na(dtwA)),
aes(group = dtwA), color = "grey80",
linetype = "dashed", size = 1) +
geom_segment(aes(x = 500, y = -10, xend = 500, yend = 50),
color = "grey30", size = 0.5, linetype = "solid") +
geom_line(size = 1) +
geom_point(aes(x = t_treat, y = df$value[t_treat]),
color = "grey10", size = 3) +
geom_point(aes(x = cutoff, y = df$value[cutoff+1000]),
color = "#fe4a49", size = 3) +
scale_color_manual(name = NULL, values = c("grey10", "#fe4a49")) +
annotate("text", x = 475, y = df$value[t_treat]+5, label = "T",
size = 5, col = "grey10", parse=TRUE) +
annotate("text", x = 460, y = df$value[1000+cutoff]-3, label = "C",
size = 5, col = "#fe4a49", parse=TRUE) +
annotate("text", x = 250, y = 15, label = "P[pre]",
size = 6, col = "grey20", parse = TRUE) +
coord_cartesian(ylim = c(0, 45), xlim = c(-150, 1150)) +
ggtitle(expression(paste("1. Match ", Y[pre], " and ", X[pre]))) +
theme_bw() +
theme(legend.position = "none",
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.1, vjust = -20),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
## dtwA ------------------------------------------------------------------------
fig.dtwA = df %>%
filter(group %in% c("Y", "X0")) %>%
ggplot(aes(x = time, y = value, color = group)) +
geom_line(data = df %>% filter(!is.na(dtwA)),
aes(group = dtwA), color = "grey80",
linetype = "dashed", size = 1) +
geom_segment(aes(x = 500, y = -10, xend = 500, yend = 50),
color = "grey30", size = 0.5, linetype = "solid") +
geom_line(size = 1) +
geom_point(aes(x = t_treat, y = df$value[t_treat]),
color = "grey10", size = 3) +
geom_point(aes(x = cutoff, y = df$value[cutoff+1000]),
color = "#fe4a49", size = 3) +
scale_color_manual(name = NULL, values = c("grey10", "#fe4a49")) +
annotate("text", x = 475, y = df$value[t_treat]+5, label = "T",
size = 5, col = "grey10", parse=TRUE) +
annotate("text", x = 460, y = df$value[1000+cutoff]-3, label = "C",
size = 5, col = "#fe4a49", parse=TRUE) +
annotate("text", x = 250, y = 15, label = "P[pre]",
size = 6, col = "grey20", parse = TRUE) +
coord_cartesian(ylim = c(0, 45), xlim = c(-150, 1150)) +
# ggtitle(expression(paste("1. Match ", Y[pre], " and ", X[pre]))) +
theme_bw() +
theme(legend.position = "none",
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# plot.title = element_text(hjust = 0.1, vjust = -20),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
fig.dtwA
## dtwA ------------------------------------------------------------------------
fig.dtwA = df %>%
filter(group %in% c("Y", "X0")) %>%
ggplot(aes(x = time, y = value, color = group)) +
geom_line(data = df %>% filter(!is.na(dtwA)),
aes(group = dtwA), color = "grey80",
linetype = "dashed", size = 1) +
geom_segment(aes(x = 500, y = -10, xend = 500, yend = 50),
color = "grey30", size = 0.5, linetype = "solid") +
geom_line(size = 1) +
geom_point(aes(x = t_treat, y = df$value[t_treat]),
color = "grey10", size = 3) +
geom_point(aes(x = cutoff, y = df$value[cutoff+1000]),
color = "#fe4a49", size = 3) +
scale_color_manual(name = NULL, values = c("grey10", "#fe4a49")) +
annotate("text", x = 475, y = df$value[t_treat]+5, label = "T",
size = 5, col = "grey10", parse=TRUE) +
annotate("text", x = 460, y = df$value[1000+cutoff]-3, label = "C",
size = 5, col = "#fe4a49", parse=TRUE) +
annotate("text", x = 250, y = 15, label = "P[pre]",
size = 6, col = "grey20", parse = TRUE) +
coord_cartesian(ylim = c(0, 45), xlim = c(-150, 1150)) +
ggtitle(expression(paste("1. Match ", Y[pre], " and ", X[pre]))) +
theme_bw() +
theme(legend.position = "none",
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.1, vjust = -20),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
fig.dtwA
## dtwA ------------------------------------------------------------------------
fig.dtwA = df %>%
filter(group %in% c("Y", "X0")) %>%
ggplot(aes(x = time, y = value, color = group)) +
geom_line(data = df %>% filter(!is.na(dtwA)),
aes(group = dtwA), color = "grey80",
linetype = "dashed", size = 1) +
geom_segment(aes(x = 500, y = -10, xend = 500, yend = 50),
color = "grey30", size = 0.5, linetype = "solid") +
geom_line(size = 1) +
geom_point(aes(x = t_treat, y = df$value[t_treat]),
color = "grey10", size = 3) +
geom_point(aes(x = cutoff, y = df$value[cutoff+1000]),
color = "#fe4a49", size = 3) +
scale_color_manual(name = NULL, values = c("grey10", "#fe4a49")) +
annotate("text", x = 475, y = df$value[t_treat]+5, label = "T",
size = 5, col = "grey10", parse=TRUE) +
annotate("text", x = 460, y = df$value[1000+cutoff]-3, label = "C",
size = 5, col = "#fe4a49", parse=TRUE) +
annotate("text", x = 250, y = 15, label = "P[pre]",
size = 6, col = "grey20", parse = TRUE) +
coord_cartesian(ylim = c(0, 45), xlim = c(-150, 1150)) +
# ggtitle(expression(paste("1. Match ", Y[pre], " and ", X[pre]))) +
theme_bw() +
theme(legend.position = "none",
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# plot.title = element_text(hjust = 0.1, vjust = -20),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
library(tidyverse)
short = sin(seq(0, 2*pi, length.out = 50))
long = sin(seq(0, 2*pi, length.out = 100))
x = c(short, long)
y = c(long, short)
# res_dtw = dtw::dtw(x, y, keep = TRUE, step.pattern = dtw::symmetric1)
# n_line = 150
# match_pairs = get_match_pairs(res_dtw, n_line)
# match_pairs = match_pairs[c(seq(1,100, length.out = 20),
#                             seq(101,150, length.out = 20)),]
# match_pairs = data.frame(ind_q = c(1:100, rep(101:150, each = 2)),
#                          ind_r = c(rep(1:50, each = 2), 51:150))
# match_pairs = match_pairs[c(which((1:nrow(match_pairs))%%10 == 1), 200),]
df_left = rbind(
data.frame(time = c(1:50, 50:149),
value = x + 5,
unit = "x"),
data.frame(time = c(1:100, 100:149),
value = y,
unit = "y")
)
points_x = c(seq(1,50, length.out = 5) %>% round() %>% .[1:4],
seq(50,150, length.out = 10) %>% round())
points_y = c(seq(1,100, length.out = 10) %>% round() %>% .[1:9],
seq(100,150, length.out = 5) %>% round())
df_match = rbind(
df_left[points_x[1:5],] %>% mutate(dtw = 1:5),
df_left[points_x[1:5],] %>% mutate(dtw = 6:10),
df_left[points_x[(1:5)*2+3],] %>% mutate(dtw = 11:15),
df_left[points_x[(1:5)*2+4],] %>% mutate(dtw = 16:20),
df_left[points_y[(1:5)*2-1]+150,] %>% mutate(dtw = 1:5),
df_left[points_y[(1:5)*2]+150,] %>% mutate(dtw = 6:10),
df_left[points_y[10:14]+150,] %>% mutate(dtw = 11:15),
df_left[points_y[10:14]+150,] %>% mutate(dtw = 16:20)
)
df_match = df_match %>%
mutate(group = case_when(dtw >= 11 ~ "blue",
dtw %in% c(3,8) ~ "black",
dtw == 10 ~ "red_end",
TRUE ~ "red"))
# df_left$dtw = NA
# df_left$dtw[match_pairs$ind_r] = 1:nrow(match_pairs)
# df_left$dtw[match_pairs$ind_q + 150] = 1:nrow(match_pairs)
size_line_ts = 1
size_line_warp = 1
size_point = 3
color_main = "grey40"
color_line_warp_0 = "#fe4a49"
color_line_warp_1 = "#fe4a49"
color_line_warp_2 = "#2ab7ca"
fig_left = df_left %>%
ggplot(aes(x = time, y = value, group = unit)) +
geom_line(data = df_match %>% filter(group %in% c("red")),
aes(group = dtw), color = color_line_warp_1,
linetype = "dashed", linewidth = size_line_warp - 0.1) +
geom_line(data = df_match %>% filter(group == "red_end"),
aes(group = dtw), color = color_line_warp_0,
linetype = "twodash", linewidth = size_line_warp - 0.1) +
geom_line(data = df_match %>% filter(group == "black"),
aes(group = dtw), color = "black",
linetype = "dashed", linewidth = size_line_warp - 0.1) +
geom_line(data = df_match %>% filter(group %in% c("blue")),
aes(group = dtw), color = color_line_warp_2,
linetype = "dashed", linewidth = size_line_warp - 0.1) +
geom_line(size = size_line_ts, color = color_main) +
geom_point(aes(x = time[26], y = value[26]),
color = "black", size = size_point) +
geom_point(aes(x = time[45], y = value[195]),
color = "black", size = size_point) +
geom_point(aes(x = time[57], y = value[207]),
color = "black", size = size_point) +
annotate("text", x = df_left$time[26] + 2, y = df_left$value[26] + 0.5, label = "y[3]", fontface = "bold",
size = 6, col = "black", parse=TRUE) +
annotate("text", x = df_left$time[45], y = df_left$value[195] - 0.5, label = "x[5]", fontface = "bold",
size = 6, col = "black", parse=TRUE) +
annotate("text", x = df_left$time[57], y = df_left$value[207] - 0.5, label = "x[6]", fontface = "bold",
size = 6, col = "black", parse=TRUE) +
annotate("text", x = 75, y = -1.5, label = "X", fontface = "bold",
size = 6, col = "black", parse=TRUE) +
annotate("text", x = 75, y = 6.5, label = "Y", fontface = "bold",
size = 6, col = "black", parse=TRUE) +
ggtitle("DTW") +
theme_minimal() +
theme(legend.position = "none",
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size=17, face="bold", hjust = 0.5),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
df_right = data.frame(ind_y = c(1:10, rep(10:14, each = 2)),
ind_x = c(rep(1:5, each = 2), 5:14))
df_right$colors = c(rep("#2ab7ca", 10), rep("#fe4a49", 10))
df_right$value = c(rep(1, 10), rep(1, 10))
df_right = df_right[-11,]
df_right$colors[10] = "#94818A"
grid = expand.grid(1:14, 1:14)
df_right = left_join(grid, df_right, by = c("Var1"="ind_x","Var2"="ind_y"))
df_right$colors[is.na(df_right$colors)] = "white"
fig_right = df_right %>%
ggplot(aes(x = Var2, y = Var1)) +
geom_tile(aes(fill=colors),color = "grey40",
lwd = 1.5,
linetype = 1) +
scale_fill_manual(values = c("#fe4a49", "#94818A", "#2ab7ca", "white")) +
geom_text(aes(label = value), size = 5, color = "black") +
geom_segment(aes(x = 4.6, y = 3, xend = 0.5, yend = 3), linewidth = 1,
arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = 5, y = 2.6, xend = 5, yend = 0.5), linewidth = 1,
arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = 6, y = 2.6, xend = 6, yend = 0.5), linewidth = 1,
arrow = arrow(length = unit(0.2, "cm"))) +
annotate("text", x = -0.1, y = 3, label = "y[3]", fontface = "bold",
size = 6, col = "black", parse=TRUE) +
annotate("text", x = 5, y = -0.1, label = "x[5]", fontface = "bold",
size = 6, col = "black", parse=TRUE) +
annotate("text", x = 6, y = -0.1, label = "x[6]", fontface = "bold",
size = 6, col = "black", parse=TRUE) +
xlab("X") +
ylab("Y") +
ggtitle("Warping Path") +
theme_minimal() +
theme(legend.position = "none",
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size=17, face="bold", hjust = 0.5),
axis.title=element_text(size = 17),
axis.text=element_blank(),
axis.ticks=element_blank())
fig_all = gridExtra::grid.arrange(fig_left, fig_right, ncol = 2)
