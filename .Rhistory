as.list(1:length(file.list)),
~{
file.name = .x
data.id = .y
data.list = readRDS(paste0(folder, file.name))
mse = future_map2(
data.list,
as.list(names(data.list)),
~{
result = .x
grid.id = .y
value = result$res.synth.target.raw$value
synth.raw = result$res.synth.target.raw$synthetic
synth.TFDTW = result$res.synth.target.TFDTW$synthetic
gap.raw = value - synth.raw - treatment
gap.TFDTW = value - synth.TFDTW - treatment
data.frame(grid.id = grid.id,
mse.preT.raw = mean(gap.raw[pre.start:pre.end]^2, na.rm = T),
mse.preT.TFDTW = mean(gap.TFDTW[pre.start:pre.end]^2, na.rm = T),
mse.postT.raw = mean(gap.raw[post.start:post.end]^2, na.rm = T),
mse.postT.TFDTW = mean(gap.TFDTW[post.start:post.end]^2, na.rm = T))
}
) %>% do.call("rbind", .)
mse$data.id = data.id
mse %>%
top_n(-1, mse.preT.TFDTW) %>%
top_n(-1, grid.id)
}
) %>% do.call("rbind", .)
saveRDS(df.mse, paste0("./data/df.mse_sim_n20_2x.Rds"))
# t.test for log(MSEdsc/MSEsc)
df.mse = readRDS(paste0("./data/df.mse_sim_n20_2x.Rds"))
df.mse = df.mse %>%
mutate(log.ratio = log(mse.postT.TFDTW/mse.postT.raw))
t.test(df.mse$log.ratio)
sum(df.mse$log.ratio<0)/nrow(df.mse)
wilcox.test(df.mse$log.ratio)
## Plot result -----------------------------------------------------------------
# df.gap
df.mse = readRDS(paste0("./data/df.mse_sim_n20_2x.Rds"))
folder = paste0("./data/res_sim/n20_2x/")
file.list = as.list(list.files(folder))
results = file.list %>%
future_map(
~{
file.name = .
readRDS(paste0(folder, file.name))
}
)
df.gap = NULL
for (i in 1:nrow(df.mse)) {
data.id = df.mse$data.id[i]
grid.id = df.mse$grid.id[i]
df.gap[[i]] = data.frame(
time = 1:20,
data.id = data.id,
grid.id = grid.id,
value = results[[data.id]][[grid.id]][["res.synth.target.raw"]][[1]],
synth.sc = results[[data.id]][[grid.id]][["res.synth.target.raw"]][[3]],
synth.dsc = results[[data.id]][[grid.id]][["res.synth.target.TFDTW"]][[3]]
)
print(i)
}
df.gap = df.gap %>%
do.call("rbind", .) %>%
mutate(
gap.sc = value - synth.sc,
gap.dsc = value - synth.dsc,
group = paste0(data.id, "-", grid.id)
)
saveRDS(df.gap, paste0("./data/df.gap_sim_n20_2x.Rds"))
# plot
df.gap = readRDS(paste0("./data/df.gap_sim_n20_2x.Rds"))
shock = 10
length = 20
treat_time = 10
n_mse = 5
treatment = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.15*length)),
rep(shock, round(0.85*length - treat_time)))
df.quantile = df.gap %>%
group_by(time) %>%
summarise(mean.sc = mean(gap.sc, na.rm = T),
mean.dsc = mean(gap.dsc, na.rm = T),
quantile.sc.975 = quantile(gap.sc, 0.975, na.rm = T),
quantile.sc.025 = quantile(gap.sc, 0.025, na.rm = T),
quantile.dsc.975 = quantile(gap.dsc, 0.975, na.rm = T),
quantile.dsc.025 = quantile(gap.dsc, 0.025, na.rm = T)) %>%
mutate(group = "quantile",
treatment = treatment)
color.sc = "#2ab7ca"
color.dsc = "#fe4a49"
colors = c("TE" = "grey20",
"Avg. TE (SC)" = color.sc,
"Avg. TE (DSC)" = color.dsc)
linetypes = c("TE" = "solid",
"Avg. TE (SC)" = "dashed",
"Avg. TE (DSC)" = "dashed")
fills = c("95% Quantile (SC)" = color.sc,
"95% Quantile (DSC)" = color.dsc)
fig.big = df.gap %>%
ggplot(aes(x = time, group = group)) +
annotate("rect", xmin = 10, xmax = 15,
ymin = -25, ymax = 35, alpha = .3) +
geom_line(aes(y = gap.sc), col = color.sc, alpha=0.1) +
geom_line(aes(y = gap.dsc), col = color.dsc, alpha=0.1) +
geom_ribbon(aes(ymin = quantile.sc.025, ymax = quantile.sc.975,
fill = "95% Quantile (SC)"), data = df.quantile, alpha=0.6) +
geom_ribbon(aes(ymin = quantile.dsc.025, ymax = quantile.dsc.975,
fill = "95% Quantile (DSC)"), data = df.quantile, alpha=0.6) +
geom_line(aes(x = time, y = treatment, color = "TE", linetype = "TE"),
data = df.quantile, size = 1) +
geom_line(aes(x = time, y = mean.sc, color = "Avg. TE (SC)", linetype = "Avg. TE (SC)"),
data = df.quantile, size = 0.6) +
geom_line(aes(x = time, y = mean.dsc, color = "Avg. TE (DSC)", linetype = "Avg. TE (DSC)"),
data = df.quantile, size = 0.6) +
scale_color_manual(name = NULL, values = colors) +
scale_fill_manual(name = NULL, values = fills) +
scale_linetype_manual(name = NULL, values = linetypes) +
geom_vline(xintercept = 10, linetype="dashed", col = "grey20") +
geom_hline(yintercept = 0, linetype="dashed", col = "grey20") +
annotate("text", x = 9, y = 25, label = "Treatment",
col = "grey20", angle = 90) +
coord_cartesian(ylim = c(-20, 30)) +
xlab("Time") +
ylab("Treatment Effect (TE)") +
theme_bw() +
theme(legend.position=c(0.3,0.15),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
ggsave(paste0("./figures/sim_n20_2x.pdf"),
fig.big, width = 6, height = 4.5,
units = "in", limitsize = FALSE)
## Placebo ---------------------------------------------------------------------
folder = "./data/pred/germany/"
file.list = as.list(list.files(folder))
file.list
pre.start = 22
pre.end = 31
post.start = 32
post.end = 41
# de.mse
df.mse = future_map2(
file.list,
as.list(1:length(file.list)),
~{
file.name = .x
data.id = .y
data.list = readRDS(paste0(folder, file.name))
mse = future_map2(
data.list,
as.list(names(data.list)),
~{
result.synth = .x[["results.TFDTW.synth"]]
grid.id = .y
mse = result.synth %>%
map(
~{
task = .
unit = task$dependent
gap.raw = task$gap.raw
gap.TFDTW = task$gap.TFDTW
data.frame(unit = unit,
mse.preT.raw = mean(gap.raw[pre.start:pre.end]^2, na.rm = T),
mse.preT.TFDTW = mean(gap.TFDTW[pre.start:pre.end]^2, na.rm = T),
mse.postT.raw = mean(gap.raw[post.start:post.end]^2, na.rm = T),
mse.postT.TFDTW = mean(gap.TFDTW[post.start:post.end]^2, na.rm = T))
}
) %>% do.call("rbind", .)
mse %>% mutate(grid.id = grid.id)
}
) %>% do.call("rbind", .)
mse$data.id = data.id
mse %>%
group_by(unit) %>%
top_n(-1, mse.preT.TFDTW) %>%
top_n(-1, grid.id)
}
) %>% do.call("rbind", .)
saveRDS(df.mse, "./data/df.mse_germany_pred.Rds")
# t.test for log(MSEdsc/MSEsc)
df.mse = readRDS("./data/df.mse_germany_pred.Rds")
df.mse = df.mse %>%
mutate(log.ratio = log(mse.postT.TFDTW/mse.postT.raw),
data.id = as.character(data.id))
res.aov = aov(log.ratio ~ data.id*unit, df.mse)
summary.aov = summary(res.aov)
BMS = summary.aov[[1]]$`Mean Sq`[1]
JMS = summary.aov[[1]]$`Mean Sq`[2]
EMS = summary.aov[[1]]$`Mean Sq`[3]
n = summary.aov[[1]]$`Df`[1] + 1
k = summary.aov[[1]]$`Df`[2] + 1
res.icc = (BMS - EMS)/(BMS + (k - 1)*EMS + k*(JMS - EMS)/n)
res.vif = 1 + (k - 1)*res.icc
DF = nrow(df.mse)/res.vif
t.value = t.test(df.mse$log.ratio)$statistic
p.value = pt(t.value, df = DF, lower.tail = TRUE)*2
p.value
t.value
## Plot results ----------------------------------------------------------------
# df.target
results.target = readRDS("./data/pred/germany/res_germany_1.Rds")
target = "West Germany"
pre.start = 22
pre.end = 31
post.start = 32
post.end = 41
mse = future_map2(
results.target,
as.list(names(results.target)),
~{
result.synth = .x[["results.TFDTW.synth"]][[target]]
grid.id = .y
gap.raw = result.synth$gap.raw
gap.TFDTW = result.synth$gap.TFDTW
data.frame(grid.id = grid.id,
mse.preT.raw = mean(gap.raw[pre.start:pre.end]^2, na.rm = T),
mse.preT.TFDTW = mean(gap.TFDTW[pre.start:pre.end]^2, na.rm = T),
mse.postT.raw = mean(gap.raw[post.start:post.end]^2, na.rm = T),
mse.postT.TFDTW = mean(gap.TFDTW[post.start:post.end]^2, na.rm = T))
}
) %>% do.call("rbind", .)
opt.grid.id = mse %>%
top_n(-1, mse.preT.TFDTW) %>%
top_n(-1, grid.id) %>%
.[["grid.id"]]
df.target = data.frame(
time = 1960:2003,
unit = target,
data.id = 0,
grid.id = opt.grid.id,
value = results.target[[opt.grid.id]][[4]][[target]][[3]][["value"]],
synth.sc = results.target[[opt.grid.id]][[4]][[target]][[3]][["synthetic"]],
synth.dsc = results.target[[opt.grid.id]][[4]][[target]][[4]][["synthetic"]]
)
df.target = df.target %>%
mutate(
gap.sc = value - synth.sc,
gap.dsc = value - synth.dsc,
group = paste0(data.id, "-", grid.id, "-", unit)
)
saveRDS(df.target, "./data/df.target_germany_pred.Rds")
# df.gap
df.mse = readRDS("./data/df.mse_germany_pred.Rds")
folder = "./data/pred/germany/"
file.list = as.list(list.files(folder))
results = file.list %>%
future_map(
~{
file.name = .
readRDS(paste0(folder, file.name))
}
)
df.gap = NULL
for (i in 1:nrow(df.mse)) {
unit = df.mse$unit[i]
data.id = df.mse$data.id[i]
grid.id = df.mse$grid.id[i]
df.gap[[i]] = data.frame(
time = 1960:2003,
unit = unit,
data.id = data.id,
grid.id = grid.id,
value = results[[data.id]][[grid.id]][[4]][[unit]][[3]][["value"]],
synth.sc = results[[data.id]][[grid.id]][[4]][[unit]][[3]][["synthetic"]],
synth.dsc = results[[data.id]][[grid.id]][[4]][[unit]][[4]][["synthetic"]]
)
print(i)
}
df.gap = df.gap %>%
do.call("rbind", .) %>%
mutate(
gap.sc = value - synth.sc,
gap.dsc = value - synth.dsc,
group = paste0(data.id, "-", grid.id, "-", unit)
)
saveRDS(df.gap, "./data/df.gap_germany_pred.Rds")
# plot
set.seed(20230901)
df.target = readRDS("./data/df.target_germany_pred.Rds")
df.gap = readRDS("./data/df.gap_germany_pred.Rds")
df.quantile = df.gap %>%
group_by(time) %>%
summarise(quantile.sc.975 = quantile(gap.sc, 0.975, na.rm = T),
quantile.sc.025 = quantile(gap.sc, 0.025, na.rm = T),
quantile.dsc.975 = quantile(gap.dsc, 0.975, na.rm = T),
quantile.dsc.025 = quantile(gap.dsc, 0.025, na.rm = T)) %>%
mutate(group = "quantile")
color.sc = "#2ab7ca"
color.dsc = "#fe4a49"
colors = c("Target TE (SC)" = color.sc,
"Target TE (DSC)" = color.dsc)
fills = c("95% Quantile (SC)" = color.sc,
"95% Quantile (DSC)" = color.dsc)
set.seed(20230812)
group.sample = sample(unique(df.gap$group), 100)
fig.placebo = df.gap %>%
filter(group %in% group.sample) %>%
ggplot(aes(x = time, group = group)) +
annotate("rect", xmin = 1990, xmax = 2000,
ymin = -9000, ymax = 9000, alpha = .3) +
geom_line(aes(y = gap.sc), col = color.sc, alpha = 0.4) +
geom_line(aes(y = gap.dsc), col = color.dsc, alpha = 0.4) +
geom_ribbon(aes(ymin = quantile.sc.025,
ymax = quantile.sc.975,
fill="95% Quantile (SC)"),
data = df.quantile, alpha=0.5) +
geom_ribbon(aes(ymin = quantile.dsc.025,
ymax = quantile.dsc.975,
fill="95% Quantile (DSC)"),
data = df.quantile, alpha=0.5) +
geom_line(aes(y = gap.sc, color = "Target TE (SC)"),
data = df.target, size = 1) +
geom_line(aes(y = gap.dsc, color = "Target TE (DSC)"),
data = df.target, size = 1) +
scale_color_manual(name = NULL, values = colors) +
scale_fill_manual(name = NULL, values = fills) +
geom_vline(xintercept = 1990, linetype="dashed", col = "grey20") +
geom_hline(yintercept = 0, linetype="dashed", col = "grey20") +
annotate("text", x = 1995, y = 6800,
label = "t = -4.0951\nP < 0.0001", col = "grey20") +
annotate("text", x = 1989, y = 4800, angle = 90,
label = "Treatment", col = "grey20") +
coord_cartesian(xlim=c(1970, 2010),ylim=c(-8000,8000)) +
xlab("Year") +
ylab("Treatment Effect") +
theme_bw() +
theme(legend.position = c(0.25, 0.2),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
fig.placebo
fig.germany = fig.placebo
## Placebo ---------------------------------------------------------------------
folder = "./data/pred/basque/"
file.list = as.list(list.files(folder))
pre.start = 7
pre.end = 16
post.start = 17
post.end = 26
# df.mse
df.mse = future_map2(
file.list,
as.list(1:length(file.list)),
~{
file.name = .x
data.id = .y
data.list = readRDS(paste0(folder, file.name))
mse = future_map2(
data.list,
as.list(names(data.list)),
~{
result.synth = .x[["results.TFDTW.synth"]]
grid.id = .y
mse = result.synth %>%
map(
~{
task = .
unit = task$dependent
gap.raw = task$gap.raw
gap.TFDTW = task$gap.TFDTW
data.frame(unit = unit,
mse.preT.raw = mean(gap.raw[pre.start:pre.end]^2, na.rm = T),
mse.preT.TFDTW = mean(gap.TFDTW[pre.start:pre.end]^2, na.rm = T),
mse.postT.raw = mean(gap.raw[post.start:post.end]^2, na.rm = T),
mse.postT.TFDTW = mean(gap.TFDTW[post.start:post.end]^2, na.rm = T))
}
) %>% do.call("rbind", .)
mse %>% mutate(grid.id = grid.id)
}
) %>% do.call("rbind", .)
mse$data.id = data.id
mse %>%
group_by(unit) %>%
top_n(-1, mse.preT.TFDTW) %>%
top_n(-1, grid.id)
}
) %>% do.call("rbind", .)
## Placebo ---------------------------------------------------------------------
folder = "./data/pred/basque/"
file.list = as.list(list.files(folder))
pre.start = 7
pre.end = 16
post.start = 17
post.end = 26
# df.mse
df.mse = future_map2(
file.list,
as.list(1:length(file.list)),
~{
file.name = .x
data.id = .y
data.list = readRDS(paste0(folder, file.name))
mse = future_map2(
data.list,
as.list(names(data.list)),
~{
result.synth = .x[["results.TFDTW.synth"]]
grid.id = .y
mse = result.synth %>%
map(
~{
task = .
unit = task$dependent
gap.raw = task$gap.raw
gap.TFDTW = task$gap.TFDTW
data.frame(unit = unit,
mse.preT.raw = mean(gap.raw[pre.start:pre.end]^2, na.rm = T),
mse.preT.TFDTW = mean(gap.TFDTW[pre.start:pre.end]^2, na.rm = T),
mse.postT.raw = mean(gap.raw[post.start:post.end]^2, na.rm = T),
mse.postT.TFDTW = mean(gap.TFDTW[post.start:post.end]^2, na.rm = T))
}
) %>% do.call("rbind", .)
mse %>% mutate(grid.id = grid.id)
}
) %>% do.call("rbind", .)
mse$data.id = data.id
mse %>%
group_by(unit) %>%
top_n(-1, mse.preT.TFDTW) %>%
top_n(-1, grid.id)
}
) %>% do.call("rbind", .)
saveRDS(df.mse, "./data/df.mse_basque_pred.Rds")
# t.test for log(MSEdsc/MSEsc)
df.mse = readRDS("./data/df.mse_basque_pred.Rds")
df.mse = df.mse %>%
mutate(log.ratio = log(mse.postT.TFDTW/mse.postT.raw),
data.id = as.character(data.id))
res.aov = aov(log.ratio ~ data.id*unit, df.mse)
summary.aov = summary(res.aov)
BMS = summary.aov[[1]]$`Mean Sq`[1]
JMS = summary.aov[[1]]$`Mean Sq`[2]
EMS = summary.aov[[1]]$`Mean Sq`[3]
n = summary.aov[[1]]$`Df`[1] + 1
k = summary.aov[[1]]$`Df`[2] + 1
res.icc = (BMS - EMS)/(BMS + (k - 1)*EMS + k*(JMS - EMS)/n)
res.vif = 1 + (k - 1)*res.icc
DF = nrow(df.mse)/res.vif
t.value = t.test(df.mse$log.ratio)$statistic
p.value = pt(t.value, df = DF, lower.tail = TRUE)*2
t.value
p.value
## Plot results ----------------------------------------------------------------
# df.target
results.target = readRDS("./data/pred/basque/res_basque_1.Rds")
target = "Basque Country (Pais Vasco)"
pre.start = 7
pre.end = 16
post.start = 17
post.end = 26
mse = future_map2(
results.target,
as.list(names(results.target)),
~{
result.synth = .x[["results.TFDTW.synth"]][[target]]
grid.id = .y
gap.raw = result.synth$gap.raw
gap.TFDTW = result.synth$gap.TFDTW
data.frame(grid.id = grid.id,
mse.preT.raw = mean(gap.raw[pre.start:pre.end]^2, na.rm = T),
mse.preT.TFDTW = mean(gap.TFDTW[pre.start:pre.end]^2, na.rm = T),
mse.postT.raw = mean(gap.raw[post.start:post.end]^2, na.rm = T),
mse.postT.TFDTW = mean(gap.TFDTW[post.start:post.end]^2, na.rm = T))
}
) %>% do.call("rbind", .)
opt.grid.id = mse %>%
top_n(-1, mse.preT.TFDTW) %>%
top_n(-1, grid.id) %>%
.[["grid.id"]]
df.target = data.frame(
time = 1955:1997,
unit = target,
data.id = 0,
grid.id = opt.grid.id,
value = results.target[[opt.grid.id]][[4]][[target]][[3]][["value"]],
synth.sc = results.target[[opt.grid.id]][[4]][[target]][[3]][["synthetic"]],
synth.dsc = results.target[[opt.grid.id]][[4]][[target]][[4]][["synthetic"]]
)
df.target = df.target %>%
mutate(
gap.sc = value - synth.sc,
gap.dsc = value - synth.dsc,
group = paste0(data.id, "-", grid.id, "-", unit)
)
saveRDS(df.target, "./data/df.target_basque_pred.Rds")
# df.gap
df.mse = readRDS("./data/df.mse_basque_pred.Rds")
folder = "./data/placebo/basque/"
file.list = as.list(list.files(folder))
results = file.list %>%
future_map(
~{
file.name = .
readRDS(paste0(folder, file.name))
}
)
df.gap = NULL
for (i in 1:nrow(df.mse)) {
unit = df.mse$unit[i]
data.id = df.mse$data.id[i]
grid.id = df.mse$grid.id[i]
df.gap[[i]] = data.frame(
time = 1955:1997,
unit = unit,
data.id = data.id,
grid.id = grid.id,
value = results[[data.id]][[grid.id]][[4]][[unit]][[3]][["value"]],
synth.sc = results[[data.id]][[grid.id]][[4]][[unit]][[3]][["synthetic"]],
synth.dsc = results[[data.id]][[grid.id]][[4]][[unit]][[4]][["synthetic"]]
)
print(i)
}
