fig_all = gridExtra::grid.arrange(fig_left, fig_right, ncol = 2)
ggsave("./figures/warping_path.pdf",
fig_all, width = 8, height = 4,
units = "in", limitsize = FALSE)
fig_right = df_right %>%
ggplot(aes(x = Var2, y = Var1)) +
geom_tile(aes(fill=colors), color = color_main,
lwd = 1.5,
linetype = 1) +
scale_fill_manual(values = c("#fe4a49", "#94818A", "#2ab7ca", "white")) +
geom_text(aes(label = value), size = 5, color = color_main) +
geom_segment(aes(x = 4.6, y = 3, xend = 0.5, yend = 3),
size = 1, color = "grey30", color = color_main,
arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = 5, y = 2.6, xend = 5, yend = 0.5),
size = 1, color = "grey30", color = color_main,
arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = 6, y = 2.6, xend = 6, yend = 0.5),
size = 1, color = "grey30", color = color_main,
arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = 13.6, y = 14, xend = 0.5, yend = 14),
size = 1,  color = "grey30", color = color_main,
arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = 13.6, y = 13, xend = 0.5, yend = 13),
size = 1, color = "grey30", color = color_main,
arrow = arrow(length = unit(0.2, "cm"))) +
geom_segment(aes(x = 14, y = 12.6, xend = 14, yend = 0.5),
size = 1, color = "grey30", color = color_main,
arrow = arrow(length = unit(0.2, "cm"))) +
annotate("text", x = -0.1, y = 3, label = "y[3]", fontface = "bold",
size = 6, col = color_main, parse=TRUE) +
annotate("text", x = 5, y = -0.1, label = "x[5]", fontface = "bold",
size = 6, col = color_main, parse=TRUE) +
annotate("text", x = 6, y = -0.1, label = "x[6]", fontface = "bold",
size = 6, col = color_main, parse=TRUE) +
annotate("text", x = -0.4, y = 14, label = "y[14]", fontface = "bold",
size = 6, col = color_main, parse=TRUE) +
annotate("text", x = -0.4, y = 13, label = "y[13]", fontface = "bold",
size = 6, col = color_main, parse=TRUE) +
annotate("text", x = 14, y = -0.1, label = "x[14]", fontface = "bold",
size = 6, col = color_main, parse=TRUE) +
xlab("X") +
ylab("Y") +
ggtitle("Warping Path") +
theme_minimal() +
theme(legend.position = "none",
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size=17, face="bold", hjust = 0.5),
axis.title=element_text(size = 17),
axis.text=element_blank(),
axis.ticks=element_blank())
fig_all = gridExtra::grid.arrange(fig_left, fig_right, ncol = 2)
ggsave("./figures/warping_path.pdf",
fig_all, width = 8, height = 4,
units = "in", limitsize = FALSE)
data_apple = read.csv("/Users/jiancao/Downloads/dataverse_files/all_files_in_csv_format/CNR_QJE_apple.csv")
View(data_apple)
table(data_apple$country)
table(data_apple$date)
table(data_apple$category)
description(data_apple)
describe(data_apple)
summary(data_apple)
table(data_apple$intro)
table(data_apple$categoryid)
a = data.frame(table(data_apple$id))
View(a)
which(a$Var1 == "MC259")
a[6348,]
which(a$Var1 == "MD293")
a[6674,]
## Setup -----------------------------------------------------------------------
library(checkpoint)
checkpoint("2022-04-01")
library(tidyverse)
data_apple2 = haven::read_dta("/Users/jiancao/Downloads/dataverse_files/CNR_QJE_apple.dta")
View(data_apple2)
data = haven::read_dta("/Users/jiancao/Downloads/dataverse_files/CNR_QJE_apple.dta")
folder = "/Users/jiancao/Downloads/dataverse_files/"
iphone4 = read.csv(paste0(folder, "iPhone4.csv"))
View(iphone4)
View(data)
class(data$date[1])
data$date[1]
i = 1
target = iphone4[i,]
target$Model
strsplit(target$Model, split = ", ")
res = data %>% filter(id %in% models)
models = strsplit(target$Model, split = ", ")
res = data %>% filter(id %in% models)
View(res)
which(data$id == "MD126")
a = data.frame(table(data$id))
View(a)
View(data_apple)
data = data_apple
View(data)
sapply(data, class)
View(data_apple2)
data$date[1]
## Setup -----------------------------------------------------------------------
library(checkpoint)
checkpoint("2022-04-01")
library(tidyverse)
## Data ------------------------------------------------------------------------
folder = "/Users/jiancao/Downloads/dataverse_files/all_files_in_csv_format/"
data = haven::read_dta(paste0(folder, "CNR_QJE_apple.csv"))
data = read.csv(paste0(folder, "CNR_QJE_apple.csv"))
iphone4 = read.csv(paste0(folder, "iPhone4.csv"))
data$date[1]
as.Date(data$date[1])
as.Date(data$date[1], format = "%d %b %y")
## Run -------------------------------------------------------------------------
data$date = as.Date(data$date, format = "%d %b %y")
data$date[1]
i = 1
target = iphone4[i,]
models = strsplit(target$Model, split = ", ")
res = data %>% filter(id %in% models)
View(data)
which(data$id == "MD126")
models
models = strsplit(target$Model, split = ", ")[[1]]
models
res = data %>% filter(id %in% models)
View(res)
colnames(target)
df = NULL
for (i in 1:nrow(iphone4)) {
target = iphone4[i,]
models = strsplit(target$Model, split = ", ")[[1]]
res = data %>% filter(id %in% models)
res$a.number = target$A.Number
res$identifier = target$Identifier
res$finish = target$Finish
res$storage = target$Storage
df[[i]] = res
print(i)
}
View(df)
df = NULL
for (i in 1:nrow(iphone4)) {
target = iphone4[i,]
models = strsplit(target$Model, split = ", ")[[1]]
res = data %>% filter(id %in% models)
res$a.number = target$A.Number
res$identifier = target$Identifier
res$finish = target$Finish
res$storage = target$Storage
name = paste0(target$Identifier, "-", target$Finish, "-", target$Storage)
df[[name]] = res
print(i)
}
View(df)
df_8gb = rbind(df[[1]], df[[4]])
View(df_8gb)
table(df_8gb$categoryid)
table(df_8gb$idc)
colnames(df_8gb)
df_8gb = rbind(df[[1]], df[[4]]) %>%
group_by(country, date) %>%
summarise(price = mean(price, na.rm = TRUE))
View(df_8gb)
df_8gb %>%
ggplot(aes(x = date, y = value, color = country)) %>%
geom_line()
df_8gb %>%
ggplot(aes(x = date, y = value, color = country)) +
geom_line()
df_8gb %>%
ggplot(aes(x = date, y = price, color = country)) +
geom_line()
colnames(data)
a = distinct(data[,c(2,3)])
View(a)
intro_prices = data %>%
filter(intro == 1) %>%
rename(intro_price = price)
df = data %>%
left_join(intro_prices, by = "idc") %>%
mutate(price_ratio = price/intro_prices)
intro_prices = data %>%
filter(intro == 1) %>%
rename(intro_price = price)
df = data %>%
left_join(intro_prices, by = "idc") %>%
mutate(price_ratio = price/intro_price)
View(df)
intro_prices = data %>%
filter(intro == 1) %>%
rename(intro_price = price)
View(intro_prices)
df = data %>%
left_join(intro_prices, by = c("country", "idc")) %>%
mutate(price_ratio = price/intro_price)
View(df)
a = data %>%
group_by(id, country) %>%
summarise(count = sum(intro))
View(a)
table(a$count)
a = distinct(data[,c(1,2,3)])
View(a)
a$count = 1
b = a %>%
group_by(id, country) %>%
summarise(count = sum(count))
View(b)
c = data %>%
filter(id == "B7325", country = "hk")
c = data %>%
filter(id == "B7325" & country = "hk")
c = data %>%
filter(id == "B7325" & country == "hk")
View(c)
df = data %>%
group_by(id, country, idc) %>%
mutate(price_ratio = price/first(price))
df = data %>%
group_by(id, country, idc) %>%
mutate(price_ratio = price/first(price)) %>%
ungroup()
df = data %>%
group_by(id, country, idc) %>%
mutate(price_ratio = price/first(price)) %>%
ungroup() %>%
group_by(country) %>%
summarise(index = mean(price_ratio, na.rm = TRUE))
View(df)
df = data %>%
group_by(id, country, idc) %>%
mutate(price_ratio = price/first(price)) %>%
ungroup() %>%
group_by(country, date) %>%
summarise(index = mean(price_ratio, na.rm = TRUE))
View(df)
df %>%
ggplot(aes(x = date, y = index, color = country)) +
geom_line()
max(df$index)
which(df$index == max(df$index))
df[32211,]
a = df %>% filter(country == "ph")
View(a)
df %>%
filter(country != "ph") %>%
ggplot(aes(x = date, y = index, color = country)) +
geom_line()
exchange = read.csv(paste0(folder, "exchange_long.csv"))
View(exchange)
unique(exchange$country_string)
a = exchange %>% filter(country_string=="us")
View(a)
exchange$date = as.Date(exchange$date, format = "%d %b %y")
a = exchange %>% filter(country_string=="jp")
View(a)
exchange = exchange %>%
group_by(country_string) %>%
mutate(index_ratio = usdx/first(usdx)) %>%
ungroup()
View(exchange)
View(df)
df = left_join(df, exchange, by = c("country" = "country_string",
"date" = "date"))
df = df %>%
mutate(index_adj = index/index_ratio)
df %>%
filter(country != "ph") %>%
ggplot(aes(x = date, y = index_adj, color = country)) +
geom_line()
which(df$index_adj == max(df$index_adj))
which(df$index_adj == max(df$index_adj, na.rm = T))
df %>%
filter(!(country %in% c("ph", "cd"))) %>%
ggplot(aes(x = date, y = index_adj, color = country)) +
geom_line()
df_na = df %>%
group_by(country) %>%
summarise(count_na = sum(is.na(index_ratio)))
View(df_na)
df = df %>%
filter(!(country %in% c("ph", "cd", "pl", "xf")))
df %>%
ggplot(aes(x = date, y = index_adj, color = country)) +
geom_line()
countries = unique(df$country)
countries
df_us = df %>% filter(country == "us")
df_jp = df %>% filter(country == "jp")
plot(ts(df_us))
plot(ts(df_us$index_adj))
plot(ts(df_jp$index_adj))
df_us = df %>% filter(country == "uk")
plot(ts(df_us$index_adj))
countries
df_us = df %>% filter(country == "de")
df_jp = df %>% filter(country == "fr")
plot(ts(df_us$index_adj))
lines(df_jp$index_adj)
df_de = df %>% filter(country == "de")
df_fr = df %>% filter(country == "fr")
## Functions -------------------------------------------------------------------
# normalization
t.normalize = function(data, reference = NULL){
if (is.null(reference)) {
mu = mean(data)
sigma = sd(data)
}else{
mu = mean(reference)
sigma = sd(reference)
}
res = (data - mu)/sigma
return(res)
}
minmax.normalize = function(data, reference = NULL){
if (is.null(reference)) {
minimum = min(data)
maximum = max(data)
}else{
minimum = min(reference)
maximum = max(reference)
}
res = (data - minimum)/(maximum - minimum)
return(res)
}
# transform warping path W to weight
warp2weight = function(W){
w = as.matrix(W)
count = rep(1/colSums(w), nrow(w)) %>%
matrix(.,
nrow = ncol(w),
ncol = nrow(w)) %>%
t(.)
weight = rowSums(w * count)
return(weight)
}
# smooth speed profile
smooth_profile = function(W){
n = length(W)
for (i in 2:(n-1)) {
if (abs(W[i]) < min(abs(W[i - 1]), abs(W[i + 1]))) {
ind_min = which(c(abs(W[i - 1]), abs(W[i + 1])) ==
min(abs(W[i - 1]), abs(W[i + 1])))[1]
W[i] = c(W[i - 1], W[i + 1])[ind_min]
}
}
return(W)
}
align = dtw::dtw(diff(t.normalize(df_de$index_adj)),
diff(t.normalize(df_fr$index_adj)),
keep = TRUE,
step.pattern = dtw::symmetricP2)
dtw::dtwPlotThreeWay(align)
P = Matrix::sparseMatrix(align$index1,
align$index2)
P = Matrix::sparseMatrix(align$index1,
align$index2)
W = warp2weight(P)
a = fitted(forecast::ets(W))
plot(ts(a))
df_a = df %>% filter(country == "de")
df_b = df %>% filter(country == "uk")
align = dtw::dtw(diff(t.normalize(df_a$index_adj)),
diff(t.normalize(df_b$index_adj)),
keep = TRUE,
step.pattern = dtw::symmetricP2)
dtw::dtwPlotThreeWay(align)
P = Matrix::sparseMatrix(align$index1,
align$index2)
W = warp2weight(P)
a = fitted(forecast::ets(W))
plot(ts(a))
df_b = df %>% filter(country == "jp")
align = dtw::dtw(diff(t.normalize(df_a$index_adj)),
diff(t.normalize(df_b$index_adj)),
keep = TRUE,
step.pattern = dtw::symmetricP2)
dtw::dtwPlotThreeWay(align)
P = Matrix::sparseMatrix(align$index1,
align$index2)
W = warp2weight(P)
a = fitted(forecast::ets(W))
plot(ts(a))
df_a = df %>% filter(country == "uk")
df_b = df %>% filter(country == "jp")
align = dtw::dtw(diff(t.normalize(df_a$index_adj)),
diff(t.normalize(df_b$index_adj)),
keep = TRUE,
step.pattern = dtw::symmetricP2)
dtw::dtwPlotThreeWay(align)
P = Matrix::sparseMatrix(align$index1,
align$index2)
W = warp2weight(P)
a = fitted(forecast::ets(W))
plot(ts(a))
countries
df_b = df %>% filter(country == "it")
align = dtw::dtw(diff(t.normalize(df_a$index_adj)),
diff(t.normalize(df_b$index_adj)),
keep = TRUE,
step.pattern = dtw::symmetricP2)
df_b = df %>% filter(country == "cn")
align = dtw::dtw(diff(t.normalize(df_a$index_adj)),
diff(t.normalize(df_b$index_adj)),
keep = TRUE,
step.pattern = dtw::symmetricP2)
df_a = df %>% filter(country == "jp")
df_b = df %>% filter(country == "cn")
align = dtw::dtw(diff(t.normalize(df_a$index_adj)),
diff(t.normalize(df_b$index_adj)),
keep = TRUE,
step.pattern = dtw::symmetricP2)
plot(ts(df_b$index_adj))
plot(ts(df_a$index_adj))
exchange = exchange %>%
group_by(country_string) %>%
mutate(index_ratio = usdx/first(usdx)) %>%
ungroup()
df = left_join(df, exchange, by = c("country" = "country_string",
"date" = "date"))
exchange = exchange %>%
group_by(country_string) %>%
mutate(index_ratio = usdx/first(usdx)) %>%
ungroup()
df = left_join(data, exchange, by = c("country" = "country_string",
"date" = "date"))
View(df)
a = exchange %>% filtr(country_string == "jp")
a = exchange %>% filter(country_string == "jp")
View(a)
df = df %>%
group_by(id, country, idc) %>%
mutate(price_adj = price*usdx,
relative_price_adj = price_adj/first(price_adj)) %>%
ungroup() %>%
group_by(country, date) %>%
summarise(delta_relative_price_adj = diff(mean(relative_price_adj, na.rm = T)))
View(df)
df = left_join(data, exchange, by = c("country" = "country_string",
"date" = "date"))
df = df %>%
group_by(id, country, idc) %>%
mutate(price_adj = price*usdx,
relative_price_adj = price_adj/first(price_adj)) %>%
ungroup()
View(df)
df = left_join(data, exchange, by = c("country" = "country_string",
"date" = "date"))
df = df %>%
group_by(id, country, idc) %>%
mutate(price_adj = price*usdx,
relative_price_adj = price_adj/first(price_adj)) %>%
ungroup() %>%
group_by(country, date) %>%
summarise(mean_relative_price_adj = mean(relative_price_adj, na.rm = T))
View(df)
df$delta_price = diff(df$mean_relative_price_adj)
df$delta_price = c(0, diff(df$mean_relative_price_adj))
df = left_join(data, exchange, by = c("country" = "country_string",
"date" = "date"))
df = df %>%
group_by(id, country, idc) %>%
mutate(price_adj = price*usdx,
relative_price_adj = price_adj/first(price_adj)) %>%
ungroup() %>%
group_by(country) %>%
summarise(delta_relative_price_adj = diff(relative_price_adj))
View(df)
df = left_join(data, exchange, by = c("country" = "country_string",
"date" = "date"))
df = df %>%
group_by(id, country, idc) %>%
mutate(price_adj = price*usdx,
relative_price_adj = price_adj/first(price_adj)) %>%
ungroup() %>%
group_by(country) %>%
mutate(diff_relative_price_adj = relative_price_adj - lag(relative_price_adj)) %>%
ungroup()
df = df %>%
group_by(country, date) %>%
summarise(avg_delta = mean(diff_relative_price_adj, na.rm = TRUE))
View(df)
df %>%
ggplot(aes(x = date, y = avg.delta, color = country)) +
geom_line()
df %>%
ggplot(aes(x = date, y = avg_delta, color = country)) +
geom_line()
which(df$avg_delta == max(df$avg_delta, na.rm = T))
df[32192,]
df = df %>%
filter(!(country %in% c("ph", "cd", "pl", "xf")))
df %>%
ggplot(aes(x = date, y = avg_delta, color = country)) +
geom_line()
df %>%
filter(date <= as.Date("2012-01-01")) %>%
ggplot(aes(x = date, y = avg_delta, color = country)) +
geom_line()
countries = unique(df$country)
df_a = df %>% filter(country == "jp")
df_b = df %>% filter(country == "cn")
align = dtw::dtw(diff(t.normalize(df_a$avg_delta)),
diff(t.normalize(df_b$avg_delta)),
keep = TRUE,
step.pattern = dtw::symmetricP2)
dtw::dtwPlotThreeWay(align)
~/Desktop/run_basque.R
