align = dtw::dtw(diff(t.normalize(df_a$index_adj)),
diff(t.normalize(df_b$index_adj)),
keep = TRUE,
step.pattern = dtw::symmetricP2)
df_b = df %>% filter(country == "cn")
align = dtw::dtw(diff(t.normalize(df_a$index_adj)),
diff(t.normalize(df_b$index_adj)),
keep = TRUE,
step.pattern = dtw::symmetricP2)
df_a = df %>% filter(country == "jp")
df_b = df %>% filter(country == "cn")
align = dtw::dtw(diff(t.normalize(df_a$index_adj)),
diff(t.normalize(df_b$index_adj)),
keep = TRUE,
step.pattern = dtw::symmetricP2)
plot(ts(df_b$index_adj))
plot(ts(df_a$index_adj))
exchange = exchange %>%
group_by(country_string) %>%
mutate(index_ratio = usdx/first(usdx)) %>%
ungroup()
df = left_join(df, exchange, by = c("country" = "country_string",
"date" = "date"))
exchange = exchange %>%
group_by(country_string) %>%
mutate(index_ratio = usdx/first(usdx)) %>%
ungroup()
df = left_join(data, exchange, by = c("country" = "country_string",
"date" = "date"))
View(df)
a = exchange %>% filtr(country_string == "jp")
a = exchange %>% filter(country_string == "jp")
View(a)
df = df %>%
group_by(id, country, idc) %>%
mutate(price_adj = price*usdx,
relative_price_adj = price_adj/first(price_adj)) %>%
ungroup() %>%
group_by(country, date) %>%
summarise(delta_relative_price_adj = diff(mean(relative_price_adj, na.rm = T)))
View(df)
df = left_join(data, exchange, by = c("country" = "country_string",
"date" = "date"))
df = df %>%
group_by(id, country, idc) %>%
mutate(price_adj = price*usdx,
relative_price_adj = price_adj/first(price_adj)) %>%
ungroup()
View(df)
df = left_join(data, exchange, by = c("country" = "country_string",
"date" = "date"))
df = df %>%
group_by(id, country, idc) %>%
mutate(price_adj = price*usdx,
relative_price_adj = price_adj/first(price_adj)) %>%
ungroup() %>%
group_by(country, date) %>%
summarise(mean_relative_price_adj = mean(relative_price_adj, na.rm = T))
View(df)
df$delta_price = diff(df$mean_relative_price_adj)
df$delta_price = c(0, diff(df$mean_relative_price_adj))
df = left_join(data, exchange, by = c("country" = "country_string",
"date" = "date"))
df = df %>%
group_by(id, country, idc) %>%
mutate(price_adj = price*usdx,
relative_price_adj = price_adj/first(price_adj)) %>%
ungroup() %>%
group_by(country) %>%
summarise(delta_relative_price_adj = diff(relative_price_adj))
View(df)
df = left_join(data, exchange, by = c("country" = "country_string",
"date" = "date"))
df = df %>%
group_by(id, country, idc) %>%
mutate(price_adj = price*usdx,
relative_price_adj = price_adj/first(price_adj)) %>%
ungroup() %>%
group_by(country) %>%
mutate(diff_relative_price_adj = relative_price_adj - lag(relative_price_adj)) %>%
ungroup()
df = df %>%
group_by(country, date) %>%
summarise(avg_delta = mean(diff_relative_price_adj, na.rm = TRUE))
View(df)
df %>%
ggplot(aes(x = date, y = avg.delta, color = country)) +
geom_line()
df %>%
ggplot(aes(x = date, y = avg_delta, color = country)) +
geom_line()
which(df$avg_delta == max(df$avg_delta, na.rm = T))
df[32192,]
df = df %>%
filter(!(country %in% c("ph", "cd", "pl", "xf")))
df %>%
ggplot(aes(x = date, y = avg_delta, color = country)) +
geom_line()
df %>%
filter(date <= as.Date("2012-01-01")) %>%
ggplot(aes(x = date, y = avg_delta, color = country)) +
geom_line()
countries = unique(df$country)
df_a = df %>% filter(country == "jp")
df_b = df %>% filter(country == "cn")
align = dtw::dtw(diff(t.normalize(df_a$avg_delta)),
diff(t.normalize(df_b$avg_delta)),
keep = TRUE,
step.pattern = dtw::symmetricP2)
dtw::dtwPlotThreeWay(align)
~/Desktop/run_basque.R
library(checkpoint)
checkpoint("2022-04-01")
library(tidyverse)
## Data ------------------------------------------------------------------------
folder = "/Users/jiancao/Downloads/dataverse_files/all_files_in_csv_format/"
exchange = read.csv(paste0(folder, "exchange_long.csv"))
## Functions -------------------------------------------------------------------
# prepare one company
one_company = function(path, exchange){
data = read.csv(path)
# prepare data
data$date = as.Date(data$date, format = "%d %b %y")
exchange$date = as.Date(exchange$date, format = "%d %b %y")
# compute diff of log price
df = left_join(data, exchange, by = c("country" = "country_string",
"date" = "date")) %>%
mutate(price_usd = price*usdx,
log_price_usd = log(price_usd)) %>%
group_by(country) %>%
mutate(diff_log = log_price_usd - lag(log_price_usd)) %>%
ungroup()
# filter outliers and compute average diff_log
df = df %>%
filter(diff_log > quantile(diff_log, 0.25, na.rm = TRUE) -
3*IQR(diff_log, na.rm = TRUE) &
diff_log < quantile(diff_log, 0.75, na.rm = TRUE) +
3*IQR(diff_log, na.rm = TRUE)) %>%
group_by(country, date) %>%
summarise(avg_log = mean(diff_log, na.rm = TRUE))
return(df)
}
# normalization
t.normalize = function(data, reference = NULL){
if (is.null(reference)) {
mu = mean(data)
sigma = sd(data)
}else{
mu = mean(reference)
sigma = sd(reference)
}
res = (data - mu)/sigma
return(res)
}
# transform warping path W to weight
warp2weight = function(W){
w = as.matrix(W)
count = rep(1/colSums(w), nrow(w)) %>%
matrix(.,
nrow = ncol(w),
ncol = nrow(w)) %>%
t(.)
weight = rowSums(w * count)
return(weight)
}
## Run -------------------------------------------------------------------------
df_apple = one_company(paste0(folder, "CNR_QJE_apple.csv"),
exchange = exchange)
gc()
View(df_apple)
df_ikea = one_company(paste0(folder, "CNR_QJE_ikea.csv"),
exchange = exchange)
## Setup -----------------------------------------------------------------------
library(checkpoint)
checkpoint("2022-04-01")
library(tidyverse)
## Data ------------------------------------------------------------------------
folder = "/Users/jiancao/Downloads/dataverse_files/all_files_in_csv_format/"
exchange = data.table::fread(paste0(folder, "exchange_long.csv"))
exchange$date = as.Date(exchange$date, format = "%d %b %y")
path = paste0(folder, "CNR_QJE_ikea.csv")
data = data.table::fread(path, select = 1:5)
# prepare date
data$date = as.Date(data$date, format = "%d %b %y")
gc()
# compute diff of log price
data = left_join(data, exchange, by = c("country" = "country_string",
"date" = "date")) %>%
group_by(country, id, idc) %>%
mutate(diff_log = log(price*usdx) - lag(log(price*usdx))) %>%
ungroup()
gc()
# filter outliers and compute average diff_log
data2 = data %>%
filter(diff_log > quantile(diff_log, 0.25, na.rm = TRUE) -
3*IQR(diff_log, na.rm = TRUE) &
diff_log < quantile(diff_log, 0.75, na.rm = TRUE) +
3*IQR(diff_log, na.rm = TRUE)) %>%
group_by(country, date) %>%
summarise(avg_log = mean(diff_log, na.rm = TRUE))
View(data2)
a = cumsum(data2$avg_log)
b = exp(a)
plot(ts(b))
df = rbind(data2) %>%
group_by(country, date) %>%
summarise(avg_log = mean(avg_log, na.rm = TRUE)) %>%
ungroup() %>%
group_by(country) %>%
mutate(cum_log = cumsum(avg_log),
index = exp(cum_log))
# plot index
oecd = c("at", "ca", "dk", "fr", "de", "gr", "is", "ie", "be",
"lu", "nl", "no", "pt", "es", "se", "tr", "it", "ch",
"uk", "us")
df_oecd = df %>% filter(country %in% c("jp", oecd))
range_oecd = df_oecd %>%
group_by(country) %>%
summarise(min_date = min(date),
max_date = max(date))
select_country = range_oecd %>%
filter(min_date == as.Date("2009-04-01")) %>%
.[["country"]]
select_country
df %>%
# filter(country %in% select_country) %>%
ggplot(aes(x = date, y = index, color = country)) +
geom_line()
View(df)
a = data[1:1000,]
a = data %>% filter(country == "ae", idc == 350544)
data2 = left_join(data, exchange, by = c("country" = "country_string",
"date" = "date")) %>%
group_by(country, id, idc) %>%
mutate(diff_log = log(price) - lag(log(price))) %>%
ungroup()
gc()
data2 = left_join(data, exchange, by = c("country" = "country_string",
"date" = "date")) %>%
group_by(country, id, idc) %>%
mutate(diff_log = log(price) - lag(log(price))) %>%
ungroup()
library(checkpoint)
checkpoint("2022-04-01")
library(tidyverse)
## Data ------------------------------------------------------------------------
folder = "/Users/jiancao/Downloads/dataverse_files/all_files_in_csv_format/"
exchange = data.table::fread(paste0(folder, "exchange_long.csv"))
exchange$date = as.Date(exchange$date, format = "%d %b %y")
## Functions -------------------------------------------------------------------
# prepare one company
one_company = function(path, exchange){
data = data.table::fread(path, select = 1:5)
# prepare date
data$date = as.Date(data$date, format = "%d %b %y")
gc()
# compute diff of log price
data = left_join(data, exchange, by = c("country" = "country_string",
"date" = "date")) %>%
group_by(country, id, idc) %>%
mutate(diff_log = log(price) - lag(log(price))) %>%
# mutate(diff_log = log(price*usdx) - lag(log(price*usdx))) %>%
ungroup()
gc()
selection = data %>%
group_by(id, country, idc) %>%
summarise(ratio = max(price, na.rm = T)/min(price, na.rm = T)) %>%
filter(country != "ph" & ratio > 1 & ratio < 1000) %>%
select(-ratio)
data = inner_join(data, selection, by = c("country", "id", "idc"))
# filter outliers and compute average diff_log
data = data %>%
# filter(diff_log >= quantile(diff_log, 0.25, na.rm = TRUE) -
#          3*IQR(diff_log, na.rm = TRUE) &
#          diff_log <= quantile(diff_log, 0.75, na.rm = TRUE) +
#          3*IQR(diff_log, na.rm = TRUE)) %>%
group_by(country, date) %>%
summarise(avg_log = mean(diff_log, na.rm = TRUE))
return(data)
}
# normalization
t.normalize = function(data, reference = NULL){
if (is.null(reference)) {
mu = mean(data)
sigma = sd(data)
}else{
mu = mean(reference)
sigma = sd(reference)
}
res = (data - mu)/sigma
return(res)
}
# transform warping path W to weight
warp2weight = function(W){
w = as.matrix(W)
count = rep(1/colSums(w), nrow(w)) %>%
matrix(.,
nrow = ncol(w),
ncol = nrow(w)) %>%
t(.)
weight = rowSums(w * count)
return(weight)
}
path = paste0(folder, "CNR_QJE_ikea.csv")
data = data.table::fread(path, select = 1:5)
# prepare date
data$date = as.Date(data$date, format = "%d %b %y")
## Setup -----------------------------------------------------------------------
library(checkpoint)
checkpoint("2022-04-01")
library(tidyverse)
## Data ------------------------------------------------------------------------
folder = "/Users/jiancao/Downloads/dataverse_files/all_files_in_csv_format/"
exchange = data.table::fread(paste0(folder, "exchange_long.csv"))
exchange$date = as.Date(exchange$date, format = "%d %b %y")
## Functions -------------------------------------------------------------------
# prepare one company
one_company = function(path, exchange){
data = data.table::fread(path, select = 1:5)
# prepare date
data$date = as.Date(data$date, format = "%d %b %y")
gc()
# compute diff of log price
data = left_join(data, exchange, by = c("country" = "country_string",
"date" = "date")) %>%
group_by(country, id) %>%
mutate(diff_log = log(price) - lag(log(price))) %>%
# mutate(diff_log = log(price*usdx) - lag(log(price*usdx))) %>%
ungroup()
gc()
selection = data %>%
group_by(id, country) %>%
summarise(ratio = max(price, na.rm = T)/min(price, na.rm = T)) %>%
filter(country != "ph" & ratio > 1 & ratio < 1000) %>%
select(-ratio)
data = inner_join(data, selection, by = c("country", "id", "idc"))
# filter outliers and compute average diff_log
data = data %>%
# filter(diff_log >= quantile(diff_log, 0.25, na.rm = TRUE) -
#          3*IQR(diff_log, na.rm = TRUE) &
#          diff_log <= quantile(diff_log, 0.75, na.rm = TRUE) +
#          3*IQR(diff_log, na.rm = TRUE)) %>%
group_by(country, date) %>%
summarise(avg_log = mean(diff_log, na.rm = TRUE))
return(data)
}
# normalization
t.normalize = function(data, reference = NULL){
if (is.null(reference)) {
mu = mean(data)
sigma = sd(data)
}else{
mu = mean(reference)
sigma = sd(reference)
}
res = (data - mu)/sigma
return(res)
}
# transform warping path W to weight
warp2weight = function(W){
w = as.matrix(W)
count = rep(1/colSums(w), nrow(w)) %>%
matrix(.,
nrow = ncol(w),
ncol = nrow(w)) %>%
t(.)
weight = rowSums(w * count)
return(weight)
}
# prepare data
df_apple = one_company(paste0(folder, "CNR_QJE_apple.csv"),
exchange = exchange)
## Functions -------------------------------------------------------------------
# prepare one company
one_company = function(path, exchange){
data = data.table::fread(path, select = 1:5)
# prepare date
data$date = as.Date(data$date, format = "%d %b %y")
gc()
# compute diff of log price
data = left_join(data, exchange, by = c("country" = "country_string",
"date" = "date")) %>%
group_by(country, id) %>%
mutate(diff_log = log(price) - lag(log(price))) %>%
# mutate(diff_log = log(price*usdx) - lag(log(price*usdx))) %>%
ungroup()
gc()
selection = data %>%
group_by(id, country) %>%
summarise(ratio = max(price, na.rm = T)/min(price, na.rm = T)) %>%
filter(country != "ph" & ratio > 1 & ratio < 1000) %>%
select(-ratio)
data = inner_join(data, selection, by = c("country", "id"))
# filter outliers and compute average diff_log
data = data %>%
# filter(diff_log >= quantile(diff_log, 0.25, na.rm = TRUE) -
#          3*IQR(diff_log, na.rm = TRUE) &
#          diff_log <= quantile(diff_log, 0.75, na.rm = TRUE) +
#          3*IQR(diff_log, na.rm = TRUE)) %>%
group_by(country, date) %>%
summarise(avg_log = mean(diff_log, na.rm = TRUE))
return(data)
}
df_apple = one_company(paste0(folder, "CNR_QJE_apple.csv"),
exchange = exchange)
df_apple$avg_log[is.na(df_apple$avg_log)] = 0
gc()
df_ikea = one_company(paste0(folder, "CNR_QJE_ikea.csv"),
exchange = exchange)
df_ikea$avg_log[is.na(df_ikea$avg_log)] = 0
gc()
df_handm = one_company(paste0(folder, "CNR_QJE_handm.csv"),
exchange = exchange)
df_handm$avg_log[is.na(df_handm$avg_log)] = 0
gc()
df_zara = one_company(paste0(folder, "CNR_QJE_zara.csv"),
exchange = exchange)
df_zara$avg_log[is.na(df_zara$avg_log)] = 0
gc()
saveRDS(df_apple, "./data/df_apple.Rds")
saveRDS(df_ikea, "./data/df_ikea.Rds")
saveRDS(df_handm, "./data/df_handm.Rds")
saveRDS(df_zara, "./data/df_zara.Rds")
# compute index
df = rbind(df_apple, df_ikea, df_handm, df_zara) %>% # df_ikea,
group_by(country, date) %>%
summarise(avg_log = mean(avg_log, na.rm = TRUE)) %>%
ungroup() %>%
group_by(country) %>%
mutate(cum_log = cumsum(avg_log),
index = exp(cum_log))
# plot index
oecd = c("at", "ca", "dk", "fr", "de", "gr", "is", "ie", "be",
"lu", "nl", "no", "pt", "es", "se", "tr", "it", "ch",
"uk", "us")
df_oecd = df %>% filter(country %in% c("jp", oecd))
range_oecd = df_oecd %>%
group_by(country) %>%
summarise(min_date = min(date),
max_date = max(date))
select_country = range_oecd %>%
filter(min_date == as.Date("2009-04-01")) %>%
.[["country"]]
df %>%
filter(country %in% select_country) %>%
ggplot(aes(x = date, y = index, color = country)) +
geom_line()
select_country
df %>%
filter(country %in% oecd) %>%
ggplot(aes(x = date, y = index, color = country)) +
geom_line()
## Setup -----------------------------------------------------------------------
library(checkpoint)
checkpoint("2022-04-01")
library(tidyverse)
## Data ------------------------------------------------------------------------
folder = "/Users/jiancao/Downloads/dataverse_files/all_files_in_csv_format/"
exchange = data.table::fread(paste0(folder, "exchange_long.csv"))
exchange$date = as.Date(exchange$date, format = "%d %b %y")
View(exchange)
exchange %>%
# filter(country %in% oecd) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
df_a = exchange %>% filter(country_string == "jp")
df_b = exchange %>% filter(country_string == "uk")
plot(ts(df_a$usdx))
plot(ts(df_b$usdx))
select_country = exchange %>%
group_by(country_string) %>%
summarise(sd = sd(usdx))
View(select_country)
select_country = exchange %>%
group_by(country_string) %>%
summarise(sd = sd(usdx)) %>%
filter(sd > 0.1)
View(select_country)
exchange %>%
filter(country %in% select_country$country_string) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
exchange %>%
filter(country_string %in% select_country$country_string) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
select_country = exchange %>%
group_by(country_string) %>%
summarise(sd = sd(usdx),
avg = mean(usdx),
ratio = sd/avg)
View(select_country)
select_country = exchange %>%
group_by(country_string) %>%
summarise(sd = sd(usdx),
avg = mean(usdx),
ratio = sd/avg) %>%
filter(ratio > 0.01)
exchange %>%
filter(country_string %in% select_country$country_string) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
select_country = exchange %>%
group_by(country_string) %>%
summarise(sd = sd(usdx),
avg = mean(usdx),
ratio = sd/avg) %>%
filter(ratio > 0.1)
exchange %>%
filter(country_string %in% select_country$country_string) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
