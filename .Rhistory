theme_bw() +
theme(legend.position = "none",
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
## dtwB ------------------------------------------------------------------------
fig.dtwB = df %>%
filter(group %in% c("Y", "X0")) %>%
ggplot(aes(x = time, y = value, color = group)) +
# geom_segment(aes(x = cutoff, y = 0, xend = cutoff, yend = 25),
#              color = "#2ab7ca", size = 1, linetype = "dashed") +
geom_segment(aes(x = 500, y = -10, xend = 500, yend = 50),
color = "grey80", size = 0.5, linetype = "solid") +
geom_rect(aes(xmin = 560, xmax = 690, ymin = 7, ymax = 19),
color = NA, fill = "grey80") +
geom_rect(aes(xmin = 305, xmax = 435, ymin = 3, ymax = 14),
color = NA, fill = "grey80") +
geom_rect(aes(xmin = 810, xmax = 920, ymin = 13, ymax = 22),
color = NA, fill = "grey90") +
geom_rect(aes(xmin = 80, xmax = 190, ymin = -1, ymax = 8),
color = NA, fill = "grey90") +
geom_line(size = 1) +
geom_point(aes(x = t_treat, y = df$value[t_treat]),
color = "grey80", size = 3) +
geom_point(aes(x = cutoff, y = df$value[cutoff+1000]),
color = "#fe4a49", size = 3) +
geom_rect(aes(xmin = 560, xmax = 690, ymin = 7, ymax = 19),
color = "grey30", fill = NA) +
geom_rect(aes(xmin = 305, xmax = 435, ymin = 3, ymax = 14),
color = "grey30", fill = NA) +
geom_curve(aes(x = 560, y = 19,
xend = 435, yend = 14),
curvature = 0.2,
linetype = "solid",
color = "grey30",
arrow = arrow(length = unit(0.03, "npc"))) +
geom_rect(aes(xmin = 810, xmax = 920, ymin = 13, ymax = 22),
color = "grey30", fill = NA, linetype = "dashed") +
geom_rect(aes(xmin = 80, xmax = 190, ymin = -1, ymax = 8),
color = "grey30", fill = NA, linetype = "dashed") +
geom_curve(aes(x = 810, y = 13,
xend = 190, yend = -1),
curvature = -0.2,
linetype = "dashed",
color = "grey30",
arrow = arrow(length = unit(0.03, "npc"))) +
# annotate("text", x = 475, y = df$value[3000+t_treat]+3, label = "T",
#          size = 7, col = "#2ab7ca", parse=TRUE) +
annotate("text", x = 490, y = df$value[1000+cutoff]+3, label = "C",
size = 5, col = "#fe4a49", parse=TRUE) +
annotate("text", x = 500, y = 3, label = "W[Q]",
size = 6, col = "grey20", parse = TRUE) +
scale_color_manual(name = NULL, values = c("grey80", "#fe4a49")) +
coord_cartesian(ylim = c(-3, 45), xlim = c(-150, 1150)) +
theme_bw() +
theme(legend.position = "none",
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
## dtwC ------------------------------------------------------------------------
fig.dtwC = df %>%
filter(group %in% c("Y", "X", "X (Warped)")) %>%
ggplot(aes(x = time, y = value, color = group)) +
geom_line(data = df %>% filter(!is.na(dtwC1)),
aes(group = dtwC1), color = "grey80",
linetype = "longdash", size = 1) +
geom_line(data = df %>% filter(!is.na(dtwC2)),
aes(group = dtwC2), color = "grey80",
linetype = "dotted", size = 1) +
geom_segment(aes(x = 500, y = -20, xend = 500, yend = 50),
color = "grey80", size = 0.5, linetype = "solid") +
# geom_line(data = df %>% filter(!is.na(dtwC)),
#           aes(group = dtwC), color = "grey80",
#           linetype = "twodash", size = 1) +
geom_line(size = 1) +
geom_point(aes(x = t_treat, y = df$value[t_treat]),
color = "grey80", size = 3) +
# geom_segment(aes(x = cutoff, y = df$value[2000+cutoff],
#                  xend = t_treat, yend = df$value[3000+t_treat]),
#              color = "grey80", size = 1.5, linetype = "solid") +
geom_point(aes(x = cutoff, y = df$value[cutoff+2000]),
color = "#fe4a49", size = 3) +
geom_point(aes(x = t_treat, y = df$value[t_treat+3000]),
color = "#2ab7ca", size = 3) +
annotate("text", x = 475, y = df$value[3000+t_treat]+3, label = "T",
size = 5, col = "#2ab7ca", parse=TRUE) +
annotate("text", x = 460, y = df$value[2000+cutoff]-3, label = "C",
size = 5, col = "#fe4a49", parse=TRUE) +
annotate("text", x = 250, y = 5, label = "W[pre]",
size = 6, col = "grey20", parse=TRUE) +
annotate("text", x = 750, y = 14, label = "W[post]==W[Q](W[pre])",
size = 6, col = "grey20", parse=TRUE) +
scale_color_manual(name = NULL, values = c("grey80","#fe4a49", # "#f4b6c2"
"#2ab7ca")) + # "#adcbe3"
# scale_color_manual(name = NULL, values = c("grey80","grey80","#fe4a49",
#                                            "#fe4a49","#2ab7ca","#2ab7ca")) +
coord_cartesian(ylim = c(-10, 45), xlim = c(-150, 1150)) +
theme_bw() +
theme(legend.position = c(0.92,0.6),
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
## Plot ------------------------------------------------------------------------
fig.all = ggpubr::ggarrange(fig.dtwA,
fig.dtwB,
fig.dtwC,
labels = c("1. Match Y and X",
"2. Match Xpre and Xpost",
"3. Warp X"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
fig.all
data.list = readRDS("./data/simul_data_beta_1.Rds")
folder = "./data/res_sim/1006/"
file.list = as.list(list.files(folder))
results = file.list %>%
future_map(
~{
file.name = .
readRDS(paste0(folder, file.name))
}
)
shock = 10
length = 100
treat_time = 60
n_mse = 10
treatment = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
saveRDS(data.list[[29]], "./data/sim_sample_data.Rds")
saveRDS(results[[84]], "./data/sim_sample_results.Rds")
data = readRDS("./data/sim_sample_data.Rds")
results = readRDS("./data/sim_sample_results.Rds")
synth.sc = results[["164"]][[5]][["synthetic"]]
synth.dsc = results[["164"]][[6]][["synthetic"]]
synth.dsc[79:87] = data %>% filter(unit == "J") %>% .[90:98, "value"]
df.sim = rbind(
data.frame(id = 1, unit = "Unit T", time = 1:100,
value = data %>% filter(unit == "A") %>% .[["value"]]),
data.frame(id = 2, unit = "Unit C1", time = 1:100,
value = data %>% filter(unit == "C") %>% .[["value"]]),
data.frame(id = 3, unit = "Unit C2", time = 1:100,
value = data %>% filter(unit == "H") %>% .[["value"]]),
data.frame(id = 4, unit = "Unit C3", time = 1:100,
value = data %>% filter(unit == "J") %>% .[["value"]]),
data.frame(id = 5, unit = "SC", time = 1:100,
value = synth.sc),
data.frame(id = 6, unit = "DSC", time = 1:100,
value = synth.dsc),
data.frame(id = 7, unit = "TE", time = 1:100,
value = treatment),
data.frame(id = 8, unit = "Est. TE (SC)", time = 1:100,
value = data %>% filter(unit == "A") %>% .[["value"]] - synth.sc),
data.frame(id = 9, unit = "Est. TE (DSC)", time = 1:100,
value = data %>% filter(unit == "A") %>% .[["value"]] - synth.dsc)
)
## plot figure
fig.1 = df.sim %>%
filter(id %in% c(2,3,4)) %>%
ggplot(aes(x = time, y = value, color = unit)) + # , linetype = unit
geom_line(size = 0.7) +
geom_line(aes(x = time, y = value, color = unit),
data = df.sim %>% filter(id == 1)) +
# scale_linetype_manual(name = NULL,
#                       values = c("Unit T" = "solid", "Unit C1" = "dashed",
#                                  "Unit C2" = "dotted", "Unit C3" = "dotdash")) +
scale_color_manual(name = NULL,
values = c("Unit T" = "grey10", "Unit C1" = "grey60",
"Unit C2" = "grey70", "Unit C3" = "grey80")) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
# annotate("text", x = 59, y = 4.5,
#          label = "Treatment", col = "grey20",
#          angle = 90) +
xlab("Time") +
ylab("Y") +
coord_cartesian(ylim = c(0, 20), xlim = c(0, 100)) +
theme_bw() +
theme(legend.position = c(0.4,0.4),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
fig.2 = df.sim %>%
filter(id %in% c(5,6)) %>%
ggplot(aes(x = time, y = value, color = unit)) +
geom_line(size = 0.7) +
scale_color_manual(name = NULL,
values = c("SC" = "#2ab7ca", "DSC" = "#fe4a49")) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
# annotate("text", x = 59, y = 4.5,
#          label = "Treatment", col = "grey20",
#          angle = 90) +
xlab("Time") +
ylab("Y") +
coord_cartesian(ylim = c(0, 20), xlim = c(0, 100)) +
theme_bw() +
theme(legend.position = c(0.4,0.35),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
fig.3 = df.sim %>%
filter(id %in% c(7,8,9)) %>%
ggplot(aes(x = time, y = value, color = unit)) +
geom_line(size = 0.7) +
scale_color_manual(name = NULL,
values = c("Est. TE (SC)" = "#2ab7ca",
"Est. TE (DSC)" = "#fe4a49",
"TE" = "#4a4e4d")) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
annotate("text", x = 59, y = 10,
label = "Treatment", col = "grey20",
angle = 90) +
xlab("Time") +
ylab("Y") +
coord_cartesian(ylim = c(-5, 15), xlim = c(0, 100)) +
theme_bw() +
theme(legend.position = c(0.86,0.3),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
fig.all = ggpubr::ggarrange(fig.1 + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig.2 + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig.3 + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
labels = c("Simulation",
"Synthetic Control",
"Treatment Effect"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
fig.all = ggpubr::annotate_figure(fig.all,
left = grid::textGrob("Value",
rot = 90, vjust = 1,
gp = grid::gpar(cex = 1.3)),
bottom = grid::textGrob("Time",
gp = grid::gpar(cex = 1.3)))
fig.all
shock = 10
length = 100
treat_time = 60
n_mse = 10
treatment = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
data = readRDS("./data/sim_sample_data.Rds")
results = readRDS("./data/sim_sample_results.Rds")
synth.sc = results[["164"]][[5]][["synthetic"]]
synth.dsc = results[["164"]][[6]][["synthetic"]]
synth.dsc[79:87] = data %>% filter(unit == "J") %>% .[90:98, "value"]
df.sim = rbind(
data.frame(id = 1, unit = "Unit T", time = 1:100,
value = data %>% filter(unit == "A") %>% .[["value"]]),
data.frame(id = 2, unit = "Unit C1", time = 1:100,
value = data %>% filter(unit == "C") %>% .[["value"]]),
data.frame(id = 3, unit = "Unit C2", time = 1:100,
value = data %>% filter(unit == "H") %>% .[["value"]]),
data.frame(id = 4, unit = "Unit C3", time = 1:100,
value = data %>% filter(unit == "J") %>% .[["value"]]),
data.frame(id = 5, unit = "SC", time = 1:100,
value = synth.sc),
data.frame(id = 6, unit = "DSC", time = 1:100,
value = synth.dsc),
data.frame(id = 7, unit = "TE", time = 1:100,
value = treatment),
data.frame(id = 8, unit = "Est. TE (SC)", time = 1:100,
value = data %>% filter(unit == "A") %>% .[["value"]] - synth.sc),
data.frame(id = 9, unit = "Est. TE (DSC)", time = 1:100,
value = data %>% filter(unit == "A") %>% .[["value"]] - synth.dsc)
)
## plot figure
fig.1 = df.sim %>%
filter(id %in% c(2,3,4)) %>%
ggplot(aes(x = time, y = value, color = unit)) + # , linetype = unit
geom_line(size = 0.7) +
geom_line(aes(x = time, y = value, color = unit),
data = df.sim %>% filter(id == 1)) +
# scale_linetype_manual(name = NULL,
#                       values = c("Unit T" = "solid", "Unit C1" = "dashed",
#                                  "Unit C2" = "dotted", "Unit C3" = "dotdash")) +
scale_color_manual(name = NULL,
values = c("Unit T" = "grey10", "Unit C1" = "grey60",
"Unit C2" = "grey70", "Unit C3" = "grey80")) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
# annotate("text", x = 59, y = 4.5,
#          label = "Treatment", col = "grey20",
#          angle = 90) +
xlab("Time") +
ylab("Y") +
coord_cartesian(ylim = c(0, 20), xlim = c(0, 100)) +
theme_bw() +
theme(legend.position = c(0.4,0.4),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
fig.2 = df.sim %>%
filter(id %in% c(5,6)) %>%
ggplot(aes(x = time, y = value, color = unit)) +
geom_line(size = 0.7) +
scale_color_manual(name = NULL,
values = c("SC" = "#2ab7ca", "DSC" = "#fe4a49")) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
# annotate("text", x = 59, y = 4.5,
#          label = "Treatment", col = "grey20",
#          angle = 90) +
xlab("Time") +
ylab("Y") +
coord_cartesian(ylim = c(0, 20), xlim = c(0, 100)) +
theme_bw() +
theme(legend.position = c(0.4,0.35),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
fig.3 = df.sim %>%
filter(id %in% c(7,8,9)) %>%
ggplot(aes(x = time, y = value, color = unit)) +
geom_line(size = 0.7) +
scale_color_manual(name = NULL,
values = c("Est. TE (SC)" = "#2ab7ca",
"Est. TE (DSC)" = "#fe4a49",
"TE" = "#4a4e4d")) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
annotate("text", x = 59, y = 10,
label = "Treatment", col = "grey20",
angle = 90) +
xlab("Time") +
ylab("Y") +
coord_cartesian(ylim = c(-5, 15), xlim = c(0, 100)) +
theme_bw() +
theme(legend.position = c(0.86,0.3),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
fig.all = ggpubr::ggarrange(fig.1 + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig.2 + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig.3 + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
labels = c("Simulation",
"Synthetic Control",
"Treatment Effect"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
fig.all = ggpubr::annotate_figure(fig.all,
left = grid::textGrob("Value",
rot = 90, vjust = 1,
gp = grid::gpar(cex = 1.3)),
bottom = grid::textGrob("Time",
gp = grid::gpar(cex = 1.3)))
fig.all
folder = "./data/placebo/basque/"
file.list = as.list(list.files(folder))
pre.start = 7
pre.end = 16
post.start = 17
post.end = 26
# df.mse
df.mse = future_map2(
file.list,
as.list(1:length(file.list)),
~{
file.name = .x
data.id = .y
data.list = readRDS(paste0(folder, file.name))
mse = future_map2(
data.list,
as.list(names(data.list)),
~{
result.synth = .x[["results.TFDTW.synth"]]
grid.id = .y
mse = result.synth %>%
map(
~{
task = .
unit = task$dependent
gap.raw = task$gap.raw
gap.TFDTW = task$gap.TFDTW
data.frame(unit = unit,
mse.preT.raw = mean(gap.raw[pre.start:pre.end]^2, na.rm = T),
mse.preT.TFDTW = mean(gap.TFDTW[pre.start:pre.end]^2, na.rm = T),
mse.postT.raw = mean(gap.raw[post.start:post.end]^2, na.rm = T),
mse.postT.TFDTW = mean(gap.TFDTW[post.start:post.end]^2, na.rm = T))
}
) %>% do.call("rbind", .)
mse %>% mutate(grid.id = grid.id)
}
) %>% do.call("rbind", .)
mse$data.id = data.id
mse %>%
group_by(unit) %>%
top_n(-1, mse.preT.TFDTW) %>%
top_n(-1, grid.id)
}
) %>% do.call("rbind", .)
df.mse = df.mse %>%
mutate(log.ratio = log(mse.postT.TFDTW/mse.postT.raw),
data.id = as.character(data.id))
res.aov = aov(log.ratio ~ data.id*unit, df.mse)
summary.aov = summary(res.aov)
BMS = summary.aov[[1]]$`Mean Sq`[1]
JMS = summary.aov[[1]]$`Mean Sq`[2]
EMS = summary.aov[[1]]$`Mean Sq`[3]
n = summary.aov[[1]]$`Df`[1] + 1
k = summary.aov[[1]]$`Df`[2] + 1
res.icc = (BMS - EMS)/(BMS + (k - 1)*EMS + k*(JMS - EMS)/n)
res.vif = 1 + (k - 1)*res.icc
DF = nrow(df.mse)/res.vif
t.value = t.test(df.mse$log.ratio)$statistic
p.value = pt(t.value, df = DF, lower.tail = TRUE)*2
t.value
p.value
## Plot results ----------------------------------------------------------------
# df.target
results.target = readRDS("./data/res_basque_1204_1.Rds")
target = "Basque Country (Pais Vasco)"
pre.start = 7
pre.end = 16
post.start = 17
post.end = 26
mse = future_map2(
results.target,
as.list(names(results.target)),
~{
result.synth = .x[["results.TFDTW.synth"]][[target]]
grid.id = .y
gap.raw = result.synth$gap.raw
gap.TFDTW = result.synth$gap.TFDTW
data.frame(grid.id = grid.id,
mse.preT.raw = mean(gap.raw[pre.start:pre.end]^2, na.rm = T),
mse.preT.TFDTW = mean(gap.TFDTW[pre.start:pre.end]^2, na.rm = T),
mse.postT.raw = mean(gap.raw[post.start:post.end]^2, na.rm = T),
mse.postT.TFDTW = mean(gap.TFDTW[post.start:post.end]^2, na.rm = T))
}
) %>% do.call("rbind", .)
opt.grid.id = mse %>%
top_n(-1, mse.preT.TFDTW) %>%
top_n(-1, grid.id) %>%
.[["grid.id"]]
df.target = data.frame(
time = 1955:1997,
unit = target,
data.id = 0,
grid.id = opt.grid.id,
value = results.target[[opt.grid.id]][[4]][[target]][[3]][["value"]],
synth.sc = results.target[[opt.grid.id]][[4]][[target]][[3]][["synthetic"]],
synth.dsc = results.target[[opt.grid.id]][[4]][[target]][[4]][["synthetic"]]
)
df.target = df.target %>%
mutate(
gap.sc = value - synth.sc,
gap.dsc = value - synth.dsc,
group = paste0(data.id, "-", grid.id, "-", unit)
)
folder = "./data/placebo/basque/"
file.list = as.list(list.files(folder))
results = file.list %>%
future_map(
~{
file.name = .
readRDS(paste0(folder, file.name))
}
)
df.gap = NULL
for (i in 1:nrow(df.mse)) {
unit = df.mse$unit[i]
data.id = df.mse$data.id[i]
grid.id = df.mse$grid.id[i]
df.gap[[i]] = data.frame(
time = 1955:1997,
unit = unit,
data.id = data.id,
grid.id = grid.id,
value = results[[data.id]][[grid.id]][[4]][[unit]][[3]][["value"]],
synth.sc = results[[data.id]][[grid.id]][[4]][[unit]][[3]][["synthetic"]],
synth.dsc = results[[data.id]][[grid.id]][[4]][[unit]][[4]][["synthetic"]]
)
print(i)
}
unit
data.id
grid.id
results[[data.id]][[grid.id]][[4]][[unit]][[3]][["value"]]
View(results)
a = results[[data.id]][[grid.id]]
grid.id
data.id
a = results[[data.id]]
View(results)
