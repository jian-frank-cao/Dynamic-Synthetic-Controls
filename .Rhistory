data.list,
as.list(names(data.list)),
~{
result = .x
grid.id = .y
value = result$res.synth.target.raw$value
synth.raw = result$res.synth.target.raw$synthetic
synth.TFDTW = result$res.synth.target.TFDTW$synthetic
gap.raw = value - synth.raw - treatment
gap.TFDTW = value - synth.TFDTW - treatment
data.frame(grid.id = grid.id,
mse.preT.raw = mean(gap.raw[pre.start:pre.end]^2, na.rm = T),
mse.preT.TFDTW = mean(gap.TFDTW[pre.start:pre.end]^2, na.rm = T),
mse.postT.raw = mean(gap.raw[post.start:post.end]^2, na.rm = T),
mse.postT.TFDTW = mean(gap.TFDTW[post.start:post.end]^2, na.rm = T))
}
) %>% do.call("rbind", .)
mse$data.id = data.id
View(mse)
mse %>%
top_n(-1, mse.preT.TFDTW) %>%
top_n(-1, grid.id)
beta = 1
shock = 10
folder = "./data/res_sim/1006/"
file.list = as.list(list.files(folder))
length = 100
treat_time = 60
n_mse = 10
treatment = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
pre.start = 51
pre.end = 60
post.start = 61
post.end = 70
# de.mse
df.mse = future_map2(
file.list,
as.list(1:length(file.list)),
~{
file.name = .x
data.id = .y
data.list = readRDS(paste0(folder, file.name))
mse = future_map2(
data.list,
as.list(names(data.list)),
~{
result = .x
grid.id = .y
value = result$res.synth.target.raw$value
synth.raw = result$res.synth.target.raw$synthetic
synth.TFDTW = result$res.synth.target.TFDTW$synthetic
gap.raw = value - synth.raw - treatment
gap.TFDTW = value - synth.TFDTW - treatment
data.frame(grid.id = grid.id,
mse.preT.raw = mean(gap.raw[pre.start:pre.end]^2, na.rm = T),
mse.preT.TFDTW = mean(gap.TFDTW[pre.start:pre.end]^2, na.rm = T),
mse.postT.raw = mean(gap.raw[post.start:post.end]^2, na.rm = T),
mse.postT.TFDTW = mean(gap.TFDTW[post.start:post.end]^2, na.rm = T))
}
) %>% do.call("rbind", .)
mse$data.id = data.id
mse %>%
top_n(-1, mse.preT.TFDTW) %>%
top_n(-1, grid.id)
}
) %>% do.call("rbind", .)
saveRDS(df.mse, "./data/df.mse_sim_beta_1.Rds")
# t.test for log(MSEdsc/MSEsc)
df.mse = readRDS("./data/df.mse_sim_beta_1.Rds")
df.mse = df.mse %>%
mutate(log.ratio = log(mse.postT.TFDTW/mse.postT.raw))
t.test(df.mse$log.ratio)
beta = 1
paste0("./data/df.mse_sim_beta_", beta, "1.Rds")
paste0("./data/df.mse_sim_beta_", beta, ".Rds")
beta = 1
shock = 10
folder = "./data/res_sim/1006/"
file.list = as.list(list.files(folder))
length = 100
treat_time = 60
n_mse = 10
treatment = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
pre.start = 51
pre.end = 60
post.start = 61
post.end = 70
# de.mse
df.mse = future_map2(
file.list,
as.list(1:length(file.list)),
~{
file.name = .x
data.id = .y
data.list = readRDS(paste0(folder, file.name))
mse = future_map2(
data.list,
as.list(names(data.list)),
~{
result = .x
grid.id = .y
value = result$res.synth.target.raw$value
synth.raw = result$res.synth.target.raw$synthetic
synth.TFDTW = result$res.synth.target.TFDTW$synthetic
gap.raw = value - synth.raw - treatment
gap.TFDTW = value - synth.TFDTW - treatment
data.frame(grid.id = grid.id,
mse.preT.raw = mean(gap.raw[pre.start:pre.end]^2, na.rm = T),
mse.preT.TFDTW = mean(gap.TFDTW[pre.start:pre.end]^2, na.rm = T),
mse.postT.raw = mean(gap.raw[post.start:post.end]^2, na.rm = T),
mse.postT.TFDTW = mean(gap.TFDTW[post.start:post.end]^2, na.rm = T))
}
) %>% do.call("rbind", .)
mse$data.id = data.id
mse %>%
top_n(-1, mse.preT.TFDTW) %>%
top_n(-1, grid.id)
}
) %>% do.call("rbind", .)
saveRDS(df.mse, paste0("./data/df.mse_sim_beta_", beta, ".Rds"))
# t.test for log(MSEdsc/MSEsc)
df.mse = readRDS(paste0("./data/df.mse_sim_beta_", beta, ".Rds"))
df.mse = df.mse %>%
mutate(log.ratio = log(mse.postT.TFDTW/mse.postT.raw))
t.test(df.mse$log.ratio)
beta = 10
shock = 0
folder = "./data/res_sim/1124/"
file.list = as.list(list.files(folder))
length = 100
treat_time = 60
n_mse = 10
treatment = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
pre.start = 51
pre.end = 60
post.start = 61
post.end = 70
# de.mse
df.mse = future_map2(
file.list,
as.list(1:length(file.list)),
~{
file.name = .x
data.id = .y
data.list = readRDS(paste0(folder, file.name))
mse = future_map2(
data.list,
as.list(names(data.list)),
~{
result = .x
grid.id = .y
value = result$res.synth.target.raw$value
synth.raw = result$res.synth.target.raw$synthetic
synth.TFDTW = result$res.synth.target.TFDTW$synthetic
gap.raw = value - synth.raw - treatment
gap.TFDTW = value - synth.TFDTW - treatment
data.frame(grid.id = grid.id,
mse.preT.raw = mean(gap.raw[pre.start:pre.end]^2, na.rm = T),
mse.preT.TFDTW = mean(gap.TFDTW[pre.start:pre.end]^2, na.rm = T),
mse.postT.raw = mean(gap.raw[post.start:post.end]^2, na.rm = T),
mse.postT.TFDTW = mean(gap.TFDTW[post.start:post.end]^2, na.rm = T))
}
) %>% do.call("rbind", .)
mse$data.id = data.id
mse %>%
top_n(-1, mse.preT.TFDTW) %>%
top_n(-1, grid.id)
}
) %>% do.call("rbind", .)
saveRDS(df.mse, paste0("./data/df.mse_sim_beta_", beta, ".Rds"))
# t.test for log(MSEdsc/MSEsc)
df.mse = readRDS(paste0("./data/df.mse_sim_beta_", beta, ".Rds"))
df.mse = df.mse %>%
mutate(log.ratio = log(mse.postT.TFDTW/mse.postT.raw))
t.test(df.mse$log.ratio)
beta = 5
shock = 10
folder = "./data/res_sim/1010/"
file.list = as.list(list.files(folder))
length = 100
treat_time = 60
n_mse = 10
treatment = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
pre.start = 51
pre.end = 60
post.start = 61
post.end = 70
# de.mse
df.mse = future_map2(
file.list,
as.list(1:length(file.list)),
~{
file.name = .x
data.id = .y
data.list = readRDS(paste0(folder, file.name))
mse = future_map2(
data.list,
as.list(names(data.list)),
~{
result = .x
grid.id = .y
value = result$res.synth.target.raw$value
synth.raw = result$res.synth.target.raw$synthetic
synth.TFDTW = result$res.synth.target.TFDTW$synthetic
gap.raw = value - synth.raw - treatment
gap.TFDTW = value - synth.TFDTW - treatment
data.frame(grid.id = grid.id,
mse.preT.raw = mean(gap.raw[pre.start:pre.end]^2, na.rm = T),
mse.preT.TFDTW = mean(gap.TFDTW[pre.start:pre.end]^2, na.rm = T),
mse.postT.raw = mean(gap.raw[post.start:post.end]^2, na.rm = T),
mse.postT.TFDTW = mean(gap.TFDTW[post.start:post.end]^2, na.rm = T))
}
) %>% do.call("rbind", .)
mse$data.id = data.id
mse %>%
top_n(-1, mse.preT.TFDTW) %>%
top_n(-1, grid.id)
}
) %>% do.call("rbind", .)
saveRDS(df.mse, paste0("./data/df.mse_sim_beta_", beta, ".Rds"))
# t.test for log(MSEdsc/MSEsc)
df.mse = readRDS(paste0("./data/df.mse_sim_beta_", beta, ".Rds"))
df.mse = df.mse %>%
mutate(log.ratio = log(mse.postT.TFDTW/mse.postT.raw))
t.test(df.mse$log.ratio)
beta = 0
shock = 10
folder = "./data/res_sim/1011/"
file.list = as.list(list.files(folder))
length = 100
treat_time = 60
n_mse = 10
treatment = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
pre.start = 51
pre.end = 60
post.start = 61
post.end = 70
# de.mse
df.mse = future_map2(
file.list,
as.list(1:length(file.list)),
~{
file.name = .x
data.id = .y
data.list = readRDS(paste0(folder, file.name))
mse = future_map2(
data.list,
as.list(names(data.list)),
~{
result = .x
grid.id = .y
value = result$res.synth.target.raw$value
synth.raw = result$res.synth.target.raw$synthetic
synth.TFDTW = result$res.synth.target.TFDTW$synthetic
gap.raw = value - synth.raw - treatment
gap.TFDTW = value - synth.TFDTW - treatment
data.frame(grid.id = grid.id,
mse.preT.raw = mean(gap.raw[pre.start:pre.end]^2, na.rm = T),
mse.preT.TFDTW = mean(gap.TFDTW[pre.start:pre.end]^2, na.rm = T),
mse.postT.raw = mean(gap.raw[post.start:post.end]^2, na.rm = T),
mse.postT.TFDTW = mean(gap.TFDTW[post.start:post.end]^2, na.rm = T))
}
) %>% do.call("rbind", .)
mse$data.id = data.id
mse %>%
top_n(-1, mse.preT.TFDTW) %>%
top_n(-1, grid.id)
}
) %>% do.call("rbind", .)
saveRDS(df.mse, paste0("./data/df.mse_sim_beta_", beta, ".Rds"))
# t.test for log(MSEdsc/MSEsc)
df.mse = readRDS(paste0("./data/df.mse_sim_beta_", beta, ".Rds"))
df.mse = df.mse %>%
mutate(log.ratio = log(mse.postT.TFDTW/mse.postT.raw))
t.test(df.mse$log.ratio)
# t.test for log(MSEdsc/MSEsc)
df.mse = readRDS("./data/df.mse_basque.Rds")
df.mse = df.mse %>%
mutate(log.ratio = log(mse.postT.TFDTW/mse.postT.raw),
data.id = as.character(data.id))
res.aov = aov(log.ratio ~ data.id*unit, df.mse)
summary.aov = summary(res.aov)
BMS = summary.aov[[1]]$`Mean Sq`[1]
JMS = summary.aov[[1]]$`Mean Sq`[2]
EMS = summary.aov[[1]]$`Mean Sq`[3]
n = summary.aov[[1]]$`Df`[1] + 1
k = summary.aov[[1]]$`Df`[2] + 1
res.icc = (BMS - EMS)/(BMS + (k - 1)*EMS + k*(JMS - EMS)/n)
res.vif = 1 + (k - 1)*res.icc
DF = nrow(df2)/res.vif
t.value = t.test(df.mse$log.ratio)$statistic
p.value = pt(t.value, df = DF, lower.tail = TRUE)*2
t.test(df.mse$log.ratio)
DF
p.value
# t.test for log(MSEdsc/MSEsc)
df.mse = readRDS("./data/df.mse_tobacco.Rds")
df.mse = df.mse %>%
mutate(log.ratio = log(mse.postT.TFDTW/mse.postT.raw),
data.id = as.character(data.id))
res.aov = aov(log.ratio ~ data.id*unit, df.mse)
summary.aov = summary(res.aov)
BMS = summary.aov[[1]]$`Mean Sq`[1]
JMS = summary.aov[[1]]$`Mean Sq`[2]
EMS = summary.aov[[1]]$`Mean Sq`[3]
n = summary.aov[[1]]$`Df`[1] + 1
k = summary.aov[[1]]$`Df`[2] + 1
res.icc = (BMS - EMS)/(BMS + (k - 1)*EMS + k*(JMS - EMS)/n)
res.vif = 1 + (k - 1)*res.icc
DF = nrow(df2)/res.vif
t.value = t.test(df.mse$log.ratio)$statistic
p.value = pt(t.value, df = DF, lower.tail = TRUE)*2
t.test(df.mse$log.ratio)
DF
res.vif
BMS = summary.aov[[1]]$`Mean Sq`[1]
JMS = summary.aov[[1]]$`Mean Sq`[2]
EMS = summary.aov[[1]]$`Mean Sq`[3]
n = summary.aov[[1]]$`Df`[1] + 1
k = summary.aov[[1]]$`Df`[2] + 1
res.icc = (BMS - EMS)/(BMS + (k - 1)*EMS + k*(JMS - EMS)/n)
res.vif = 1 + (k - 1)*res.icc
DF = nrow(df.mse)/res.vif
t.value = t.test(df.mse$log.ratio)$statistic
p.value = pt(t.value, df = DF, lower.tail = TRUE)*2
DF
t.test(df.mse$log.ratio)
t.value = t.test(df.mse$log.ratio)$statistic
p.value = pt(t.value, df = DF, lower.tail = TRUE)*2
p.value
df.mse = readRDS("./data/df.mse_basque.Rds")
df.mse = df.mse %>%
mutate(log.ratio = log(mse.postT.TFDTW/mse.postT.raw),
data.id = as.character(data.id))
res.aov = aov(log.ratio ~ data.id*unit, df.mse)
summary.aov = summary(res.aov)
BMS = summary.aov[[1]]$`Mean Sq`[1]
JMS = summary.aov[[1]]$`Mean Sq`[2]
EMS = summary.aov[[1]]$`Mean Sq`[3]
n = summary.aov[[1]]$`Df`[1] + 1
k = summary.aov[[1]]$`Df`[2] + 1
res.icc = (BMS - EMS)/(BMS + (k - 1)*EMS + k*(JMS - EMS)/n)
res.vif = 1 + (k - 1)*res.icc
DF = nrow(df.mse)/res.vif
t.value = t.test(df.mse$log.ratio)$statistic
p.value = pt(t.value, df = DF, lower.tail = TRUE)*2
DF
df.mse = readRDS("./data/df.mse_germany.Rds")
df.mse = df.mse %>%
mutate(log.ratio = log(mse.postT.TFDTW/mse.postT.raw),
data.id = as.character(data.id))
res.aov = aov(log.ratio ~ data.id*unit, df.mse)
summary.aov = summary(res.aov)
BMS = summary.aov[[1]]$`Mean Sq`[1]
JMS = summary.aov[[1]]$`Mean Sq`[2]
EMS = summary.aov[[1]]$`Mean Sq`[3]
n = summary.aov[[1]]$`Df`[1] + 1
k = summary.aov[[1]]$`Df`[2] + 1
res.icc = (BMS - EMS)/(BMS + (k - 1)*EMS + k*(JMS - EMS)/n)
res.vif = 1 + (k - 1)*res.icc
DF = nrow(df.mse)/res.vif
t.value = t.test(df.mse$log.ratio)$statistic
p.value = pt(t.value, df = DF, lower.tail = TRUE)*2
t.test(df.mse$log.ratio)
DF
p.value
exp(-1.26)
exp(-0.06)
library(checkpoint)
checkpoint("2022-04-01")
library(tidyverse)
library(furrr)
plan(multisession, workers = 7)
options(future.rng.onMisuse="ignore")
options(stringsAsFactors = FALSE)
source("./R/misc.R")
source("./R/TFDTW.R")
source("./R/synth.R")
source("./R/implement.R")
source("./R/simulate.R")
source("./R/grid.search.R")
set.seed(20220407)
## 3. Placebo Test -------------------------------------------------------------
fig_basque = readRDS("./data/placebo_basque.Rds")
fig_tobacco = readRDS("./data/placebo_tobacco.Rds")
fig_germany = readRDS("./data/placebo_germany.Rds")
fig_all = ggpubr::ggarrange(fig_basque + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig_tobacco + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig_germany + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
labels = c("Basque Terrorism",
"California Tobacco",
"German Reunification"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
fig_all = ggpubr::annotate_figure(fig_all,
left = grid::textGrob("Gap (y - Synthetic Control)",
rot = 90, vjust = 1,
gp = grid::gpar(cex = 1.3)),
bottom = grid::textGrob("Time",
gp = grid::gpar(cex = 1.3)))
ggsave("./figures/placebo_all_0111.pdf",
fig_all, width = 7, height = 7,
units = "in", limitsize = FALSE)
# plot
df.target = readRDS("./data/df.target_tobacco.Rds")
df.gap = readRDS("./data/df.gap_tobacco.Rds")
df.quantile = df.gap %>%
group_by(time) %>%
summarise(quantile.sc.975 = quantile(gap.sc, 0.975, na.rm = T),
quantile.sc.025 = quantile(gap.sc, 0.025, na.rm = T),
quantile.dsc.975 = quantile(gap.dsc, 0.975, na.rm = T),
quantile.dsc.025 = quantile(gap.dsc, 0.025, na.rm = T)) %>%
mutate(group = "quantile")
View(df.quantile)
df.quantile[29:31,4:5] = NA
color.sc = "#2ab7ca"
color.dsc = "#fe4a49"
# color.sc = "grey70"
# color.dsc = "grey30"
colors = c("Gap (SC)" = color.sc,
"Gap (DSC)" = color.dsc)
fills = c("95% Quantile (SC)" = color.sc,
"95% Quantile (DSC)" = color.dsc)
group.sample = sample(unique(df.gap$group), 100)
fig.placebo = df.gap %>%
filter(group %in% group.sample) %>%
ggplot(aes(x = time, group = group)) +
annotate("rect", xmin = 1989, xmax = 1999,
ymin = -60, ymax = 70, alpha = .3) +
geom_line(aes(y = gap.sc), col = color.sc, alpha = 0.4) +
geom_line(aes(y = gap.dsc), col = color.dsc, alpha = 0.4) +
geom_ribbon(aes(ymin = quantile.sc.025,
ymax = quantile.sc.975,
fill="95% Quantile (SC)"),
data = df.quantile, alpha=0.5) +
geom_ribbon(aes(ymin = quantile.dsc.025,
ymax = quantile.dsc.975,
fill="95% Quantile (DSC)"),
data = df.quantile, alpha=0.5) +
geom_line(aes(y = gap.sc, color = "Gap (SC)"),
data = df.target, size = 1) +
geom_line(aes(y = gap.dsc, color = "Gap (DSC)"),
data = df.target, size = 1) +
scale_color_manual(name = NULL, values = colors) +
scale_fill_manual(name = NULL, values = fills) +
geom_vline(xintercept = 1989, linetype="dashed", col = "grey20") +
geom_hline(yintercept = 0, linetype="dashed", col = "grey20") +
annotate("text", x = 1994, y = 33,
label = "t = -4.8774\nP < 0.0001", col = "grey20") +
annotate("text", x = 1988, y = 25, angle = 90,
label = "Treatment", col = "grey20") +
coord_cartesian(xlim=c(1969, 2009), ylim=c(-40,40)) +
xlab("Year") +
ylab("Gap(y - Synthetic Control)") +
theme_bw() +
theme(legend.position = "none",
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
# ggsave("./figures/placebo_tobacco.pdf",
#        fig.placebo, width = 8, height = 6,
#        units = "in", limitsize = FALSE)
saveRDS(fig.placebo, "./data/placebo_tobacco.Rds")
fig.placebo
## 3. Placebo Test -------------------------------------------------------------
fig_basque = readRDS("./data/placebo_basque.Rds")
fig_tobacco = readRDS("./data/placebo_tobacco.Rds")
fig_germany = readRDS("./data/placebo_germany.Rds")
fig_all = ggpubr::ggarrange(fig_basque + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig_tobacco + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig_germany + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
labels = c("Basque Terrorism",
"California Tobacco",
"German Reunification"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
fig_all = ggpubr::annotate_figure(fig_all,
left = grid::textGrob("Gap (y - Synthetic Control)",
rot = 90, vjust = 1,
gp = grid::gpar(cex = 1.3)),
bottom = grid::textGrob("Time",
gp = grid::gpar(cex = 1.3)))
ggsave("./figures/placebo_all_0111.pdf",
fig_all, width = 7, height = 7,
units = "in", limitsize = FALSE)
