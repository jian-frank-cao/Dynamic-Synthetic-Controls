geom_point() +
geom_abline(intercept = 0, slope = 1, size = 0.5) +
theme(legend.position="none") +
ggtitle("Basque")
fig = df %>%
mutate(gap_new = abs(gap_new),
gap_original = abs(gap_original),
id = factor(str_split(unit, "-", simplify = TRUE)[,1]),
target = factor(str_split(unit, "-", simplify = TRUE)[,2])) %>%
ggplot(aes(x = gap_original, y = gap_new, color = target)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, size = 0.5) +
theme(legend.position="none") +
ggtitle("Basque (Color by Region)") +
xlab("|Synth_sc - True|") +
ylab("|Synth_dsc - True|")
ggsave("./figures/error_plot_basque.pdf",
fig, width = 8, height = 6,
units = "in", limitsize = FALSE)
results = NULL
folder = "./data/placebo/tobacco/"
res.files = list.files(folder)
for (res.file in res.files) {
results = c(results, list(readRDS(paste0(folder, res.file))))
}
df = future_map2(
results,
as.list(1:length(results)),
~{
item = .x
index = .y
mse = future_map2(
item,
names(item),
~{
item = .x
id = .y
item$mse %>% mutate(id = id)
}
) %>%
do.call("rbind", .)
units = unique(mse$unit)
df.gap.list = NULL
for (i in 1:length(units)) {
target = units[[i]]
scores = mse %>%
filter(unit != target) %>%
group_by(id) %>%
summarise(percent = mean(log.ratio < 0),
p.value = t.test(log.ratio)$p.value)
max.percent = which(scores$percent == max(scores$percent))
min.p = which(scores$p.value[max.percent] == min(scores$p.value[max.percent])[1])[1]
opt.ind = as.numeric(scores$id[max.percent[min.p]])
df.gap.list[[i]] = data.frame(
unit = paste0("d", index, "-", target),
time = 1970:2000,
value = item[[opt.ind]]$results.TFDTW.synth[[target]]$res.synth.raw$value,
gap_original = item[[opt.ind]]$results.TFDTW.synth[[target]]$gap.raw,
gap_new = item[[opt.ind]]$results.TFDTW.synth[[target]]$gap.TFDTW
)
# df.gap.list[[i]] = item[[opt.ind]]$mse %>% filter(unit == target) #%>%
#mutate(unit = paste0("d", index, "-", target))
}
df.gap.list %>% do.call("rbind", .)
}
) %>%
do.call("rbind", .)
df = df %>% filter(time %in% 1990:1997)
fig = df %>%
mutate(gap_new = abs(gap_new),
gap_original = abs(gap_original),
id = factor(str_split(unit, "-", simplify = TRUE)[,1]),
target = factor(str_split(unit, "-", simplify = TRUE)[,2])) %>%
ggplot(aes(x = gap_original, y = gap_new, color = target)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, size = 0.5) +
theme(legend.position="none") +
ggtitle("Tobacco (Color by State)") +
xlab("|Synth_sc - True|") +
ylab("|Synth_dsc - True|")
ggsave("./figures/error_plot_tobaco.pdf",
fig, width = 8, height = 6,
units = "in", limitsize = FALSE)
ggsave("./figures/error_plot_tobaco.pdf",
fig, width = 8, height = 8,
units = "in", limitsize = FALSE)
results = NULL
folder = "./data/placebo/basque/"
res.files = list.files(folder)
for (res.file in res.files) {
results = c(results, list(readRDS(paste0(folder, res.file))))
}
df = future_map2(
results,
as.list(1:length(results)),
~{
item = .x
index = .y
mse = future_map2(
item,
names(item),
~{
item = .x
id = .y
item$mse %>% mutate(id = id)
}
) %>%
do.call("rbind", .)
units = unique(mse$unit)
df.gap.list = NULL
for (i in 1:length(units)) {
target = units[[i]]
scores = mse %>%
filter(unit != target) %>%
group_by(id) %>%
summarise(percent = mean(log.ratio < 0),
p.value = t.test(log.ratio)$p.value)
max.percent = which(scores$percent == max(scores$percent))
min.p = which(scores$p.value[max.percent] == min(scores$p.value[max.percent])[1])[1]
opt.ind = as.numeric(scores$id[max.percent[min.p]])
df.gap.list[[i]] = data.frame(
unit = paste0("d", index, "-", target),
time = 1955:1997,
value = item[[opt.ind]]$results.TFDTW.synth[[target]]$res.synth.raw$value,
gap_original = item[[opt.ind]]$results.TFDTW.synth[[target]]$gap.raw,
gap_new = item[[opt.ind]]$results.TFDTW.synth[[target]]$gap.TFDTW
)
# df.gap.list[[i]] = item[[opt.ind]]$mse %>% filter(unit == target) #%>%
#mutate(unit = paste0("d", index, "-", target))
}
df.gap.list %>% do.call("rbind", .)
}
) %>%
do.call("rbind", .)
# ICC::ICCest(unit, log.ratio, data = df, CI.type = "S")
t.interval = 1971:1980
df = df %>% filter(time %in% t.interval)
n.t = length(t.interval)
n.datasets = nrow(df)/length(t.interval)
fig = df %>%
mutate(gap_new = abs(gap_new),
gap_original = abs(gap_original),
id = factor(str_split(unit, "-", simplify = TRUE)[,1]),
target = factor(str_split(unit, "-", simplify = TRUE)[,2])) %>%
ggplot(aes(x = gap_original, y = gap_new, color = target)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, size = 0.5) +
theme(legend.position="none") +
ggtitle("Basque (Color by Region)") +
xlab("|Synth_sc - True|") +
ylab("|Synth_dsc - True|")
ggsave("./figures/error_plot_basque.pdf",
fig, width = 8, height = 8,
units = "in", limitsize = FALSE)
ggsave("./figures/error_plot_basque.pdf",
fig, width = 8, height = 6,
units = "in", limitsize = FALSE)
ggsave("./figures/error_plot_basque.pdf",
fig, width = 8, height = 6,
units = "in", limitsize = FALSE)
results = NULL
folder = "./data/placebo/germany/"
res.files = list.files(folder)
for (res.file in res.files) {
results = c(results, list(readRDS(paste0(folder, res.file))))
}
df = future_map2(
results,
as.list(1:length(results)),
~{
item = .x
index = .y
mse = future_map2(
item,
names(item),
~{
item = .x
id = .y
item$mse %>% mutate(id = id)
}
) %>%
do.call("rbind", .)
units = unique(mse$unit)
df.gap.list = NULL
for (i in 1:length(units)) {
target = units[[i]]
scores = mse %>%
filter(unit != target) %>%
group_by(id) %>%
summarise(percent = mean(log.ratio < 0),
p.value = t.test(log.ratio)$p.value)
max.percent = which(scores$percent == max(scores$percent))
min.p = which(scores$p.value[max.percent] == min(scores$p.value[max.percent])[1])[1]
opt.ind = as.numeric(scores$id[max.percent[min.p]])
df.gap.list[[i]] = data.frame(
unit = paste0("d", index, "-", target),
time = 1960:2003,
value = item[[opt.ind]]$results.TFDTW.synth[[target]]$res.synth.raw$value,
gap_original = item[[opt.ind]]$results.TFDTW.synth[[target]]$gap.raw,
gap_new = item[[opt.ind]]$results.TFDTW.synth[[target]]$gap.TFDTW
)
# df.gap.list[[i]] = item[[opt.ind]]$mse %>% filter(unit == target) #%>%
#mutate(unit = paste0("d", index, "-", target))
}
df.gap.list %>% do.call("rbind", .)
}
) %>%
do.call("rbind", .)
df = df %>% filter(time %in% 1991:2000)
fig = df %>%
mutate(gap_new = abs(gap_new),
gap_original = abs(gap_original),
id = factor(str_split(unit, "-", simplify = TRUE)[,1]),
target = factor(str_split(unit, "-", simplify = TRUE)[,2])) %>%
ggplot(aes(x = gap_original, y = gap_new, color = target)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, size = 0.5) +
theme(legend.position="none") +
ggtitle("Germany (Color by Country)") +
xlab("|Synth_sc - True|") +
ylab("|Synth_dsc - True|")
ggsave("./figures/error_plot_germany.pdf",
fig, width = 8, height = 8,
units = "in", limitsize = FALSE)
library(tidyverse)
library(furrr)
plan(multisession, workers = 8)
options(future.rng.onMisuse="ignore")
options(stringsAsFactors = FALSE)
source("./R/misc.R")
source("./R/TFDTW.R")
source("./R/synth.R")
source("./R/implement.R")
source("./R/simulate.R")
source("./R/grid.search.R")
set.seed(20220407)
library(tidyverse)
library(furrr)
plan(multisession, workers = 8)
options(future.rng.onMisuse="ignore")
options(stringsAsFactors = FALSE)
source("./R/misc.R")
source("./R/TFDTW.R")
source("./R/synth.R")
source("./R/implement.R")
source("./R/simulate.R")
source("./R/grid.search.R")
set.seed(20220407)
results = NULL
beta = 1
folder = "./data/res_sim/1006/"
res.files = list.files(folder)
for (res.file in res.files) {
results = c(results, list(readRDS(paste0(folder, res.file))))
}
length = 100
shock = 10
treat_time = 60
n_mse = 10
causal_effect = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
# placebo test figure
res = future_map2(
results,
as.list(1:length(results)),
~{
item = .x
id = .y
# neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
# # neg.ratio.rank = rank(neg.ratio, ties.method = "max")
# ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
# p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
# # p.value.rank = rank(1 - p.value, ties.method = "max")
# ind.min.p.value = which(p.value == min(p.value, na.rm = T))[1]
# # mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
# #   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# # mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# # score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# # ind = which(score == max(score, na.rm = T))[1]
# ind = ind.max.neg.ratio[1]
neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
ind.min.p.value = which(p.value == min(p.value, na.rm = T))
# mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
#   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# ind = which(score == max(score, na.rm = T))[1]
ind = ind.max.neg.ratio[ind.min.p.value[1]]
synth_original = item[[ind]][["res.synth.target.raw"]][["synthetic"]]
synth_new = item[[ind]][["res.synth.target.TFDTW"]][["synthetic"]]
value_raw = item[[ind]][["res.synth.target.raw"]][["value"]]
gap_original = value_raw - synth_original
gap_new = value_raw - synth_new
diff_original = value_raw - synth_original - causal_effect
diff_new = value_raw - synth_new - causal_effect
mse_original = mean(diff_original[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse_new = mean(diff_new[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse = data.frame(mse_original = mse_original,
mse_new = mse_new,
log_ratio = log(mse_new/mse_original))
list(df = data.frame(time = 0:(length(value_raw)-1),
id = id,
value_raw = value_raw,
synth_original = synth_original,
synth_new = synth_new,
gap_origin = gap_original,
gap_new = gap_new,
diff_original = diff_original,
diff_new = diff_new),
mse = mse)
}
)
df = lapply(res, "[[", "df") %>% do.call("rbind", .)
df = df %>% filter(time %in% 61:70)
fig = df %>%
# mutate(gap_new = abs(gap_new),
#        gap_original = abs(gap_original),
#        id = factor(str_split(unit, "-", simplify = TRUE)[,1]),
#        target = factor(str_split(unit, "-", simplify = TRUE)[,2])) %>%
mutate(gap_new = abs(diff_new),
gap_original = abs(diff_original)) %>%
ggplot(aes(x = gap_original, y = gap_new, color = id)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, size = 0.5) +
theme(legend.position="none") +
ggtitle("Simulation Study Beta = 1 (Color by Data Set)") +
xlab("|Synth_sc - True|") +
ylab("|Synth_dsc - True|")
ggsave("./figures/error_plot_sim1.pdf",
fig, width = 8, height = 8,
units = "in", limitsize = FALSE)
ggsave("./figures/error_plot_sim1.pdf",
fig, width = 8, height = 6,
units = "in", limitsize = FALSE)
ggsave("./figures/error_plot_sim1.pdf",
fig, width = 8, height = 6,
units = "in", limitsize = FALSE)
results = NULL
beta = 1
folder = "./data/res_sim/1010/"
res.files = list.files(folder)
for (res.file in res.files) {
results = c(results, list(readRDS(paste0(folder, res.file))))
}
length = 100
shock = 10
treat_time = 60
n_mse = 10
causal_effect = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
# placebo test figure
res = future_map2(
results,
as.list(1:length(results)),
~{
item = .x
id = .y
# neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
# # neg.ratio.rank = rank(neg.ratio, ties.method = "max")
# ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
# p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
# # p.value.rank = rank(1 - p.value, ties.method = "max")
# ind.min.p.value = which(p.value == min(p.value, na.rm = T))[1]
# # mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
# #   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# # mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# # score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# # ind = which(score == max(score, na.rm = T))[1]
# ind = ind.max.neg.ratio[1]
neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
ind.min.p.value = which(p.value == min(p.value, na.rm = T))
# mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
#   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# ind = which(score == max(score, na.rm = T))[1]
ind = ind.max.neg.ratio[ind.min.p.value[1]]
synth_original = item[[ind]][["res.synth.target.raw"]][["synthetic"]]
synth_new = item[[ind]][["res.synth.target.TFDTW"]][["synthetic"]]
value_raw = item[[ind]][["res.synth.target.raw"]][["value"]]
gap_original = value_raw - synth_original
gap_new = value_raw - synth_new
diff_original = value_raw - synth_original - causal_effect
diff_new = value_raw - synth_new - causal_effect
mse_original = mean(diff_original[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse_new = mean(diff_new[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse = data.frame(mse_original = mse_original,
mse_new = mse_new,
log_ratio = log(mse_new/mse_original))
list(df = data.frame(time = 0:(length(value_raw)-1),
id = id,
value_raw = value_raw,
synth_original = synth_original,
synth_new = synth_new,
gap_origin = gap_original,
gap_new = gap_new,
diff_original = diff_original,
diff_new = diff_new),
mse = mse)
}
)
df = lapply(res, "[[", "df") %>% do.call("rbind", .)
df = df %>% filter(time %in% 61:70)
fig = df %>%
# mutate(gap_new = abs(gap_new),
#        gap_original = abs(gap_original),
#        id = factor(str_split(unit, "-", simplify = TRUE)[,1]),
#        target = factor(str_split(unit, "-", simplify = TRUE)[,2])) %>%
mutate(gap_new = abs(diff_new),
gap_original = abs(diff_original)) %>%
ggplot(aes(x = gap_original, y = gap_new, color = id)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, size = 0.5) +
theme(legend.position="none") +
ggtitle("Simulation Study Beta = 0.5 (Color by Data Set)") +
xlab("|Synth_sc - True|") +
ylab("|Synth_dsc - True|")
ggsave("./figures/error_plot_sim05.pdf",
fig, width = 8, height = 6,
units = "in", limitsize = FALSE)
results = NULL
beta = 1
folder = "./data/res_sim/1011/"
res.files = list.files(folder)
for (res.file in res.files) {
results = c(results, list(readRDS(paste0(folder, res.file))))
}
length = 100
shock = 10
treat_time = 60
n_mse = 10
causal_effect = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
# placebo test figure
res = future_map2(
results,
as.list(1:length(results)),
~{
item = .x
id = .y
# neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
# # neg.ratio.rank = rank(neg.ratio, ties.method = "max")
# ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
# p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
# # p.value.rank = rank(1 - p.value, ties.method = "max")
# ind.min.p.value = which(p.value == min(p.value, na.rm = T))[1]
# # mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
# #   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# # mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# # score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# # ind = which(score == max(score, na.rm = T))[1]
# ind = ind.max.neg.ratio[1]
neg.ratio = lapply(item, "[[", "neg.ratio") %>% do.call("c", .)
ind.max.neg.ratio = which(neg.ratio == max(neg.ratio, na.rm = T))
p.value = lapply(item, "[[", "p.value") %>% do.call("c", .) %>% .[ind.max.neg.ratio]
ind.min.p.value = which(p.value == min(p.value, na.rm = T))
# mse.pre = lapply(item, "[[", "mse") %>% do.call("rbind", .) %>%
#   filter(unit == "A") %>% .[["mse.preT.TFDTW"]] %>% .[ind.max.neg.ratio]
# mse.pre.rank = rank(1 - mse.pre, ties.method = "max")
# score = neg.ratio.rank*3 + p.value.rank*2 + mse.pre.rank
# ind = which(score == max(score, na.rm = T))[1]
ind = ind.max.neg.ratio[ind.min.p.value[1]]
synth_original = item[[ind]][["res.synth.target.raw"]][["synthetic"]]
synth_new = item[[ind]][["res.synth.target.TFDTW"]][["synthetic"]]
value_raw = item[[ind]][["res.synth.target.raw"]][["value"]]
gap_original = value_raw - synth_original
gap_new = value_raw - synth_new
diff_original = value_raw - synth_original - causal_effect
diff_new = value_raw - synth_new - causal_effect
mse_original = mean(diff_original[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse_new = mean(diff_new[(treat_time + 1):(treat_time + n_mse)]^2, rm.na = T)
mse = data.frame(mse_original = mse_original,
mse_new = mse_new,
log_ratio = log(mse_new/mse_original))
list(df = data.frame(time = 0:(length(value_raw)-1),
id = id,
value_raw = value_raw,
synth_original = synth_original,
synth_new = synth_new,
gap_origin = gap_original,
gap_new = gap_new,
diff_original = diff_original,
diff_new = diff_new),
mse = mse)
}
)
df = lapply(res, "[[", "df") %>% do.call("rbind", .)
df = df %>% filter(time %in% 61:70)
fig = df %>%
# mutate(gap_new = abs(gap_new),
#        gap_original = abs(gap_original),
#        id = factor(str_split(unit, "-", simplify = TRUE)[,1]),
#        target = factor(str_split(unit, "-", simplify = TRUE)[,2])) %>%
mutate(gap_new = abs(diff_new),
gap_original = abs(diff_original)) %>%
ggplot(aes(x = gap_original, y = gap_new, color = id)) +
geom_point() +
geom_abline(intercept = 0, slope = 1, size = 0.5) +
theme(legend.position="none") +
ggtitle("Simulation Study Beta = 0 (Color by Data Set)") +
xlab("|Synth_sc - True|") +
ylab("|Synth_dsc - True|")
ggsave("./figures/error_plot_sim0.pdf",
fig, width = 8, height = 6,
units = "in", limitsize = FALSE)
