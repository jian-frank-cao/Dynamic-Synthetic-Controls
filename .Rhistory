geom_line(size = 0.7) +
scale_color_manual(name = NULL,
values = c("Est. TE (SC)" = "#2ab7ca",
"Est. TE (DSC)" = "#fe4a49",
"TE" = "#4a4e4d")) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
annotate("text", x = 59, y = 10,
label = "Treatment", col = "grey20",
angle = 90) +
xlab("Time") +
ylab("Y") +
coord_cartesian(ylim = c(-5, 15), xlim = c(0, 100)) +
theme_bw() +
theme(legend.position = c(0.86,0.3),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
fig.all = ggpubr::ggarrange(fig.1 + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig.2 + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig.3 + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
labels = c("Simulation",
"Synthetic Control",
"Treatment Effect"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
fig.all = ggpubr::annotate_figure(fig.all,
left = grid::textGrob("Value",
rot = 90, vjust = 1,
gp = grid::gpar(cex = 1.3)),
bottom = grid::textGrob("Time",
gp = grid::gpar(cex = 1.3)))
ggsave("./figures/sim_sample.pdf",
fig.all, width = 6, height = 6,
units = "in", limitsize = FALSE)
## plot figure
fig.1 = df.sim %>%
filter(id %in% c(2,3,4)) %>%
ggplot(aes(x = time, y = value, color = unit)) + # , linetype = unit
geom_line(size = 0.7) +
geom_line(aes(x = time, y = value, color = unit),
data = df.sim %>% filter(id == 1)) +
# scale_linetype_manual(name = NULL,
#                       values = c("Unit T" = "solid", "Unit C1" = "dashed",
#                                  "Unit C2" = "dotted", "Unit C3" = "dotdash")) +
scale_color_manual(name = NULL,
# labels = c(expression(paste("Unit ", bold(y)[2])),
#            expression(paste("Unit ", bold(y)[3])),
#            expression(paste("Unit ", bold(y)[4])),
#            expression(paste("Unit ", bold(y)[1]))),
values = c("Unit T" = "grey10", "Unit C1" = "grey60",
"Unit C2" = "grey70", "Unit C3" = "grey80")) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
# annotate("text", x = 59, y = 4.5,
#          label = "Treatment", col = "grey20",
#          angle = 90) +
xlab("Time") +
ylab("Y") +
coord_cartesian(ylim = c(0, 20), xlim = c(0, 100)) +
theme_bw() +
theme(legend.position = c(0.4,0.4),
legend.box = "horizontal",
legend.text.align = 0,
legend.background = element_rect(fill=NA))
fig.2 = df.sim %>%
filter(id %in% c(5,6)) %>%
ggplot(aes(x = time, y = value, color = unit)) +
geom_line(size = 0.7) +
scale_color_manual(name = NULL,
values = c("SC" = "#2ab7ca", "DSC" = "#fe4a49")) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
# annotate("text", x = 59, y = 4.5,
#          label = "Treatment", col = "grey20",
#          angle = 90) +
xlab("Time") +
ylab("Y") +
coord_cartesian(ylim = c(0, 20), xlim = c(0, 100)) +
theme_bw() +
theme(legend.position = c(0.4,0.35),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
fig.3 = df.sim %>%
filter(id %in% c(7,8,9)) %>%
ggplot(aes(x = time, y = value, color = unit)) +
geom_line(size = 0.7) +
scale_color_manual(name = NULL,
values = c("Est. TE (SC)" = "#2ab7ca",
"Est. TE (DSC)" = "#fe4a49",
"TE" = "#4a4e4d")) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
annotate("text", x = 59, y = 10,
label = "Treatment", col = "grey20",
angle = 90) +
xlab("Time") +
ylab("Y") +
coord_cartesian(ylim = c(-5, 15), xlim = c(0, 100)) +
theme_bw() +
theme(legend.position = c(0.86,0.3),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
fig.all = ggpubr::ggarrange(fig.1 + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig.2 + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig.3 + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
labels = c("Simulation",
"Synthetic Control",
"Treatment Effect"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
fig.all = ggpubr::annotate_figure(fig.all,
left = grid::textGrob("Value",
rot = 90, vjust = 1,
gp = grid::gpar(cex = 1.3)),
bottom = grid::textGrob("Time",
gp = grid::gpar(cex = 1.3)))
ggsave("./figures/sim_sample.pdf",
fig.all, width = 6, height = 6,
units = "in", limitsize = FALSE)
library(ggplot2)
# Create example data
df <- data.frame(
x = c(1, 2, 3, 4),
y = c(1, 2, 3, 4),
group = factor(c("A", "B", "C", "D"), levels = c("D", "C", "B", "A"))
)
ggplot(df, aes(x, y, color = group)) +
geom_point(size = 3) +
scale_colour_manual(values = c("B" = "red", "A" = "blue", "D" = "green", "C" = "purple"))
df.sim = rbind(
data.frame(id = 1, unit = "Unit T", time = 1:100,
value = data %>% filter(unit == "A") %>% .[["value"]]),
data.frame(id = 2, unit = "Unit C1", time = 1:100,
value = data %>% filter(unit == "C") %>% .[["value"]]),
data.frame(id = 3, unit = "Unit C2", time = 1:100,
value = data %>% filter(unit == "H") %>% .[["value"]]),
data.frame(id = 4, unit = "Unit C3", time = 1:100,
value = data %>% filter(unit == "J") %>% .[["value"]]),
data.frame(id = 5, unit = "SC", time = 1:100,
value = synth.sc),
data.frame(id = 6, unit = "DSC", time = 1:100,
value = synth.dsc),
data.frame(id = 7, unit = "TE", time = 1:100,
value = treatment),
data.frame(id = 8, unit = "Est. TE (SC)", time = 1:100,
value = data %>% filter(unit == "A") %>% .[["value"]] - synth.sc),
data.frame(id = 9, unit = "Est. TE (DSC)", time = 1:100,
value = data %>% filter(unit == "A") %>% .[["value"]] - synth.dsc)
)
df.sim$unit = factor(df.sim$unit, levels = c("Unit T", "Unit C1", "Unit C2",
"Unit C3", "SC", "DSC", "TE",
"Est. TE (SC)", "Est. TE (DSC)"))
## plot figure
fig.1 = df.sim %>%
filter(id %in% c(2,3,4)) %>%
ggplot(aes(x = time, y = value, color = unit)) + # , linetype = unit
geom_line(size = 0.7) +
geom_line(aes(x = time, y = value, color = unit),
data = df.sim %>% filter(id == 1)) +
# scale_linetype_manual(name = NULL,
#                       values = c("Unit T" = "solid", "Unit C1" = "dashed",
#                                  "Unit C2" = "dotted", "Unit C3" = "dotdash")) +
scale_color_manual(name = NULL,
labels = c(expression(paste("Unit ", bold(y)[1])),
expression(paste("Unit ", bold(y)[2])),
expression(paste("Unit ", bold(y)[3])),
expression(paste("Unit ", bold(y)[4]))),
values = c("Unit T" = "grey10", "Unit C1" = "grey60",
"Unit C2" = "grey70", "Unit C3" = "grey80")) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
# annotate("text", x = 59, y = 4.5,
#          label = "Treatment", col = "grey20",
#          angle = 90) +
xlab("Time") +
ylab("Y") +
coord_cartesian(ylim = c(0, 20), xlim = c(0, 100)) +
theme_bw() +
theme(legend.position = c(0.4,0.4),
legend.box = "horizontal",
legend.text.align = 0,
legend.background = element_rect(fill=NA))
fig.2 = df.sim %>%
filter(id %in% c(5,6)) %>%
ggplot(aes(x = time, y = value, color = unit)) +
geom_line(size = 0.7) +
scale_color_manual(name = NULL,
values = c("SC" = "#2ab7ca", "DSC" = "#fe4a49")) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
# annotate("text", x = 59, y = 4.5,
#          label = "Treatment", col = "grey20",
#          angle = 90) +
xlab("Time") +
ylab("Y") +
coord_cartesian(ylim = c(0, 20), xlim = c(0, 100)) +
theme_bw() +
theme(legend.position = c(0.4,0.35),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
fig.3 = df.sim %>%
filter(id %in% c(7,8,9)) %>%
ggplot(aes(x = time, y = value, color = unit)) +
geom_line(size = 0.7) +
scale_color_manual(name = NULL,
values = c("Est. TE (SC)" = "#2ab7ca",
"Est. TE (DSC)" = "#fe4a49",
"TE" = "#4a4e4d")) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
annotate("text", x = 59, y = 10,
label = "Treatment", col = "grey20",
angle = 90) +
xlab("Time") +
ylab("Y") +
coord_cartesian(ylim = c(-5, 15), xlim = c(0, 100)) +
theme_bw() +
theme(legend.position = c(0.86,0.3),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
fig.all = ggpubr::ggarrange(fig.1 + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig.2 + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig.3 + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
labels = c("Simulation",
"Synthetic Control",
"Treatment Effect"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
fig.all = ggpubr::annotate_figure(fig.all,
left = grid::textGrob("Value",
rot = 90, vjust = 1,
gp = grid::gpar(cex = 1.3)),
bottom = grid::textGrob("Time",
gp = grid::gpar(cex = 1.3)))
ggsave("./figures/sim_sample.pdf",
fig.all, width = 6, height = 6,
units = "in", limitsize = FALSE)
## plot figure
fig.1 = df.sim %>%
filter(id %in% c(2,3,4)) %>%
ggplot(aes(x = time, y = value, color = unit)) + # , linetype = unit
geom_line(size = 0.7) +
geom_line(aes(x = time, y = value, color = unit),
data = df.sim %>% filter(id == 1)) +
# scale_linetype_manual(name = NULL,
#                       values = c("Unit T" = "solid", "Unit C1" = "dashed",
#                                  "Unit C2" = "dotted", "Unit C3" = "dotdash")) +
scale_color_manual(name = NULL,
labels = c(expression(paste("Unit ", bold(y)[2])),
expression(paste("Unit ", bold(y)[3])),
expression(paste("Unit ", bold(y)[4])),
expression(paste("Unit ", bold(y)[1]))),
values = c("Unit T" = "grey10", "Unit C1" = "grey60",
"Unit C2" = "grey70", "Unit C3" = "grey80")) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
# annotate("text", x = 59, y = 4.5,
#          label = "Treatment", col = "grey20",
#          angle = 90) +
xlab("Time") +
ylab("Y") +
coord_cartesian(ylim = c(0, 20), xlim = c(0, 100)) +
theme_bw() +
theme(legend.position = c(0.4,0.4),
legend.box = "horizontal",
legend.text.align = 0,
legend.background = element_rect(fill=NA))
fig.2 = df.sim %>%
filter(id %in% c(5,6)) %>%
ggplot(aes(x = time, y = value, color = unit)) +
geom_line(size = 0.7) +
scale_color_manual(name = NULL,
values = c("SC" = "#2ab7ca", "DSC" = "#fe4a49")) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
# annotate("text", x = 59, y = 4.5,
#          label = "Treatment", col = "grey20",
#          angle = 90) +
xlab("Time") +
ylab("Y") +
coord_cartesian(ylim = c(0, 20), xlim = c(0, 100)) +
theme_bw() +
theme(legend.position = c(0.4,0.35),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
fig.3 = df.sim %>%
filter(id %in% c(7,8,9)) %>%
ggplot(aes(x = time, y = value, color = unit)) +
geom_line(size = 0.7) +
scale_color_manual(name = NULL,
values = c("Est. TE (SC)" = "#2ab7ca",
"Est. TE (DSC)" = "#fe4a49",
"TE" = "#4a4e4d")) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
annotate("text", x = 59, y = 10,
label = "Treatment", col = "grey20",
angle = 90) +
xlab("Time") +
ylab("Y") +
coord_cartesian(ylim = c(-5, 15), xlim = c(0, 100)) +
theme_bw() +
theme(legend.position = c(0.86,0.3),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
fig.all = ggpubr::ggarrange(fig.1 + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig.2 + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig.3 + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
labels = c("Simulation",
"Synthetic Control",
"Treatment Effect"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
fig.all = ggpubr::annotate_figure(fig.all,
left = grid::textGrob("Value",
rot = 90, vjust = 1,
gp = grid::gpar(cex = 1.3)),
bottom = grid::textGrob("Time",
gp = grid::gpar(cex = 1.3)))
ggsave("./figures/sim_sample.pdf",
fig.all, width = 6, height = 6,
units = "in", limitsize = FALSE)
library(checkpoint)
checkpoint("2022-04-01")
library(parallel)
n.cores = detectCores()
library(tidyverse)
library(furrr)
plan(multisession, workers = n.cores - 1)
options(future.rng.onMisuse="ignore")
options(stringsAsFactors = FALSE)
source("./R/utility/misc.R")
source("./R/utility/TFDTW.R")
source("./R/utility/synth.R")
source("./R/utility/implement.R")
source("./R/utility/simulate.R")
source("./R/utility/grid.search.R")
set.seed(20220407)
# plot
df.gap = readRDS(paste0("./data/df.gap_sim_beta_", beta, ".Rds"))
beta = 1
# plot
df.gap = readRDS(paste0("./data/df.gap_sim_beta_", beta, ".Rds"))
shock = 10
length = 100
treat_time = 60
n_mse = 10
treatment = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
df.quantile = df.gap %>%
group_by(time) %>%
summarise(mean.sc = mean(gap.sc, na.rm = T),
mean.dsc = mean(gap.dsc, na.rm = T),
quantile.sc.975 = quantile(gap.sc, 0.975, na.rm = T),
quantile.sc.025 = quantile(gap.sc, 0.025, na.rm = T),
quantile.dsc.975 = quantile(gap.dsc, 0.975, na.rm = T),
quantile.dsc.025 = quantile(gap.dsc, 0.025, na.rm = T)) %>%
mutate(group = "quantile",
treatment = treatment)
df.quantile[95:100, c("mean.dsc", "quantile.dsc.975", "quantile.dsc.025")] = NA
color.sc = "#2ab7ca"
color.dsc = "#fe4a49"
colors = c("TE" = "grey20",
"Avg. TE (SC)" = color.sc,
"Avg. TE (DSC)" = color.dsc)
linetypes = c("TE" = "solid",
"Avg. TE (SC)" = "dashed",
"Avg. TE (DSC)" = "dashed")
fills = c("95% Quantile (SC)" = color.sc,
"95% Quantile (DSC)" = color.dsc)
fig.big = df.gap %>%
ggplot(aes(x = time, group = group)) +
annotate("rect", xmin = 61, xmax = 70,
ymin = -25, ymax = 35, alpha = .3) +
geom_line(aes(y = gap.sc), col = color.sc, alpha=0.1) +
geom_line(aes(y = gap.dsc), col = color.dsc, alpha=0.1) +
geom_ribbon(aes(ymin = quantile.sc.025, ymax = quantile.sc.975,
fill = "95% Quantile (SC)"), data = df.quantile, alpha=0.6) +
geom_ribbon(aes(ymin = quantile.dsc.025, ymax = quantile.dsc.975,
fill = "95% Quantile (DSC)"), data = df.quantile, alpha=0.6) +
geom_line(aes(x = time, y = treatment, color = "TE", linetype = "TE"),
data = df.quantile, size = 1) +
geom_line(aes(x = time, y = mean.sc, color = "Avg. TE (SC)", linetype = "Avg. TE (SC)"),
data = df.quantile, size = 0.6) +
geom_line(aes(x = time, y = mean.dsc, color = "Avg. TE (DSC)", linetype = "Avg. TE (DSC)"),
data = df.quantile, size = 0.6) +
scale_color_manual(name = NULL, values = colors) +
scale_fill_manual(name = NULL, values = fills) +
scale_linetype_manual(name = NULL, values = linetypes) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
geom_hline(yintercept = 0, linetype="dashed", col = "grey20") +
annotate("text", x = 59, y = 25, label = "Treatment",
col = "grey20", angle = 90) +
coord_cartesian(ylim = c(-20, 30)) +
xlab("Time") +
ylab("Treatment Effect (TE)") +
theme_bw() +
theme(legend.position=c(0.3,0.15),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
df.t.test = data.frame(Beta = c(0, 0.5, 1),
t = c(-4.7862, -5.8137, -8.2442),
P = c(0.0001, 0.0001, 0.0001))
fig.small = df.t.test %>%
ggplot(aes(x = Beta, y = t)) +
annotate("rect", xmin = -0.2, xmax = 1.2,
ymin = -15, ymax = -2.63, alpha = .3) +
geom_line(size = 1) +
geom_point(size = 2, col = color.dsc) +
geom_hline(yintercept = 0, linetype="solid", col = "black") +
geom_hline(yintercept = -2.63, linetype="dashed", col = "grey20") +
annotate("text", x = 0.75, y = -4,
label = "P < 0.01", col = "grey20") +
scale_x_continuous(breaks = c(0, 0.5, 1),
labels = c("0", "0.5", "1")) +
scale_y_continuous(breaks = c(-10, -5, 0)) +
coord_cartesian(ylim = c(-10, 0), xlim = c(0, 1)) +
xlab(expression(beta)) +
ylab("t") +
theme_bw() +
theme(axis.title.y = element_text(angle = 0, vjust = 0.5))
fig.small = df.t.test %>%
ggplot(aes(x = Beta, y = t)) +
annotate("rect", xmin = -0.2, xmax = 1.2,
ymin = -15, ymax = -2.63, alpha = .3) +
geom_line(size = 1) +
geom_point(size = 2, col = color.dsc) +
geom_hline(yintercept = 0, linetype="solid", col = "black") +
geom_hline(yintercept = -2.63, linetype="dashed", col = "grey20") +
annotate("text", x = 0.75, y = -4,
label = "P < 0.01", col = "grey20") +
scale_x_continuous(breaks = c(0, 0.5, 1),
labels = c("0", "0.5", "1")) +
scale_y_continuous(breaks = c(-10, -5, 0)) +
coord_cartesian(ylim = c(-10, 0), xlim = c(0, 1)) +
xlab(expression(psi)) +
ylab("t") +
theme_bw() +
theme(axis.title.y = element_text(angle = 0, vjust = 0.5))
fig.sim = fig.big + annotation_custom(ggplotGrob(fig.small),
xmin = 5, xmax = 45,
ymin = 7, ymax = 30)
ggsave(paste0("./figures/sim_beta_", beta,".pdf"),
fig.sim, width = 6, height = 4.5,
units = "in", limitsize = FALSE)
## 3. Placebo Test -------------------------------------------------------------
fig_basque = readRDS("./data/placebo_basque.Rds")
fig_tobacco = readRDS("./data/placebo_tobacco.Rds")
fig_germany = readRDS("./data/placebo_germany.Rds")
fig_all = ggpubr::ggarrange(fig_basque + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig_tobacco + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig_germany + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
labels = c("Basque Terrorism",
"California Tobacco",
"German Reunification"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
fig_all = ggpubr::annotate_figure(fig_all,
left = grid::textGrob("Treatment Effect (TE)",
rot = 90, vjust = 1,
gp = grid::gpar(cex = 1.3)),
bottom = grid::textGrob("Time",
gp = grid::gpar(cex = 1.3)))
ggsave("./figures/placebo_all.eps",
plot = fig_all, device = "eps", width = 7, height = 7,
units = "in", limitsize = FALSE)
ggsave("./figures/placebo_all.eps",
plot = fig_all, device = cairo_eps, width = 7, height = 7,
units = "in", limitsize = FALSE)
?install.packages
install.packages("Cairo")
options(repos = c(CRAN = "https://cran.rstudio.com/"))
install.packages("Cairo")
ggsave("./figures/placebo_all.eps",
plot = fig_all, device = Cairo::cairo_eps, width = 7, height = 7,
units = "in", limitsize = FALSE)
