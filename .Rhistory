ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
i = i + 1
i = 1
exchange %>%
filter(country_string %in% c("us", countries[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
i = i + 1
exchange %>%
filter(country_string %in% c("us", countries[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
i = i + 1
exchange %>%
filter(country_string %in% c("us", countries[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
i = i + 1
exchange %>%
filter(country_string %in% c("us", countries[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
i = i + 1
exchange %>%
filter(country_string %in% c("us", countries[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
i = i + 1
exchange %>%
filter(country_string %in% c("us", countries[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
i = i + 1
exchange %>%
filter(country_string %in% c("us", countries[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
i = i + 1
exchange %>%
filter(country_string %in% c("us", countries[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
i = i + 1
exchange %>%
filter(country_string %in% c("us", countries[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
i = i + 1
exchange %>%
filter(country_string %in% c("us", countries[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
i = i + 1
exchange %>%
filter(country_string %in% c("us", countries[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
i = i + 1
exchange %>%
filter(country_string %in% c("us", countries[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
i = i + 1
exchange %>%
filter(country_string %in% c("us", countries[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
i = i + 1
exchange %>%
filter(country_string %in% c("us", countries[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
i = i + 1
exchange %>%
filter(country_string %in% c("us", countries[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
i = i + 1
exchange %>%
filter(country_string %in% c("us", countries[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
i = i + 1
exchange %>%
filter(country_string %in% c("us", countries[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
i = i + 1
exchange %>%
filter(country_string %in% c("us", countries[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
i = i + 1
countries = data.frame(country = setdiff(unique(exchange$country_string), "us"),
include = 0)
countries = data.frame(country = setdiff(unique(exchange$country_string), "us"),
include = 0)
for (i in 1:nrow(countries)) {
exchange %>%
filter(country_string %in% c("us", countries$country[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
countries$include[i] = readline("1/0:")
}
i
exchange %>%
filter(country_string %in% c("us", countries$country[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
countries = data.frame(country = setdiff(unique(exchange$country_string), "us"),
include = 0)
for (i in 1:nrow(countries)) {
exchange %>%
filter(country_string %in% c("us", countries$country[i])) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
print(last_plot())
countries$include[i] = readline("1/0:")
}
View(countries)
country_selected = countries %>%
filter(include == 1) %>%
.[["country"]]
country_selected
saveRDS(country_selected, "./data/country_selected.Rds")
## Exchange --------------------------------------------------------------------
countries = readRDS("./data/country_selected.Rds")
exchange %>%
filter(country %in% countries) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
exchange %>%
filter(country_string %in% countries) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
countries
print(paste0(countries))
print(paste0(countries, collapse = ", "))
exchange %>%
filter(country_string %in% c("ad", "de")) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
exchange %>%
filter(country_string %in% c("de", "ad", "at")) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
exchange %>%
filter(country_string %in% c("de", "ad", "at", "be")) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
exchange %>%
filter(country_string %in% c("de", "ad", "at", "be", "cy")) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
exchange %>%
filter(country_string %in% c("de", "ad", "at", "be", "cy", "ee")) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
exchange %>%
filter(country_string %in% c("de", "ad", "at", "be", "cy", "ee", "es")) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
exchange %>%
filter(country_string %in% c("de", "ad", "at", "be", "cy", "ee", "es",
"fi")) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
exchange %>%
filter(country_string %in% c("de", "ad", "at", "be", "cy", "ee", "es",
"fi", "fr")) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
exchange %>%
filter(country_string %in% c("de", "ad", "at", "be", "cy", "ee", "es",
"fi", "fr", "gr")) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
exchange %>%
filter(country_string %in% c("de", "ad", "at", "be", "cy", "ee", "es",
"fi", "fr", "gr", "ie")) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
exchange %>%
filter(country_string %in% c("de", "ad", "at", "be", "cy", "ee", "es",
"fi", "fr", "gr", "ie", "it")) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
exchange %>%
filter(country_string %in% c("de", "ad", "at", "be", "cy", "ee", "es",
"fi", "fr", "gr", "ie", "it", "lt")) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
exchange %>%
filter(country_string %in% c("de", "ad", "at", "be", "cy", "ee", "es",
"fi", "fr", "gr", "ie", "it", "lu")) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
exchange %>%
filter(country_string %in% c("de", "ad", "at", "be", "cy", "ee", "es",
"fi", "fr", "gr", "ie", "it", "lu", "lv")) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
exchange %>%
filter(country_string %in% c("at", "be", "cy", "ee", "fi", "fr", "de",
"gr", "ie", "it", "lu", "mt", "nl", "pt",
"sk", "si", "es", "xk", "me", "ad", "mc",
"sm", "va")) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
euro_countries = c("at", "be", "cy", "ee", "fi", "fr", "de",
"gr", "ie", "it", "lu", "mt", "nl", "pt",
"sk", "si", "es", "xk", "me", "ad", "mc",
"sm", "va")
exchange %>%
filter(country_string %in% setdiff(countries, euro_countries)) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
euro = exchange %>%
filter(country_string == "fr") %>%
.[["usdx"]]
a = exchange %>%
mutate(diff_euro = usdx - euro) %>%
group_by(country_string) %>%
summarise(avg = mean(diff_euro, na.rm = T),
sd = sd(diff_euro, na.rm = T))
a = exchange %>%
group_by(country_string) %>%
mutate(diff_euro = usdx - euro) %>%
summarise(avg = mean(diff_euro, na.rm = T),
sd = sd(diff_euro, na.rm = T))
table(exchange$country_string)
a = data.frame(table(exchange$country_string))
View(a)
exchange %>%
filter(country_string %in% c("us", "tm", "tj")) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
countries
a = exchange %>%
filter(country_string %in% countries) %>%
group_by(country_string) %>%
mutate(diff_euro = usdx - euro) %>%
summarise(avg = mean(diff_euro, na.rm = T),
sd = sd(diff_euro, na.rm = T))
View(a)
exchange %>%
filter(country_string %in% countries) %>%
group_by(country_string) %>%
mutate(diff_euro = usdx - euro) %>%
summarise(avg = mean(diff_euro, na.rm = T),
sd = sd(diff_euro, na.rm = T)) %>%
filter(avg == 0 & sd == 0) %>%
.[["country_string"]]
euro_countries = exchange %>%
filter(country_string %in% countries) %>%
group_by(country_string) %>%
mutate(diff_euro = usdx - euro) %>%
summarise(avg = mean(diff_euro, na.rm = T),
sd = sd(diff_euro, na.rm = T)) %>%
filter(avg == 0 & sd == 0) %>%
.[["country_string"]]
euro_countries2 = exchange %>%
filter(country_string %in% countries) %>%
group_by(country_string) %>%
mutate(diff_euro = usdx - euro) %>%
summarise(avg = mean(diff_euro, na.rm = T),
sd = sd(diff_euro, na.rm = T)) %>%
filter(avg == 0 & sd == 0) %>%
.[["country_string"]]
setdiff(euro_countries, euro_countries2)
setdiff(euro_countries2, euro_countries)
euro_countries = c("at", "be", "cy", "ee", "fi", "fr", "de",
"gr", "ie", "it", "lu", "mt", "nl", "pt",
"sk", "si", "es", "xk", "me", "ad", "mc",
"sm", "va")
euro_countries2 = exchange %>%
filter(country_string %in% countries) %>%
group_by(country_string) %>%
mutate(diff_euro = usdx - euro) %>%
summarise(avg = mean(diff_euro, na.rm = T),
sd = sd(diff_euro, na.rm = T)) %>%
filter(avg == 0 & sd == 0) %>%
.[["country_string"]]
setdiff(euro_countries2, euro_countries)
setdiff(euro_countries, euro_countries2)
## Exchange --------------------------------------------------------------------
countries = readRDS("./data/country_selected.Rds")
euro_countries = exchange %>%
filter(country_string %in% countries) %>%
group_by(country_string) %>%
mutate(diff_euro = usdx - euro) %>%
summarise(avg = mean(diff_euro, na.rm = T),
sd = sd(diff_euro, na.rm = T)) %>%
filter(avg == 0 & sd == 0) %>%
.[["country_string"]]
exchange %>%
filter(country_string %in% setdiff(countries, euro_countries)) %>%
ggplot(aes(x = date, y = usdx, color = country_string)) +
geom_line()
table(a$sd)
euro_diff = exchange %>%
filter(country_string %in% countries) %>%
group_by(country_string) %>%
mutate(diff_euro = usdx - euro) %>%
summarise(avg = mean(diff_euro, na.rm = T),
sd = sd(diff_euro, na.rm = T))
count_sd = data.frame(table(euro_diff$sd))
View(euro_diff)
View(count_sd)
count_sd = data.frame(table(euro_diff$sd)) %>%
arrange(Freq)
count_sd
count_sd = data.frame(table(euro_diff$sd)) %>%
arrange(desc(Freq))
count_sd
euro_diff %>% filter(country_string %in% count_sd$sd[1])
count_sd$sd[1]
euro_diff %>% filter(country_string %in% count_sd$Var[1])
count_sd$Var[1]
euro_diff %>% filter(sd == count_sd$Var[1])
euro_diff %>% filter(sd == count_sd$Var[1]) %>%
.[["country_string"]]
euro_diff %>% filter(sd == count_sd$Var[2]) %>%
.[["country_string"]]
aud_countries = euro_diff %>% filter(sd == count_sd$Var[2]) %>%
.[["country_string"]]
aud_countries
euro_diff %>% filter(sd == count_sd$Var[3]) %>%
.[["country_string"]]
euro_diff %>% filter(sd == count_sd$Var[4]) %>%
.[["country_string"]]
euro_diff %>% filter(sd == count_sd$Var[5]) %>%
.[["country_string"]]
euro_diff %>% filter(sd == count_sd$Var[6]) %>%
.[["country_string"]]
euro_diff %>% filter(sd == count_sd$Var[7]) %>%
.[["country_string"]]
euro_diff %>% filter(sd == count_sd$Var[8]) %>%
.[["country_string"]]
gbp_countries = euro_diff %>% filter(sd %in% count_sd$Var[c(4,8)]) %>%
.[["country_string"]]
gbp_countries
euro_diff %>% filter(sd == count_sd$Var[9]) %>%
.[["country_string"]]
View(count_sd)
euro_diff %>% filter(sd == count_sd$Var[10]) %>%
.[["country_string"]]
euro_countries = euro_diff %>% filter(sd == count_sd$Var[1]) %>%
.[["country_string"]]
euro_countries
chf_countries = euro_diff %>% filter(sd == count_sd$Var[9]) %>%
.[["country_string"]]
mad_countries = euro_diff %>% filter(sd == count_sd$Var[7]) %>%
.[["country_string"]]
nok_countries = euro_diff %>% filter(sd == count_sd$Var[6]) %>%
.[["country_string"]]
dkk_countries = euro_diff %>% filter(sd == count_sd$Var[5]) %>%
.[["country_string"]]
gbp_countries = euro_diff %>% filter(sd %in% count_sd$Var[c(4,8)]) %>%
.[["country_string"]]
nzd_countries = euro_diff %>% filter(sd == count_sd$Var[3]) %>%
.[["country_string"]]
aud_countries = euro_diff %>% filter(sd == count_sd$Var[2]) %>%
.[["country_string"]]
euro_countries = euro_diff %>% filter(sd == count_sd$Var[1]) %>%
.[["country_string"]]
currency = data.frame(country = countries) %>%
mutate(currency = case_when(country %in% euro_countries ~ "EURO",
country %in% aud_countries ~ "AUD",
country %in% nzd_countries ~ "NZD",
country %in% gbp_countries ~ "GBP",
country %in% dkk_countries ~ "DKK",
country %in% nok_countries ~ "NOK",
country %in% mad_countries ~ "MAD",
country %in% chf_countries ~ "CHF",
TRUE ~ country))
View(currency)
saveRDS(currency, "./data/currency.Rds")
targets = currency %>%
group_by(currency) %>%
summarise(country = first(country))
View(targets)
View(targets)
View(euro_diff)
View(count_sd)
View(currency)
View(targets)
df = inner_join(exchange, targets, by = c("country_string" = "country"))
View(df)
df %>%
ggplot(aes(x = date, y = usdx, color = currency)) +
geom_line()
df_a = df %>% filter(currency == "EURO")
df_b = df %>% filter(currency == "GBP")
align = dtw::dtw(diff(t.normalize(df_a$index)),
diff(t.normalize(df_b$index)),
keep = TRUE,
step.pattern = dtw::symmetricP2)
df_a
align = dtw::dtw(diff(t.normalize(df_a$usdx)),
diff(t.normalize(df_b$usdx)),
keep = TRUE,
step.pattern = dtw::symmetricP2)
dtw::dtwPlotThreeWay(align)
P = Matrix::sparseMatrix(align$index1,
align$index2)
W = warp2weight(P)
a = fitted(forecast::ets(W))
a = fitted(forecast::ets(W))
plot(ts(a))
df %>%
filter(currency %in% c("EURO", "us", "GBP")) %>%
ggplot(aes(x = date, y = usdx, color = currency)) +
geom_line()
plot(ts(df_a$usdx))
plot(ts(df_b$usdx))
align = dtw::dtw(diff(t.normalize(df_a$usdx)),
diff(t.normalize(df_b$usdx)),
keep = TRUE,
step.pattern = dtw::symmetricP2)
align = dtw::dtw(diff(t.normalize(df_a$usdx)),
diff(t.normalize(df_b$usdx)),
keep = TRUE,
step.pattern = dtw::symmetric2)
dtw::dtwPlotThreeWay(align)
P = Matrix::sparseMatrix(align$index1,
align$index2)
W = warp2weight(P)
a = fitted(forecast::ets(W))
plot(ts(a))
plot(ts(W))
df_b = df %>% filter(currency == "AUD")
align = dtw::dtw(diff(t.normalize(df_a$usdx)),
diff(t.normalize(df_b$usdx)),
keep = TRUE,
step.pattern = dtw::symmetric2)
dtw::dtwPlotThreeWay(align)
P = Matrix::sparseMatrix(align$index1,
align$index2)
W = warp2weight(P)
a = fitted(forecast::ets(W))
plot(ts(a))
df %>%
# filter(currency %in% c("EURO", "GBP")) %>%
ggplot(aes(x = date, y = usdx, color = currency)) +
geom_line()
df %>%
filter(currency %in% c("EURO", "GBP", "AUD", "NZD",
"DKK", "NOK", "MAD", "CHF")) %>%
ggplot(aes(x = date, y = usdx, color = currency)) +
geom_line()
df_apple = readRDS("./data/df_apple.Rds")
df_ikea = readRDS("./data/df_ikea.Rds")
df_handm = readRDS("./data/df_handm.Rds")
df_zara = readRDS("./data/df_zara.Rds")
# compute index
df = rbind(df_apple, df_ikea, df_handm, df_zara) %>% # df_ikea,
group_by(country, date) %>%
summarise(avg_log = mean(avg_log, na.rm = TRUE)) %>%
ungroup() %>%
group_by(country) %>%
mutate(cum_log = cumsum(avg_log),
index = exp(cum_log))
# plot index
oecd = c("at", "ca", "dk", "fr", "de", "gr", "is", "ie", "be",
"lu", "nl", "no", "pt", "es", "se", "tr", "it", "ch",
"uk", "us")
df_oecd = df %>% filter(country %in% c("jp", oecd))
range_oecd = df_oecd %>%
group_by(country) %>%
summarise(min_date = min(date),
max_date = max(date))
select_country = range_oecd %>%
filter(min_date == as.Date("2009-04-01")) %>%
.[["country"]]
df %>%
filter(country %in% oecd) %>%
ggplot(aes(x = date, y = index, color = country)) +
geom_line()
currency = readRDS("./data/currency.Rds")
targets = currency %>%
group_by(currency) %>%
summarise(country = first(country))
df = inner_join(exchange, targets, by = c("country_string" = "country"))
df %>%
filter(currency %in% c("EURO", "GBP", "AUD", "NZD",
"DKK", "NOK", "MAD", "CHF")) %>%
ggplot(aes(x = date, y = usdx, color = currency)) +
geom_line()
df_a = df %>% filter(currency == "EURO")
df_b = df %>% filter(currency == "AUD")
## Setup -----------------------------------------------------------------------
library(checkpoint)
checkpoint("2022-04-01")
library(tidyverse)
?quantmod::getSymbols
## Data ------------------------------------------------------------------------
symbols = c("TIP", "INXG", "XRB", "IFLD", "ILB", "IBGM")
data_list <- list()
# Loop over the symbols and download the data
for(symbol in symbols) {
data_list[[symbol]] <- quantmod::getSymbols(symbol, auto.assign = FALSE)
}
quantmod::getSymbols("AAPL")
# Install and load the package
install.packages("tidyquant")
# Install and load the package
install.packages("tidyquant")
library(tidyquant)
# Install and load the package
install.packages("tidyquant")
