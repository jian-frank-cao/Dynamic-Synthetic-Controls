unit = paste0(item, "_pow", power),
time = 1:100,
value = minmax.normalize(value_power,
reference = value_power[1:60])*20))
count = count + 1
}
}
data$time[1:90] = 11:100
data$time[91:100] = 1:10
data = data %>% filter(time %in% 16:100)
data$value_raw = data$value
data %>% ggplot(aes(x = time, y = value, color = unit)) + geom_line()
## estimate synthetic control
# (with lags) width = 9, k = 7, step.pattern = asymmetricP1
# (without lags) width = 11, k = 5, step.pattern = asymmetricP1
# parameters
filter.width.range = 9
k.range = 7
step.pattern.range = list(
# symmetricP0 = dtw::symmetricP0, # too bumpy
# symmetricP05 = dtw::symmetricP05,
# symmetricP1 = dtw::symmetricP1,
# symmetricP2 = dtw::symmetricP2,
# asymmetricP0 = dtw::asymmetricP0, # too bumpy
# asymmetricP05 = dtw::asymmetricP05,
asymmetricP1 = dtw::asymmetricP1#,
# asymmetricP2 = dtw::asymmetricP2,
# typeIc = dtw::typeIc,
# typeIcs = dtw::typeIcs,
# typeIIc = dtw::typeIIc,  # jumps
# typeIIIc = dtw::typeIIIc, # jumps
# typeIVc = dtw::typeIVc,  # jumps
# typeId = dtw::typeId,
# typeIds = dtw::typeIds,
# typeIId = dtw::typeIId, # jumps
# mori2006 = dtw::mori2006
)
grid.search.parallel = TRUE
args.TFDTW = list(buffer = 20, match.method = "open.end",
dist.quant = 0.95,
window.type = "sakoechiba",
## other
norm.method = "t",
step.pattern2 = dtw::asymmetricP2,
n.burn = 3, n.IQR = 3,
ma = 3, ma.na = "original",
default.margin = 3,
n.q = 1, n.r = 1)
args.synth = list(predictors = NULL,
special.predictors =
expression(list(list(dep.var, 50:59, c("mean")),
list(dep.var, 40:49, c("mean")),
list(dep.var, 30:39, c("mean")))),
time.predictors.prior = 16:59,
time.optimize.ssr = 16:59)
args.TFDTW.synth = list(start.time = 16, end.time = 100, treat.time = 60,
args.TFDTW = args.TFDTW, args.synth = args.synth,
## 2nd
n.mse = 10,
## other
plot.figures = FALSE,
plot.path = "./figures/",
legend.pos = c(0.3, 0.7))
args.TFDTW.synth.all.units = list(target = "A",
# data = data,
args.TFDTW.synth = args.TFDTW.synth,
## 2nd
all.units.parallel = FALSE)
args.TFDTW.synth.all.units[["data"]] = data
results = SimDesign::quiet(
grid.search(filter.width.range = filter.width.range,
k.range = k.range,
step.pattern.range = step.pattern.range,
args.TFDTW.synth.all.units = args.TFDTW.synth.all.units,
grid.search.parallel = grid.search.parallel)
)
mse = lapply(results, "[[", "mse") %>%
do.call("rbind", .)
ind.opt = which(mse$ratio == min(mse$ratio, na.rm = TRUE))
ind.opt
synthetic.original = results[[ind.opt]]$res.synth.target.raw$synthetic
synthetic.dsc = results[[ind.opt]]$res.synth.target.TFDTW$synthetic
n.na = sum(is.na(synthetic.dsc))
View(data)
## plot figure
df = rbind(
data.frame(id = 1, unit = "Unit T", time = 151:1000,
value = approx(data[1:85,4], n = 850)$y),
data.frame(id = 2, unit = "Unit C1", time = 151:1000,
value = approx(data[86:170,4], n = 850)$y),
data.frame(id = 3, unit = "Unit C1-lag1", time = 151:1000,
value = approx(data[256:340,4], n = 850)$y),
data.frame(id = 4, unit = "Unit C1-sq", time = 151:1000,
value = approx(data[681:765,4], n = 850)$y),
data.frame(id = 5, unit = "Unit C2", time = 151:1000,
value = approx(data[171:255,4], n = 850)$y),
data.frame(id = 6, unit = "Unit C2-lag1", time = 151:1000,
value = approx(data[1021:1105,4], n = 850)$y),
data.frame(id = 7, unit = "Unit C2-sq", time = 151:1000,
value = approx(data[1446:1530,4], n = 850)$y),
data.frame(id = 8, unit = "SC", time = 151:1000,
value = approx(synthetic.original, n = 850)$y),
data.frame(id = 9, unit = "DSC", time = 151:1000,
value = c(approx(synthetic.dsc, n = (85-n.na)*10)$y, rep(NA, n.na*10)))
)
df$value = df$value + rnorm(nrow(df), mean = 0, sd = 0.1)
df %>%
ggplot(aes(x = time, y = value, color = unit, linetype = unit)) +
geom_line(size = 0.7) +
scale_linetype_manual(name = NULL,
values = c("Unit T" = "solid", "Unit C1" = "solid", "Unit C1-lag1" = "dashed", "Unit C1-sq" = "dotted",
"Unit C2" = "solid", "Unit C2-lag1" = "dashed", "Unit C2-sq" = "dotted", "SC" = "solid",
"DSC" = "solid")) +
scale_color_manual(name = NULL,
values = c("Unit T" = "#4a4e4d", "Unit C1" = "#aaaaaa", "Unit C1-lag1" = "#aaaaaa", "Unit C1-sq" = "#aaaaaa",
"Unit C2" = "#aaaaaa", "Unit C2-lag1" = "#aaaaaa", "Unit C1-sq" = "#aaaaaa", "SC" = "#2ab7ca",
"DSC" = "#fe4a49")) +
geom_vline(xintercept = 600, linetype="dashed", col = "grey20") +
annotate("text", x = 590, y = 18.5,
label = "Treatment", col = "grey20",
angle = 90) +
xlim(350, 750) +
xlab("Time") +
ylab("Y") +
theme_minimal() +
theme(legend.position=c(0.23,0.2),
legend.box = "horizontal",
legend.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
# axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
df %>%
ggplot(aes(x = time, y = value, color = unit, linetype = unit)) +
geom_line(size = 0.7) +
scale_linetype_manual(name = NULL,
values = c("Unit T" = "solid", "Unit C1" = "solid", "Unit C1-lag1" = "dashed", "Unit C1-sq" = "dotted",
"Unit C2" = "solid", "Unit C2-lag1" = "dashed", "Unit C2-sq" = "dotted", "SC" = "solid",
"DSC" = "solid")) +
scale_color_manual(name = NULL,
values = c("Unit T" = "#4a4e4d", "Unit C1" = "#aaaaaa", "Unit C1-lag1" = "#aaaaaa", "Unit C1-sq" = "#aaaaaa",
"Unit C2" = "#aaaaaa", "Unit C2-lag1" = "#aaaaaa", "Unit C2-sq" = "#aaaaaa", "SC" = "#2ab7ca",
"DSC" = "#fe4a49")) +
geom_vline(xintercept = 600, linetype="dashed", col = "grey20") +
annotate("text", x = 590, y = 18.5,
label = "Treatment", col = "grey20",
angle = 90) +
xlim(350, 750) +
xlab("Time") +
ylab("Y") +
theme_minimal() +
theme(legend.position=c(0.23,0.2),
legend.box = "horizontal",
legend.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
# axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
df %>%
ggplot(aes(x = time, y = value, color = unit, linetype = unit)) +
geom_line(size = 0.7) +
scale_linetype_manual(name = NULL,
values = c("Unit T" = "solid", "Unit C1" = "solid", "Unit C1-lag1" = "dashed", "Unit C1-sq" = "dotted",
"Unit C2" = "solid", "Unit C2-lag1" = "dashed", "Unit C2-sq" = "dotted", "SC" = "solid",
"DSC" = "solid")) +
scale_color_manual(name = NULL,
values = c("Unit T" = "#4a4e4d", "Unit C1" = "#f6cd61 ", "Unit C1-lag1" = "#f6cd61 ", "Unit C1-sq" = "#f6cd61 ",
"Unit C2" = "#aaaaaa", "Unit C2-lag1" = "#aaaaaa", "Unit C2-sq" = "#aaaaaa", "SC" = "#2ab7ca",
"DSC" = "#fe4a49")) +
geom_vline(xintercept = 600, linetype="dashed", col = "grey20") +
annotate("text", x = 590, y = 18.5,
label = "Treatment", col = "grey20",
angle = 90) +
xlim(350, 750) +
xlab("Time") +
ylab("Y") +
theme_minimal() +
theme(legend.position=c(0.23,0.2),
legend.box = "horizontal",
legend.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
# axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
df %>%
ggplot(aes(x = time, y = value, color = unit, linetype = unit)) +
geom_line(size = 0.7) +
scale_linetype_manual(name = NULL,
values = c("Unit T" = "solid", "Unit C1" = "solid", "Unit C1-lag1" = "dashed", "Unit C1-sq" = "dotted",
"Unit C2" = "solid", "Unit C2-lag1" = "dashed", "Unit C2-sq" = "dotted", "SC" = "solid",
"DSC" = "solid")) +
scale_color_manual(name = NULL,
values = c("Unit T" = "#4a4e4d", "Unit C1" = "#f6cd61", "Unit C1-lag1" = "#f6cd61", "Unit C1-sq" = "#f6cd61",
"Unit C2" = "#aaaaaa", "Unit C2-lag1" = "#aaaaaa", "Unit C2-sq" = "#aaaaaa", "SC" = "#2ab7ca",
"DSC" = "#fe4a49")) +
geom_vline(xintercept = 600, linetype="dashed", col = "grey20") +
annotate("text", x = 590, y = 18.5,
label = "Treatment", col = "grey20",
angle = 90) +
xlim(350, 750) +
xlab("Time") +
ylab("Y") +
theme_minimal() +
theme(legend.position=c(0.23,0.3),
legend.box = "horizontal",
legend.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
# axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
df %>%
ggplot(aes(x = time, y = value, color = unit, linetype = unit)) +
geom_line(size = 0.7) +
scale_linetype_manual(name = NULL,
values = c("Unit T" = "solid", "Unit C1" = "solid",
"Unit C1-lag1" = "dashed", "Unit C1-sq" = "dotted",
"Unit C2" = "solid", "Unit C2-lag1" = "dashed",
"Unit C2-sq" = "dotted", "SC" = "solid",
"DSC" = "solid")) +
scale_color_manual(name = NULL,
values = c("Unit T" = "#4a4e4d", "Unit C1" = "#f37736",
"Unit C1-lag1" = "#f37736", "Unit C1-sq" = "#f37736",
"Unit C2" = "#aaaaaa", "Unit C2-lag1" = "#aaaaaa",
"Unit C2-sq" = "#aaaaaa", "SC" = "#2ab7ca",
"DSC" = "#fe4a49")) +
geom_vline(xintercept = 600, linetype="dashed", col = "grey20") +
annotate("text", x = 590, y = 18.5,
label = "Treatment", col = "grey20",
angle = 90) +
xlim(350, 750) +
xlab("Time") +
ylab("Y") +
theme_minimal() +
theme(legend.position=c(0.23,0.3),
legend.box = "horizontal",
legend.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
# axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
df %>%
ggplot(aes(x = time, y = value, color = unit, linetype = unit)) +
geom_line(size = 0.7) +
scale_linetype_manual(name = NULL,
values = c("Unit T" = "solid", "Unit C1" = "solid",
"Unit C1-lag1" = "dashed", "Unit C1-sq" = "dotted",
"Unit C2" = "solid", "Unit C2-lag1" = "dashed",
"Unit C2-sq" = "dotted", "SC" = "solid",
"DSC" = "solid")) +
scale_color_manual(name = NULL,
values = c("Unit T" = "#4a4e4d", "Unit C1" = "#ffcc5c",
"Unit C1-lag1" = "#ffcc5c", "Unit C1-sq" = "#ffcc5c",
"Unit C2" = "#aaaaaa", "Unit C2-lag1" = "#aaaaaa",
"Unit C2-sq" = "#aaaaaa", "SC" = "#2ab7ca",
"DSC" = "#fe4a49")) +
geom_vline(xintercept = 600, linetype="dashed", col = "grey20") +
annotate("text", x = 590, y = 18.5,
label = "Treatment", col = "grey20",
angle = 90) +
xlim(350, 750) +
xlab("Time") +
ylab("Y") +
theme_minimal() +
theme(legend.position=c(0.23,0.3),
legend.box = "horizontal",
legend.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
# axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
df %>%
ggplot(aes(x = time, y = value, color = unit, linetype = unit)) +
geom_line(size = 0.7) +
scale_linetype_manual(name = NULL,
values = c("Unit T" = "solid", "Unit C1" = "solid",
"Unit C1-lag1" = "dashed", "Unit C1-sq" = "dotted",
"Unit C2" = "solid", "Unit C2-lag1" = "dashed",
"Unit C2-sq" = "dotted", "SC" = "solid",
"DSC" = "solid")) +
scale_color_manual(name = NULL,
values = c("Unit T" = "#4a4e4d", "Unit C1" = "#ffcc5c",
"Unit C1-lag1" = "#ffcc5c", "Unit C1-sq" = "#ffcc5c",
"Unit C2" = "#96ceb4", "Unit C2-lag1" = "#96ceb4",
"Unit C2-sq" = "#96ceb4", "SC" = "#2ab7ca",
"DSC" = "#fe4a49")) +
geom_vline(xintercept = 600, linetype="dashed", col = "grey20") +
annotate("text", x = 590, y = 18.5,
label = "Treatment", col = "grey20",
angle = 90) +
xlim(350, 750) +
xlab("Time") +
ylab("Y") +
theme_minimal() +
theme(legend.position=c(0.23,0.3),
legend.box = "horizontal",
legend.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
# axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
df %>%
ggplot(aes(x = time, y = value, color = unit, linetype = unit)) +
geom_line(size = 0.7) +
scale_linetype_manual(name = NULL,
values = c("Unit T" = "solid", "Unit C1" = "solid",
"Unit C1-lag1" = "dashed", "Unit C1-sq" = "dotted",
"Unit C2" = "solid", "Unit C2-lag1" = "dashed",
"Unit C2-sq" = "dotted", "SC" = "solid",
"DSC" = "solid")) +
scale_color_manual(name = NULL,
values = c("Unit T" = "#4a4e4d", "Unit C1" = "#ffcc5c",
"Unit C1-lag1" = "#ffcc5c", "Unit C1-sq" = "#ffcc5c",
"Unit C2" = "#008744", "Unit C2-lag1" = "#008744",
"Unit C2-sq" = "#008744", "SC" = "#2ab7ca",
"DSC" = "#fe4a49")) +
geom_vline(xintercept = 600, linetype="dashed", col = "grey20") +
annotate("text", x = 590, y = 18.5,
label = "Treatment", col = "grey20",
angle = 90) +
xlim(350, 750) +
xlab("Time") +
ylab("Y") +
theme_minimal() +
theme(legend.position=c(0.23,0.3),
legend.box = "horizontal",
legend.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
# axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
df %>%
ggplot(aes(x = time, y = value, color = unit, linetype = unit)) +
geom_line(size = 0.7) +
scale_linetype_manual(name = NULL,
values = c("Unit T" = "solid", "Unit C1" = "solid",
"Unit C1-lag1" = "dashed", "Unit C1-sq" = "dotted",
"Unit C2" = "solid", "Unit C2-lag1" = "dashed",
"Unit C2-sq" = "dotted", "SC" = "solid",
"DSC" = "solid")) +
scale_color_manual(name = NULL,
values = c("Unit T" = "#4a4e4d", "Unit C1" = "#ffcc5c",
"Unit C1-lag1" = "#ffcc5c", "Unit C1-sq" = "#ffcc5c",
"Unit C2" = "#00b159", "Unit C2-lag1" = "#00b159",
"Unit C2-sq" = "#00b159", "SC" = "#2ab7ca",
"DSC" = "#fe4a49")) +
geom_vline(xintercept = 600, linetype="dashed", col = "grey20") +
annotate("text", x = 590, y = 18.5,
label = "Treatment", col = "grey20",
angle = 90) +
xlim(350, 750) +
xlab("Time") +
ylab("Y") +
theme_minimal() +
theme(legend.position=c(0.23,0.3),
legend.box = "horizontal",
legend.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
# axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
fig = df %>%
ggplot(aes(x = time, y = value, color = unit, linetype = unit)) +
geom_line(size = 0.7) +
scale_linetype_manual(name = NULL,
values = c("Unit T" = "solid", "Unit C1" = "solid",
"Unit C1-lag1" = "dashed", "Unit C1-sq" = "dotted",
"Unit C2" = "solid", "Unit C2-lag1" = "dashed",
"Unit C2-sq" = "dotted", "SC" = "solid",
"DSC" = "solid")) +
scale_color_manual(name = NULL,
values = c("Unit T" = "#4a4e4d", "Unit C1" = "#ffcc5c",
"Unit C1-lag1" = "#ffcc5c", "Unit C1-sq" = "#ffcc5c",
"Unit C2" = "#00b159", "Unit C2-lag1" = "#00b159",
"Unit C2-sq" = "#00b159", "SC" = "#2ab7ca",
"DSC" = "#fe4a49")) +
geom_vline(xintercept = 600, linetype="dashed", col = "grey20") +
annotate("text", x = 590, y = 18.5,
label = "Treatment", col = "grey20",
angle = 90) +
xlim(350, 750) +
xlab("Time") +
ylab("Y") +
theme_minimal() +
theme(legend.position=c(0.23,0.3),
legend.box = "horizontal",
legend.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
# axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
ggsave("./figures/speed_problem_v2.pdf",
fig, width = 6, height = 4.5,
units = "in", limitsize = FALSE)
df %>%
ggplot(aes(x = time, y = value, color = unit, linetype = unit)) +
geom_line(size = 0.7) +
scale_linetype_manual(name = NULL,
values = c("Unit T" = "solid", "Unit C1" = "solid",
"Unit C1-lag1" = "dashed", "Unit C1-sq" = "dotted",
"Unit C2" = "solid", "Unit C2-lag1" = "dashed",
"Unit C2-sq" = "dotted", "SC" = "solid",
"DSC" = "solid")) +
scale_color_manual(name = NULL,
values = c("Unit T" = "#4a4e4d", "Unit C1" = "#eecc16",
"Unit C1-lag1" = "#eecc16", "Unit C1-sq" = "#eecc16",
"Unit C2" = "#008176", "Unit C2-lag1" = "#008176",
"Unit C2-sq" = "#008176", "SC" = "#0000a7",
"DSC" = "#c1272d")) +
geom_vline(xintercept = 600, linetype="dashed", col = "grey20") +
annotate("text", x = 590, y = 18.5,
label = "Treatment", col = "grey20",
angle = 90) +
xlim(350, 750) +
xlab("Time") +
ylab("Y") +
theme_minimal() +
theme(legend.position=c(0.23,0.3),
legend.box = "horizontal",
legend.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
# axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
df %>%
ggplot(aes(x = time, y = value, color = unit, linetype = unit)) +
geom_line(size = 0.7) +
scale_linetype_manual(name = NULL,
values = c("Unit T" = "solid", "Unit C1" = "solid",
"Unit C1-lag1" = "dashed", "Unit C1-sq" = "dotted",
"Unit C2" = "solid", "Unit C2-lag1" = "dashed",
"Unit C2-sq" = "dotted", "SC" = "solid",
"DSC" = "solid")) +
scale_color_manual(name = NULL,
values = c("Unit T" = "#4a4e4d", "Unit C1" = "#eecc16",
"Unit C1-lag1" = "#eecc16", "Unit C1-sq" = "#eecc16",
"Unit C2" = "#008176", "Unit C2-lag1" = "#008176",
"Unit C2-sq" = "#008176", "SC" = "#2ab7ca",
"DSC" = "#fe4a49")) +
geom_vline(xintercept = 600, linetype="dashed", col = "grey20") +
annotate("text", x = 590, y = 18.5,
label = "Treatment", col = "grey20",
angle = 90) +
xlim(350, 750) +
xlab("Time") +
ylab("Y") +
theme_minimal() +
theme(legend.position=c(0.23,0.3),
legend.box = "horizontal",
legend.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
# axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
fig = df %>%
ggplot(aes(x = time, y = value, color = unit, linetype = unit)) +
geom_line(size = 0.7) +
scale_linetype_manual(name = NULL,
values = c("Unit T" = "solid", "Unit C1" = "solid",
"Unit C1-lag1" = "dashed", "Unit C1-sq" = "dotted",
"Unit C2" = "solid", "Unit C2-lag1" = "dashed",
"Unit C2-sq" = "dotted", "SC" = "solid",
"DSC" = "solid")) +
scale_color_manual(name = NULL,
values = c("Unit T" = "#4a4e4d", "Unit C1" = "#eecc16",
"Unit C1-lag1" = "#eecc16", "Unit C1-sq" = "#eecc16",
"Unit C2" = "#008176", "Unit C2-lag1" = "#008176",
"Unit C2-sq" = "#008176", "SC" = "#2ab7ca",
"DSC" = "#fe4a49")) +
geom_vline(xintercept = 600, linetype="dashed", col = "grey20") +
annotate("text", x = 590, y = 18.5,
label = "Treatment", col = "grey20",
angle = 90) +
xlim(350, 750) +
xlab("Time") +
ylab("Y") +
theme_minimal() +
theme(legend.position=c(0.23,0.3),
legend.box = "horizontal",
legend.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
# axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
ggsave("./figures/speed_problem_v2.pdf",
fig, width = 6, height = 4.5,
units = "in", limitsize = FALSE)
