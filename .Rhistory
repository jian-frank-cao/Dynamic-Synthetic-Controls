annotate("text", x = 490, y = df$value[1000+cutoff]+3, label = "C",
size = 5, col = "#fe4a49", parse=TRUE) +
annotate("text", x = 500, y = 3, label = "W[Q]",
size = 7, col = "grey20", parse = TRUE) +
scale_color_manual(name = NULL, values = c("grey80", "#fe4a49")) +
coord_cartesian(ylim = c(-3, 45), xlim = c(-150, 1150)) +
theme_bw() +
theme(legend.position = "none",
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
## dtwC ------------------------------------------------------------------------
fig.dtwC = df %>%
filter(group %in% c("Y", "X", "X (Warped)")) %>%
ggplot(aes(x = time, y = value, color = group)) +
geom_line(data = df %>% filter(!is.na(dtwC1)),
aes(group = dtwC1), color = "grey80",
linetype = "longdash", size = 1) +
geom_line(data = df %>% filter(!is.na(dtwC2)),
aes(group = dtwC2), color = "grey80",
linetype = "dotted", size = 1) +
geom_segment(aes(x = 500, y = -20, xend = 500, yend = 50),
color = "grey80", size = 1, linetype = "solid") +
# geom_line(data = df %>% filter(!is.na(dtwC)),
#           aes(group = dtwC), color = "grey80",
#           linetype = "twodash", size = 1) +
geom_line(size = 1) +
geom_point(aes(x = t_treat, y = df$value[t_treat]),
color = "grey80", size = 3) +
# geom_segment(aes(x = cutoff, y = df$value[2000+cutoff],
#                  xend = t_treat, yend = df$value[3000+t_treat]),
#              color = "grey80", size = 1.5, linetype = "solid") +
geom_point(aes(x = cutoff, y = df$value[cutoff+2000]),
color = "#fe4a49", size = 3) +
geom_point(aes(x = t_treat, y = df$value[t_treat+3000]),
color = "#2ab7ca", size = 3) +
annotate("text", x = 475, y = df$value[3000+t_treat]+3, label = "T",
size = 5, col = "#2ab7ca", parse=TRUE) +
annotate("text", x = 460, y = df$value[2000+cutoff]-3, label = "C",
size = 5, col = "#fe4a49", parse=TRUE) +
annotate("text", x = 250, y = 5, label = "W[pre]",
size = 7, col = "grey20", parse=TRUE) +
annotate("text", x = 750, y = 14, label = "W[post]==W[Q](W[pre])",
size = 7, col = "grey20", parse=TRUE) +
scale_color_manual(name = NULL, values = c("grey80","#fe4a49", # "#f4b6c2"
"#2ab7ca")) + # "#adcbe3"
# scale_color_manual(name = NULL, values = c("grey80","grey80","#fe4a49",
#                                            "#fe4a49","#2ab7ca","#2ab7ca")) +
coord_cartesian(ylim = c(-10, 45), xlim = c(-150, 1150)) +
theme_bw() +
theme(legend.position = c(0.35,0.85),
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
## Plot ------------------------------------------------------------------------
fig.all = ggpubr::ggarrange(fig.dtwA,
fig.dtwB,
fig.dtwC,
labels = c("1. Match Y & X",
"2. Match Xpre & Xpost",
"3. Warp X"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
ggsave("./figures/figure_TFDTW_0123.pdf",
fig.all, width = 8, height = 8,
units = "in", limitsize = FALSE)
## Plot ------------------------------------------------------------------------
fig.all = ggpubr::ggarrange(fig.dtwA,
fig.dtwB,
fig.dtwC,
labels = c("1. Match Y and X",
"2. Match Xpre and Xpost",
"3. Warp X"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
ggsave("./figures/figure_TFDTW_0123.pdf",
fig.all, width = 8, height = 8,
units = "in", limitsize = FALSE)
## dtwC ------------------------------------------------------------------------
fig.dtwC = df %>%
filter(group %in% c("Y", "X", "X (Warped)")) %>%
ggplot(aes(x = time, y = value, color = group)) +
geom_line(data = df %>% filter(!is.na(dtwC1)),
aes(group = dtwC1), color = "grey80",
linetype = "longdash", size = 1) +
geom_line(data = df %>% filter(!is.na(dtwC2)),
aes(group = dtwC2), color = "grey80",
linetype = "dotted", size = 1) +
geom_segment(aes(x = 500, y = -20, xend = 500, yend = 50),
color = "grey80", size = 1, linetype = "solid") +
# geom_line(data = df %>% filter(!is.na(dtwC)),
#           aes(group = dtwC), color = "grey80",
#           linetype = "twodash", size = 1) +
geom_line(size = 1) +
geom_point(aes(x = t_treat, y = df$value[t_treat]),
color = "grey80", size = 3) +
# geom_segment(aes(x = cutoff, y = df$value[2000+cutoff],
#                  xend = t_treat, yend = df$value[3000+t_treat]),
#              color = "grey80", size = 1.5, linetype = "solid") +
geom_point(aes(x = cutoff, y = df$value[cutoff+2000]),
color = "#fe4a49", size = 3) +
geom_point(aes(x = t_treat, y = df$value[t_treat+3000]),
color = "#2ab7ca", size = 3) +
annotate("text", x = 475, y = df$value[3000+t_treat]+3, label = "T",
size = 5, col = "#2ab7ca", parse=TRUE) +
annotate("text", x = 460, y = df$value[2000+cutoff]-3, label = "C",
size = 5, col = "#fe4a49", parse=TRUE) +
annotate("text", x = 250, y = 5, label = "W[pre]",
size = 7, col = "grey20", parse=TRUE) +
annotate("text", x = 750, y = 14, label = "W[post]==W[Q](W[pre])",
size = 7, col = "grey20", parse=TRUE) +
scale_color_manual(name = NULL, values = c("grey80","#fe4a49", # "#f4b6c2"
"#2ab7ca")) + # "#adcbe3"
# scale_color_manual(name = NULL, values = c("grey80","grey80","#fe4a49",
#                                            "#fe4a49","#2ab7ca","#2ab7ca")) +
coord_cartesian(ylim = c(-10, 45), xlim = c(-150, 1150)) +
theme_bw() +
theme(legend.position = c(0.9,0.5),
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
## Plot ------------------------------------------------------------------------
fig.all = ggpubr::ggarrange(fig.dtwA,
fig.dtwB,
fig.dtwC,
labels = c("1. Match Y and X",
"2. Match Xpre and Xpost",
"3. Warp X"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
ggsave("./figures/figure_TFDTW_0123.pdf",
fig.all, width = 8, height = 8,
units = "in", limitsize = FALSE)
## dtwC ------------------------------------------------------------------------
fig.dtwC = df %>%
filter(group %in% c("Y", "X", "X (Warped)")) %>%
ggplot(aes(x = time, y = value, color = group)) +
geom_line(data = df %>% filter(!is.na(dtwC1)),
aes(group = dtwC1), color = "grey80",
linetype = "longdash", size = 1) +
geom_line(data = df %>% filter(!is.na(dtwC2)),
aes(group = dtwC2), color = "grey80",
linetype = "dotted", size = 1) +
geom_segment(aes(x = 500, y = -20, xend = 500, yend = 50),
color = "grey80", size = 1, linetype = "solid") +
# geom_line(data = df %>% filter(!is.na(dtwC)),
#           aes(group = dtwC), color = "grey80",
#           linetype = "twodash", size = 1) +
geom_line(size = 1) +
geom_point(aes(x = t_treat, y = df$value[t_treat]),
color = "grey80", size = 3) +
# geom_segment(aes(x = cutoff, y = df$value[2000+cutoff],
#                  xend = t_treat, yend = df$value[3000+t_treat]),
#              color = "grey80", size = 1.5, linetype = "solid") +
geom_point(aes(x = cutoff, y = df$value[cutoff+2000]),
color = "#fe4a49", size = 3) +
geom_point(aes(x = t_treat, y = df$value[t_treat+3000]),
color = "#2ab7ca", size = 3) +
annotate("text", x = 475, y = df$value[3000+t_treat]+3, label = "T",
size = 5, col = "#2ab7ca", parse=TRUE) +
annotate("text", x = 460, y = df$value[2000+cutoff]-3, label = "C",
size = 5, col = "#fe4a49", parse=TRUE) +
annotate("text", x = 250, y = 5, label = "W[pre]",
size = 7, col = "grey20", parse=TRUE) +
annotate("text", x = 750, y = 14, label = "W[post]==W[Q](W[pre])",
size = 7, col = "grey20", parse=TRUE) +
scale_color_manual(name = NULL, values = c("grey80","#fe4a49", # "#f4b6c2"
"#2ab7ca")) + # "#adcbe3"
# scale_color_manual(name = NULL, values = c("grey80","grey80","#fe4a49",
#                                            "#fe4a49","#2ab7ca","#2ab7ca")) +
coord_cartesian(ylim = c(-10, 45), xlim = c(-150, 1150)) +
theme_bw() +
theme(legend.position = c(0.95,0.5),
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
## Plot ------------------------------------------------------------------------
fig.all = ggpubr::ggarrange(fig.dtwA,
fig.dtwB,
fig.dtwC,
labels = c("1. Match Y and X",
"2. Match Xpre and Xpost",
"3. Warp X"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
ggsave("./figures/figure_TFDTW_0123.pdf",
fig.all, width = 8, height = 8,
units = "in", limitsize = FALSE)
## dtwC ------------------------------------------------------------------------
fig.dtwC = df %>%
filter(group %in% c("Y", "X", "X (Warped)")) %>%
ggplot(aes(x = time, y = value, color = group)) +
geom_line(data = df %>% filter(!is.na(dtwC1)),
aes(group = dtwC1), color = "grey80",
linetype = "longdash", size = 1) +
geom_line(data = df %>% filter(!is.na(dtwC2)),
aes(group = dtwC2), color = "grey80",
linetype = "dotted", size = 1) +
geom_segment(aes(x = 500, y = -20, xend = 500, yend = 50),
color = "grey80", size = 1, linetype = "solid") +
# geom_line(data = df %>% filter(!is.na(dtwC)),
#           aes(group = dtwC), color = "grey80",
#           linetype = "twodash", size = 1) +
geom_line(size = 1) +
geom_point(aes(x = t_treat, y = df$value[t_treat]),
color = "grey80", size = 3) +
# geom_segment(aes(x = cutoff, y = df$value[2000+cutoff],
#                  xend = t_treat, yend = df$value[3000+t_treat]),
#              color = "grey80", size = 1.5, linetype = "solid") +
geom_point(aes(x = cutoff, y = df$value[cutoff+2000]),
color = "#fe4a49", size = 3) +
geom_point(aes(x = t_treat, y = df$value[t_treat+3000]),
color = "#2ab7ca", size = 3) +
annotate("text", x = 475, y = df$value[3000+t_treat]+3, label = "T",
size = 5, col = "#2ab7ca", parse=TRUE) +
annotate("text", x = 460, y = df$value[2000+cutoff]-3, label = "C",
size = 5, col = "#fe4a49", parse=TRUE) +
annotate("text", x = 250, y = 5, label = "W[pre]",
size = 7, col = "grey20", parse=TRUE) +
annotate("text", x = 750, y = 14, label = "W[post]==W[Q](W[pre])",
size = 7, col = "grey20", parse=TRUE) +
scale_color_manual(name = NULL, values = c("grey80","#fe4a49", # "#f4b6c2"
"#2ab7ca")) + # "#adcbe3"
# scale_color_manual(name = NULL, values = c("grey80","grey80","#fe4a49",
#                                            "#fe4a49","#2ab7ca","#2ab7ca")) +
coord_cartesian(ylim = c(-10, 45), xlim = c(-150, 1150)) +
theme_bw() +
theme(legend.position = c(0.92,0.6),
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
## Plot ------------------------------------------------------------------------
fig.all = ggpubr::ggarrange(fig.dtwA,
fig.dtwB,
fig.dtwC,
labels = c("1. Match Y and X",
"2. Match Xpre and Xpost",
"3. Warp X"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
ggsave("./figures/figure_TFDTW_0123.pdf",
fig.all, width = 8, height = 8,
units = "in", limitsize = FALSE)
## dtwA ------------------------------------------------------------------------
fig.dtwA = df %>%
filter(group %in% c("Y", "X0")) %>%
ggplot(aes(x = time, y = value, color = group)) +
geom_line(data = df %>% filter(!is.na(dtwA)),
aes(group = dtwA), color = "grey80",
linetype = "dashed", size = 1) +
geom_segment(aes(x = 500, y = -10, xend = 500, yend = 50),
color = "grey30", size = 0.5, linetype = "solid") +
geom_line(size = 1) +
geom_point(aes(x = t_treat, y = df$value[t_treat]),
color = "grey10", size = 3) +
geom_point(aes(x = cutoff, y = df$value[cutoff+1000]),
color = "#fe4a49", size = 3) +
scale_color_manual(name = NULL, values = c("grey10", "#fe4a49")) +
annotate("text", x = 475, y = df$value[t_treat]+5, label = "T",
size = 5, col = "grey10", parse=TRUE) +
annotate("text", x = 460, y = df$value[1000+cutoff]-3, label = "C",
size = 5, col = "#fe4a49", parse=TRUE) +
annotate("text", x = 250, y = 15, label = "W[pre]",
size = 6, col = "grey20", parse = TRUE) +
coord_cartesian(ylim = c(0, 45), xlim = c(-150, 1150)) +
theme_bw() +
theme(legend.position = "none",
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
## dtwB ------------------------------------------------------------------------
fig.dtwB = df %>%
filter(group %in% c("Y", "X0")) %>%
ggplot(aes(x = time, y = value, color = group)) +
# geom_segment(aes(x = cutoff, y = 0, xend = cutoff, yend = 25),
#              color = "#2ab7ca", size = 1, linetype = "dashed") +
geom_segment(aes(x = 500, y = -10, xend = 500, yend = 50),
color = "grey80", size = 0.5, linetype = "solid") +
geom_rect(aes(xmin = 560, xmax = 690, ymin = 7, ymax = 19),
color = NA, fill = "grey80") +
geom_rect(aes(xmin = 305, xmax = 435, ymin = 3, ymax = 14),
color = NA, fill = "grey80") +
geom_rect(aes(xmin = 810, xmax = 920, ymin = 13, ymax = 22),
color = NA, fill = "grey90") +
geom_rect(aes(xmin = 80, xmax = 190, ymin = -1, ymax = 8),
color = NA, fill = "grey90") +
geom_line(size = 1) +
geom_point(aes(x = t_treat, y = df$value[t_treat]),
color = "grey80", size = 3) +
geom_point(aes(x = cutoff, y = df$value[cutoff+1000]),
color = "#fe4a49", size = 3) +
geom_rect(aes(xmin = 560, xmax = 690, ymin = 7, ymax = 19),
color = "grey30", fill = NA) +
geom_rect(aes(xmin = 305, xmax = 435, ymin = 3, ymax = 14),
color = "grey30", fill = NA) +
geom_curve(aes(x = 560, y = 19,
xend = 435, yend = 14),
curvature = 0.2,
linetype = "solid",
color = "grey30",
arrow = arrow(length = unit(0.03, "npc"))) +
geom_rect(aes(xmin = 810, xmax = 920, ymin = 13, ymax = 22),
color = "grey30", fill = NA, linetype = "dashed") +
geom_rect(aes(xmin = 80, xmax = 190, ymin = -1, ymax = 8),
color = "grey30", fill = NA, linetype = "dashed") +
geom_curve(aes(x = 810, y = 13,
xend = 190, yend = -1),
curvature = -0.2,
linetype = "dashed",
color = "grey30",
arrow = arrow(length = unit(0.03, "npc"))) +
# annotate("text", x = 475, y = df$value[3000+t_treat]+3, label = "T",
#          size = 7, col = "#2ab7ca", parse=TRUE) +
annotate("text", x = 490, y = df$value[1000+cutoff]+3, label = "C",
size = 5, col = "#fe4a49", parse=TRUE) +
annotate("text", x = 500, y = 3, label = "W[Q]",
size = 6, col = "grey20", parse = TRUE) +
scale_color_manual(name = NULL, values = c("grey80", "#fe4a49")) +
coord_cartesian(ylim = c(-3, 45), xlim = c(-150, 1150)) +
theme_bw() +
theme(legend.position = "none",
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
## dtwC ------------------------------------------------------------------------
fig.dtwC = df %>%
filter(group %in% c("Y", "X", "X (Warped)")) %>%
ggplot(aes(x = time, y = value, color = group)) +
geom_line(data = df %>% filter(!is.na(dtwC1)),
aes(group = dtwC1), color = "grey80",
linetype = "longdash", size = 1) +
geom_line(data = df %>% filter(!is.na(dtwC2)),
aes(group = dtwC2), color = "grey80",
linetype = "dotted", size = 1) +
geom_segment(aes(x = 500, y = -20, xend = 500, yend = 50),
color = "grey80", size = 1, linetype = "solid") +
# geom_line(data = df %>% filter(!is.na(dtwC)),
#           aes(group = dtwC), color = "grey80",
#           linetype = "twodash", size = 1) +
geom_line(size = 1) +
geom_point(aes(x = t_treat, y = df$value[t_treat]),
color = "grey80", size = 3) +
# geom_segment(aes(x = cutoff, y = df$value[2000+cutoff],
#                  xend = t_treat, yend = df$value[3000+t_treat]),
#              color = "grey80", size = 1.5, linetype = "solid") +
geom_point(aes(x = cutoff, y = df$value[cutoff+2000]),
color = "#fe4a49", size = 3) +
geom_point(aes(x = t_treat, y = df$value[t_treat+3000]),
color = "#2ab7ca", size = 3) +
annotate("text", x = 475, y = df$value[3000+t_treat]+3, label = "T",
size = 5, col = "#2ab7ca", parse=TRUE) +
annotate("text", x = 460, y = df$value[2000+cutoff]-3, label = "C",
size = 5, col = "#fe4a49", parse=TRUE) +
annotate("text", x = 250, y = 5, label = "W[pre]",
size = 6, col = "grey20", parse=TRUE) +
annotate("text", x = 750, y = 14, label = "W[post]==W[Q](W[pre])",
size = 6, col = "grey20", parse=TRUE) +
scale_color_manual(name = NULL, values = c("grey80","#fe4a49", # "#f4b6c2"
"#2ab7ca")) + # "#adcbe3"
# scale_color_manual(name = NULL, values = c("grey80","grey80","#fe4a49",
#                                            "#fe4a49","#2ab7ca","#2ab7ca")) +
coord_cartesian(ylim = c(-10, 45), xlim = c(-150, 1150)) +
theme_bw() +
theme(legend.position = c(0.92,0.6),
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
## Plot ------------------------------------------------------------------------
fig.all = ggpubr::ggarrange(fig.dtwA,
fig.dtwB,
fig.dtwC,
labels = c("1. Match Y and X",
"2. Match Xpre and Xpost",
"3. Warp X"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
ggsave("./figures/figure_TFDTW_0123.pdf",
fig.all, width = 8, height = 8,
units = "in", limitsize = FALSE)
## dtwC ------------------------------------------------------------------------
fig.dtwC = df %>%
filter(group %in% c("Y", "X", "X (Warped)")) %>%
ggplot(aes(x = time, y = value, color = group)) +
geom_line(data = df %>% filter(!is.na(dtwC1)),
aes(group = dtwC1), color = "grey80",
linetype = "longdash", size = 1) +
geom_line(data = df %>% filter(!is.na(dtwC2)),
aes(group = dtwC2), color = "grey80",
linetype = "dotted", size = 1) +
geom_segment(aes(x = 500, y = -20, xend = 500, yend = 50),
color = "grey80", size = 0.5, linetype = "solid") +
# geom_line(data = df %>% filter(!is.na(dtwC)),
#           aes(group = dtwC), color = "grey80",
#           linetype = "twodash", size = 1) +
geom_line(size = 1) +
geom_point(aes(x = t_treat, y = df$value[t_treat]),
color = "grey80", size = 3) +
# geom_segment(aes(x = cutoff, y = df$value[2000+cutoff],
#                  xend = t_treat, yend = df$value[3000+t_treat]),
#              color = "grey80", size = 1.5, linetype = "solid") +
geom_point(aes(x = cutoff, y = df$value[cutoff+2000]),
color = "#fe4a49", size = 3) +
geom_point(aes(x = t_treat, y = df$value[t_treat+3000]),
color = "#2ab7ca", size = 3) +
annotate("text", x = 475, y = df$value[3000+t_treat]+3, label = "T",
size = 5, col = "#2ab7ca", parse=TRUE) +
annotate("text", x = 460, y = df$value[2000+cutoff]-3, label = "C",
size = 5, col = "#fe4a49", parse=TRUE) +
annotate("text", x = 250, y = 5, label = "W[pre]",
size = 6, col = "grey20", parse=TRUE) +
annotate("text", x = 750, y = 14, label = "W[post]==W[Q](W[pre])",
size = 6, col = "grey20", parse=TRUE) +
scale_color_manual(name = NULL, values = c("grey80","#fe4a49", # "#f4b6c2"
"#2ab7ca")) + # "#adcbe3"
# scale_color_manual(name = NULL, values = c("grey80","grey80","#fe4a49",
#                                            "#fe4a49","#2ab7ca","#2ab7ca")) +
coord_cartesian(ylim = c(-10, 45), xlim = c(-150, 1150)) +
theme_bw() +
theme(legend.position = c(0.92,0.6),
legend.box = "horizontal",
legend.background = element_rect(fill=NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank())
## Plot ------------------------------------------------------------------------
fig.all = ggpubr::ggarrange(fig.dtwA,
fig.dtwB,
fig.dtwC,
labels = c("1. Match Y and X",
"2. Match Xpre and Xpost",
"3. Warp X"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
ggsave("./figures/figure_TFDTW_0123.pdf",
fig.all, width = 8, height = 8,
units = "in", limitsize = FALSE)
