data = df.quantile, size = 1) +
geom_line(aes(x = time, y = mean.sc, color = "Avg. TE (SC)", linetype = "Avg. TE (SC)"),
data = df.quantile, size = 0.6) +
geom_line(aes(x = time, y = mean.dsc, color = "Avg. TE (DSC)", linetype = "Avg. TE (DSC)"),
data = df.quantile, size = 0.6) +
scale_color_manual(name = NULL, values = colors) +
scale_fill_manual(name = NULL, values = fills) +
scale_linetype_manual(name = NULL, values = linetypes) +
geom_vline(xintercept = 20, linetype="dashed", col = "grey20") +
geom_hline(yintercept = 0, linetype="dashed", col = "grey20") +
annotate("text", x = 20, y = 25, label = "Treatment",
col = "grey20", angle = 90) +
coord_cartesian(ylim = c(-20, 30)) +
xlab("Time") +
ylab("Treatment Effect (TE)") +
theme_bw() +
theme(legend.position=c(0.3,0.15),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
ggsave(paste0("./figures/sim_n30_2.pdf"),
fig.big, width = 6, height = 4.5,
units = "in", limitsize = FALSE)
fig.big = df.gap %>%
ggplot(aes(x = time, group = group)) +
annotate("rect", xmin = 21, xmax = 30,
ymin = -25, ymax = 35, alpha = .3) +
geom_line(aes(y = gap.sc), col = color.sc, alpha=0.1) +
geom_line(aes(y = gap.dsc), col = color.dsc, alpha=0.1) +
geom_ribbon(aes(ymin = quantile.sc.025, ymax = quantile.sc.975,
fill = "95% Quantile (SC)"), data = df.quantile, alpha=0.6) +
geom_ribbon(aes(ymin = quantile.dsc.025, ymax = quantile.dsc.975,
fill = "95% Quantile (DSC)"), data = df.quantile, alpha=0.6) +
geom_line(aes(x = time, y = treatment, color = "TE", linetype = "TE"),
data = df.quantile, size = 1) +
geom_line(aes(x = time, y = mean.sc, color = "Avg. TE (SC)", linetype = "Avg. TE (SC)"),
data = df.quantile, size = 0.6) +
geom_line(aes(x = time, y = mean.dsc, color = "Avg. TE (DSC)", linetype = "Avg. TE (DSC)"),
data = df.quantile, size = 0.6) +
scale_color_manual(name = NULL, values = colors) +
scale_fill_manual(name = NULL, values = fills) +
scale_linetype_manual(name = NULL, values = linetypes) +
geom_vline(xintercept = 21, linetype="dashed", col = "grey20") +
geom_hline(yintercept = 0, linetype="dashed", col = "grey20") +
annotate("text", x = 20, y = 25, label = "Treatment",
col = "grey20", angle = 90) +
coord_cartesian(ylim = c(-20, 30)) +
xlab("Time") +
ylab("Treatment Effect (TE)") +
theme_bw() +
theme(legend.position=c(0.3,0.15),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
ggsave(paste0("./figures/sim_n30_2.pdf"),
fig.big, width = 6, height = 4.5,
units = "in", limitsize = FALSE)
View(df.quantile)
View(df.gap)
df.gap %>% group_by(time) %>% summarise(count.na = sum(is.na(synth.dsc)))
a = df.gap %>% group_by(time) %>% summarise(count.na = sum(is.na(synth.dsc)))
View(a)
View(df.quantile)
df.quantile[27:30, c("mean.dsc", "quantile.dsc.975", "quantile.dsc.025")] = NA
color.sc = "#2ab7ca"
color.dsc = "#fe4a49"
colors = c("TE" = "grey20",
"Avg. TE (SC)" = color.sc,
"Avg. TE (DSC)" = color.dsc)
linetypes = c("TE" = "solid",
"Avg. TE (SC)" = "dashed",
"Avg. TE (DSC)" = "dashed")
fills = c("95% Quantile (SC)" = color.sc,
"95% Quantile (DSC)" = color.dsc)
fig.big = df.gap %>%
ggplot(aes(x = time, group = group)) +
annotate("rect", xmin = 21, xmax = 30,
ymin = -25, ymax = 35, alpha = .3) +
geom_line(aes(y = gap.sc), col = color.sc, alpha=0.1) +
geom_line(aes(y = gap.dsc), col = color.dsc, alpha=0.1) +
geom_ribbon(aes(ymin = quantile.sc.025, ymax = quantile.sc.975,
fill = "95% Quantile (SC)"), data = df.quantile, alpha=0.6) +
geom_ribbon(aes(ymin = quantile.dsc.025, ymax = quantile.dsc.975,
fill = "95% Quantile (DSC)"), data = df.quantile, alpha=0.6) +
geom_line(aes(x = time, y = treatment, color = "TE", linetype = "TE"),
data = df.quantile, size = 1) +
geom_line(aes(x = time, y = mean.sc, color = "Avg. TE (SC)", linetype = "Avg. TE (SC)"),
data = df.quantile, size = 0.6) +
geom_line(aes(x = time, y = mean.dsc, color = "Avg. TE (DSC)", linetype = "Avg. TE (DSC)"),
data = df.quantile, size = 0.6) +
scale_color_manual(name = NULL, values = colors) +
scale_fill_manual(name = NULL, values = fills) +
scale_linetype_manual(name = NULL, values = linetypes) +
geom_vline(xintercept = 21, linetype="dashed", col = "grey20") +
geom_hline(yintercept = 0, linetype="dashed", col = "grey20") +
annotate("text", x = 20, y = 25, label = "Treatment",
col = "grey20", angle = 90) +
coord_cartesian(ylim = c(-20, 30)) +
xlab("Time") +
ylab("Treatment Effect (TE)") +
theme_bw() +
theme(legend.position=c(0.3,0.15),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
ggsave(paste0("./figures/sim_n30_2.pdf"),
fig.big, width = 6, height = 4.5,
units = "in", limitsize = FALSE)
df.quantile = df.gap %>%
group_by(time) %>%
summarise(mean.sc = mean(gap.sc, na.rm = T),
mean.dsc = mean(gap.dsc, na.rm = T),
quantile.sc.975 = quantile(gap.sc, 0.975, na.rm = T),
quantile.sc.025 = quantile(gap.sc, 0.025, na.rm = T),
quantile.dsc.975 = quantile(gap.dsc, 0.975, na.rm = T),
quantile.dsc.025 = quantile(gap.dsc, 0.025, na.rm = T)) %>%
mutate(group = "quantile",
treatment = treatment)
df.quantile[28:30, c("mean.dsc", "quantile.dsc.975", "quantile.dsc.025")] = NA
fig.big = df.gap %>%
ggplot(aes(x = time, group = group)) +
annotate("rect", xmin = 21, xmax = 30,
ymin = -25, ymax = 35, alpha = .3) +
geom_line(aes(y = gap.sc), col = color.sc, alpha=0.1) +
geom_line(aes(y = gap.dsc), col = color.dsc, alpha=0.1) +
geom_ribbon(aes(ymin = quantile.sc.025, ymax = quantile.sc.975,
fill = "95% Quantile (SC)"), data = df.quantile, alpha=0.6) +
geom_ribbon(aes(ymin = quantile.dsc.025, ymax = quantile.dsc.975,
fill = "95% Quantile (DSC)"), data = df.quantile, alpha=0.6) +
geom_line(aes(x = time, y = treatment, color = "TE", linetype = "TE"),
data = df.quantile, size = 1) +
geom_line(aes(x = time, y = mean.sc, color = "Avg. TE (SC)", linetype = "Avg. TE (SC)"),
data = df.quantile, size = 0.6) +
geom_line(aes(x = time, y = mean.dsc, color = "Avg. TE (DSC)", linetype = "Avg. TE (DSC)"),
data = df.quantile, size = 0.6) +
scale_color_manual(name = NULL, values = colors) +
scale_fill_manual(name = NULL, values = fills) +
scale_linetype_manual(name = NULL, values = linetypes) +
geom_vline(xintercept = 21, linetype="dashed", col = "grey20") +
geom_hline(yintercept = 0, linetype="dashed", col = "grey20") +
annotate("text", x = 20, y = 25, label = "Treatment",
col = "grey20", angle = 90) +
coord_cartesian(ylim = c(-20, 30)) +
xlab("Time") +
ylab("Treatment Effect (TE)") +
theme_bw() +
theme(legend.position=c(0.3,0.15),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
ggsave(paste0("./figures/sim_n30_2.pdf"),
fig.big, width = 6, height = 4.5,
units = "in", limitsize = FALSE)
## Test result -----------------------------------------------------------------
folder = paste0("./data/res_sim/n30/")
file.list = as.list(list.files(folder))
length = 30
treat_time = 20
n_mse = 5
shock = 10
treatment = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
pre.start = 11
pre.end = 20
post.start = 21
post.end = 30
# de.mse
df.mse = future_map2(
file.list,
as.list(1:length(file.list)),
~{
file.name = .x
data.id = .y
data.list = readRDS(paste0(folder, file.name))
mse = future_map2(
data.list,
as.list(names(data.list)),
~{
result = .x
grid.id = .y
value = result$res.synth.target.raw$value
synth.raw = result$res.synth.target.raw$synthetic
synth.TFDTW = result$res.synth.target.TFDTW$synthetic
gap.raw = value - synth.raw - treatment
gap.TFDTW = value - synth.TFDTW - treatment
data.frame(grid.id = grid.id,
mse.preT.raw = mean(gap.raw[pre.start:pre.end]^2, na.rm = T),
mse.preT.TFDTW = mean(gap.TFDTW[pre.start:pre.end]^2, na.rm = T),
mse.postT.raw = mean(gap.raw[post.start:post.end]^2, na.rm = T),
mse.postT.TFDTW = mean(gap.TFDTW[post.start:post.end]^2, na.rm = T))
}
) %>% do.call("rbind", .)
mse$data.id = data.id
mse %>%
top_n(-1, mse.preT.TFDTW) %>%
top_n(-1, grid.id)
}
) %>% do.call("rbind", .)
saveRDS(df.mse, paste0("./data/df.mse_sim_n30.Rds"))
# t.test for log(MSEdsc/MSEsc)
df.mse = readRDS(paste0("./data/df.mse_sim_n30.Rds"))
df.mse = df.mse %>%
mutate(log.ratio = log(mse.postT.TFDTW/mse.postT.raw))
t.test(df.mse$log.ratio)
sum(df.mse$log.ratio<0)/nrow(df.mse)
wilcox.test(df.mse$log.ratio)
## Plot result -----------------------------------------------------------------
# df.gap
df.mse = readRDS(paste0("./data/df.mse_sim_n30.Rds"))
folder = paste0("./data/res_sim/n30/")
file.list = as.list(list.files(folder))
results = file.list %>%
future_map(
~{
file.name = .
readRDS(paste0(folder, file.name))
}
)
df.gap = NULL
df.gap = NULL
for (i in 1:nrow(df.mse)) {
data.id = df.mse$data.id[i]
grid.id = df.mse$grid.id[i]
df.gap[[i]] = data.frame(
time = 1:30,
data.id = data.id,
grid.id = grid.id,
value = results[[data.id]][[grid.id]][["res.synth.target.raw"]][[1]],
synth.sc = results[[data.id]][[grid.id]][["res.synth.target.raw"]][[3]],
synth.dsc = results[[data.id]][[grid.id]][["res.synth.target.TFDTW"]][[3]]
)
print(i)
}
df.gap = df.gap %>%
do.call("rbind", .) %>%
mutate(
gap.sc = value - synth.sc,
gap.dsc = value - synth.dsc,
group = paste0(data.id, "-", grid.id)
)
saveRDS(df.gap, paste0("./data/df.gap_sim_n30.Rds"))
# plot
df.gap = readRDS(paste0("./data/df.gap_sim_n30.Rds"))
shock = 10
length = 30
treat_time = 20
n_mse = 5
treatment = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
df.quantile = df.gap %>%
group_by(time) %>%
summarise(mean.sc = mean(gap.sc, na.rm = T),
mean.dsc = mean(gap.dsc, na.rm = T),
quantile.sc.975 = quantile(gap.sc, 0.975, na.rm = T),
quantile.sc.025 = quantile(gap.sc, 0.025, na.rm = T),
quantile.dsc.975 = quantile(gap.dsc, 0.975, na.rm = T),
quantile.dsc.025 = quantile(gap.dsc, 0.025, na.rm = T)) %>%
mutate(group = "quantile",
treatment = treatment)
a = df.gap %>% group_by(time) %>% summarise(count.na = sum(is.na(synth.dsc)))
View(a)
df.quantile[28:30, c("mean.dsc", "quantile.dsc.975", "quantile.dsc.025")] = NA
color.sc = "#2ab7ca"
color.dsc = "#fe4a49"
colors = c("TE" = "grey20",
"Avg. TE (SC)" = color.sc,
"Avg. TE (DSC)" = color.dsc)
linetypes = c("TE" = "solid",
"Avg. TE (SC)" = "dashed",
"Avg. TE (DSC)" = "dashed")
fills = c("95% Quantile (SC)" = color.sc,
"95% Quantile (DSC)" = color.dsc)
fig.big = df.gap %>%
ggplot(aes(x = time, group = group)) +
annotate("rect", xmin = 12, xmax = 17,
ymin = -25, ymax = 35, alpha = .3) +
geom_line(aes(y = gap.sc), col = color.sc, alpha=0.1) +
geom_line(aes(y = gap.dsc), col = color.dsc, alpha=0.1) +
geom_ribbon(aes(ymin = quantile.sc.025, ymax = quantile.sc.975,
fill = "95% Quantile (SC)"), data = df.quantile, alpha=0.6) +
geom_ribbon(aes(ymin = quantile.dsc.025, ymax = quantile.dsc.975,
fill = "95% Quantile (DSC)"), data = df.quantile, alpha=0.6) +
geom_line(aes(x = time, y = treatment, color = "TE", linetype = "TE"),
data = df.quantile, size = 1) +
geom_line(aes(x = time, y = mean.sc, color = "Avg. TE (SC)", linetype = "Avg. TE (SC)"),
data = df.quantile, size = 0.6) +
geom_line(aes(x = time, y = mean.dsc, color = "Avg. TE (DSC)", linetype = "Avg. TE (DSC)"),
data = df.quantile, size = 0.6) +
scale_color_manual(name = NULL, values = colors) +
scale_fill_manual(name = NULL, values = fills) +
scale_linetype_manual(name = NULL, values = linetypes) +
geom_vline(xintercept = 12, linetype="dashed", col = "grey20") +
geom_hline(yintercept = 0, linetype="dashed", col = "grey20") +
annotate("text", x = 11, y = 25, label = "Treatment",
col = "grey20", angle = 90) +
coord_cartesian(ylim = c(-20, 30)) +
xlab("Time") +
ylab("Treatment Effect (TE)") +
theme_bw() +
theme(legend.position=c(0.3,0.15),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
fig.big = df.gap %>%
ggplot(aes(x = time, group = group)) +
annotate("rect", xmin = 21, xmax = 26,
ymin = -25, ymax = 35, alpha = .3) +
geom_line(aes(y = gap.sc), col = color.sc, alpha=0.1) +
geom_line(aes(y = gap.dsc), col = color.dsc, alpha=0.1) +
geom_ribbon(aes(ymin = quantile.sc.025, ymax = quantile.sc.975,
fill = "95% Quantile (SC)"), data = df.quantile, alpha=0.6) +
geom_ribbon(aes(ymin = quantile.dsc.025, ymax = quantile.dsc.975,
fill = "95% Quantile (DSC)"), data = df.quantile, alpha=0.6) +
geom_line(aes(x = time, y = treatment, color = "TE", linetype = "TE"),
data = df.quantile, size = 1) +
geom_line(aes(x = time, y = mean.sc, color = "Avg. TE (SC)", linetype = "Avg. TE (SC)"),
data = df.quantile, size = 0.6) +
geom_line(aes(x = time, y = mean.dsc, color = "Avg. TE (DSC)", linetype = "Avg. TE (DSC)"),
data = df.quantile, size = 0.6) +
scale_color_manual(name = NULL, values = colors) +
scale_fill_manual(name = NULL, values = fills) +
scale_linetype_manual(name = NULL, values = linetypes) +
geom_vline(xintercept = 21, linetype="dashed", col = "grey20") +
geom_hline(yintercept = 0, linetype="dashed", col = "grey20") +
annotate("text", x = 20, y = 25, label = "Treatment",
col = "grey20", angle = 90) +
coord_cartesian(ylim = c(-20, 30)) +
xlab("Time") +
ylab("Treatment Effect (TE)") +
theme_bw() +
theme(legend.position=c(0.3,0.15),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
ggsave(paste0("./figures/sim_n30.pdf"),
fig.big, width = 6, height = 4.5,
units = "in", limitsize = FALSE)
folder = paste0("./data/res_sim/n30_2/")
file.list = as.list(list.files(folder))
length = 30
treat_time = 20
n_mse = 5
shock = 10
treatment = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
pre.start = 11
pre.end = 20
post.start = 21
post.end = 30
# de.mse
df.mse = future_map2(
file.list,
as.list(1:length(file.list)),
~{
file.name = .x
data.id = .y
data.list = readRDS(paste0(folder, file.name))
mse = future_map2(
data.list,
as.list(names(data.list)),
~{
result = .x
grid.id = .y
value = result$res.synth.target.raw$value
synth.raw = result$res.synth.target.raw$synthetic
synth.TFDTW = result$res.synth.target.TFDTW$synthetic
gap.raw = value - synth.raw - treatment
gap.TFDTW = value - synth.TFDTW - treatment
data.frame(grid.id = grid.id,
mse.preT.raw = mean(gap.raw[pre.start:pre.end]^2, na.rm = T),
mse.preT.TFDTW = mean(gap.TFDTW[pre.start:pre.end]^2, na.rm = T),
mse.postT.raw = mean(gap.raw[post.start:post.end]^2, na.rm = T),
mse.postT.TFDTW = mean(gap.TFDTW[post.start:post.end]^2, na.rm = T))
}
) %>% do.call("rbind", .)
mse$data.id = data.id
mse %>%
top_n(-1, mse.preT.TFDTW) %>%
top_n(-1, grid.id)
}
) %>% do.call("rbind", .)
saveRDS(df.mse, paste0("./data/df.mse_sim_n30_2.Rds"))
# t.test for log(MSEdsc/MSEsc)
df.mse = readRDS(paste0("./data/df.mse_sim_n30_2.Rds"))
df.mse = df.mse %>%
mutate(log.ratio = log(mse.postT.TFDTW/mse.postT.raw))
t.test(df.mse$log.ratio)
sum(df.mse$log.ratio<0)/nrow(df.mse)
wilcox.test(df.mse$log.ratio)
## Plot result -----------------------------------------------------------------
# df.gap
df.mse = readRDS(paste0("./data/df.mse_sim_n30_2.Rds"))
folder = paste0("./data/res_sim/n30_2/")
file.list = as.list(list.files(folder))
results = file.list %>%
future_map(
~{
file.name = .
readRDS(paste0(folder, file.name))
}
)
df.gap = NULL
for (i in 1:nrow(df.mse)) {
data.id = df.mse$data.id[i]
grid.id = df.mse$grid.id[i]
df.gap[[i]] = data.frame(
time = 1:30,
data.id = data.id,
grid.id = grid.id,
value = results[[data.id]][[grid.id]][["res.synth.target.raw"]][[1]],
synth.sc = results[[data.id]][[grid.id]][["res.synth.target.raw"]][[3]],
synth.dsc = results[[data.id]][[grid.id]][["res.synth.target.TFDTW"]][[3]]
)
print(i)
}
df.gap = df.gap %>%
do.call("rbind", .) %>%
mutate(
gap.sc = value - synth.sc,
gap.dsc = value - synth.dsc,
group = paste0(data.id, "-", grid.id)
)
saveRDS(df.gap, paste0("./data/df.gap_sim_n30_2.Rds"))
# plot
df.gap = readRDS(paste0("./data/df.gap_sim_n30_2.Rds"))
shock = 10
length = 30
treat_time = 20
n_mse = 5
treatment = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
df.quantile = df.gap %>%
group_by(time) %>%
summarise(mean.sc = mean(gap.sc, na.rm = T),
mean.dsc = mean(gap.dsc, na.rm = T),
quantile.sc.975 = quantile(gap.sc, 0.975, na.rm = T),
quantile.sc.025 = quantile(gap.sc, 0.025, na.rm = T),
quantile.dsc.975 = quantile(gap.dsc, 0.975, na.rm = T),
quantile.dsc.025 = quantile(gap.dsc, 0.025, na.rm = T)) %>%
mutate(group = "quantile",
treatment = treatment)
df.quantile[28:30, c("mean.dsc", "quantile.dsc.975", "quantile.dsc.025")] = NA
color.sc = "#2ab7ca"
color.dsc = "#fe4a49"
# color.sc = "grey70"
# color.dsc = "grey30"
colors = c("TE" = "grey20",
"Avg. TE (SC)" = color.sc,
"Avg. TE (DSC)" = color.dsc)
linetypes = c("TE" = "solid",
"Avg. TE (SC)" = "dashed",
"Avg. TE (DSC)" = "dashed")
fills = c("95% Quantile (SC)" = color.sc,
"95% Quantile (DSC)" = color.dsc)
fig.big = df.gap %>%
ggplot(aes(x = time, group = group)) +
annotate("rect", xmin = 21, xmax = 26,
ymin = -25, ymax = 35, alpha = .3) +
geom_line(aes(y = gap.sc), col = color.sc, alpha=0.1) +
geom_line(aes(y = gap.dsc), col = color.dsc, alpha=0.1) +
geom_ribbon(aes(ymin = quantile.sc.025, ymax = quantile.sc.975,
fill = "95% Quantile (SC)"), data = df.quantile, alpha=0.6) +
geom_ribbon(aes(ymin = quantile.dsc.025, ymax = quantile.dsc.975,
fill = "95% Quantile (DSC)"), data = df.quantile, alpha=0.6) +
geom_line(aes(x = time, y = treatment, color = "TE", linetype = "TE"),
data = df.quantile, size = 1) +
geom_line(aes(x = time, y = mean.sc, color = "Avg. TE (SC)", linetype = "Avg. TE (SC)"),
data = df.quantile, size = 0.6) +
geom_line(aes(x = time, y = mean.dsc, color = "Avg. TE (DSC)", linetype = "Avg. TE (DSC)"),
data = df.quantile, size = 0.6) +
scale_color_manual(name = NULL, values = colors) +
scale_fill_manual(name = NULL, values = fills) +
scale_linetype_manual(name = NULL, values = linetypes) +
geom_vline(xintercept = 21, linetype="dashed", col = "grey20") +
geom_hline(yintercept = 0, linetype="dashed", col = "grey20") +
annotate("text", x = 20, y = 25, label = "Treatment",
col = "grey20", angle = 90) +
coord_cartesian(ylim = c(-20, 30)) +
xlab("Time") +
ylab("Treatment Effect (TE)") +
theme_bw() +
theme(legend.position=c(0.3,0.15),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
# df.t.test = data.frame(Beta = c(0, 0.5, 1),
#                        t = c(-4.7862, -5.8137, -8.2442),
#                        P = c(0.0001, 0.0001, 0.0001))
#
# fig.small = df.t.test %>%
#   ggplot(aes(x = Beta, y = t)) +
#   annotate("rect", xmin = -0.2, xmax = 1.2,
#            ymin = -15, ymax = -2.63, alpha = .3) +
#   geom_line(size = 1) +
#   geom_point(size = 2, col = color.dsc) +
#   geom_hline(yintercept = 0, linetype="solid", col = "black") +
#   geom_hline(yintercept = -2.63, linetype="dashed", col = "grey20") +
#   annotate("text", x = 0.75, y = -4,
#            label = "P < 0.01", col = "grey20") +
#   scale_x_continuous(breaks = c(0, 0.5, 1),
#                      labels = c("0", "0.5", "1")) +
#   scale_y_continuous(breaks = c(-10, -5, 0)) +
#   coord_cartesian(ylim = c(-10, 0), xlim = c(0, 1)) +
#   xlab(expression(psi)) +
#   ylab("t") +
#   theme_bw() +
#   theme(axis.title.y = element_text(angle = 0, vjust = 0.5))
#
#
# fig.sim = fig.big + annotation_custom(ggplotGrob(fig.small),
#                                       xmin = 5, xmax = 45,
#                                       ymin = 7, ymax = 30)
ggsave(paste0("./figures/sim_n30_2.pdf"),
fig.big, width = 6, height = 4.5,
units = "in", limitsize = FALSE)
