label = "Treatment", col = "grey20") +
# annotate("text", x = 2005, y = -20, label = "bar(log(MSE))[SC]==4.08", parse = TRUE,
#          col = "grey20", size = 4, fontface = "bold") +
# annotate("text", x = 2005, y = -30, label = "bar(log(MSE))[DSC]==3.92", parse = TRUE,
#          col = "grey20", size = 4, fontface = "bold") +
coord_cartesian(xlim=c(1969, 2009), ylim=c(-40,40)) +
xlab("Year") +
ylab("TE(y - Synthetic Control)") +
theme_bw() +
theme(legend.position = "none",
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
set.seed(20220407)
df.target = readRDS("./data/df.target_germany_pred2.Rds")
df.gap = readRDS("./data/df.gap_germany_pred2.Rds")
df.quantile = df.gap %>%
group_by(time) %>%
summarise(quantile.sc.975 = quantile(gap.sc, 0.975, na.rm = T),
quantile.sc.025 = quantile(gap.sc, 0.025, na.rm = T),
quantile.dsc.975 = quantile(gap.dsc, 0.975, na.rm = T),
quantile.dsc.025 = quantile(gap.dsc, 0.025, na.rm = T)) %>%
mutate(group = "quantile")
color.sc = "#2ab7ca"
color.dsc = "#fe4a49"
# color.sc = "grey70"
# color.dsc = "grey30"
colors = c("Target TE (SC)" = color.sc,
"Target TE (DSC)" = color.dsc)
fills = c("95% Quantile (SC)" = color.sc,
"95% Quantile (DSC)" = color.dsc)
set.seed(20220407)
group.sample = sample(unique(df.gap$group), 100)
fig_germany = df.gap %>%
filter(group %in% group.sample) %>%
ggplot(aes(x = time, group = group)) +
annotate("rect", xmin = 1990, xmax = 2000,
ymin = -9000, ymax = 9000, alpha = .3) +
geom_line(aes(y = gap.sc), col = color.sc, alpha = 0.4) +
geom_line(aes(y = gap.dsc), col = color.dsc, alpha = 0.4) +
geom_ribbon(aes(ymin = quantile.sc.025,
ymax = quantile.sc.975,
fill="95% Quantile (SC)"),
data = df.quantile, alpha=0.5) +
geom_ribbon(aes(ymin = quantile.dsc.025,
ymax = quantile.dsc.975,
fill="95% Quantile (DSC)"),
data = df.quantile, alpha=0.5) +
geom_line(aes(y = gap.sc, color = "Target TE (SC)"),
data = df.target, size = 1) +
geom_line(aes(y = gap.dsc, color = "Target TE (DSC)"),
data = df.target, size = 1) +
scale_color_manual(name = NULL, values = colors) +
scale_fill_manual(name = NULL, values = fills) +
geom_vline(xintercept = 1990, linetype="dashed", col = "grey20") +
geom_hline(yintercept = 0, linetype="dashed", col = "grey20") +
annotate("text", x = 1995, y = 6800,
label = "t = -5.472\nP < 0.0001", col = "grey20") +
annotate("text", x = 1989, y = 4800, angle = 90,
label = "Treatment", col = "grey20") +
# annotate("text", x = 2007, y = -3000, label = "bar(log(MSE))[SC]==13.89", parse = TRUE,
#          col = "grey20", size = 4, fontface = "bold") +
# annotate("text", x = 2007, y = -5000, label = "bar(log(MSE))[DSC]==13.73", parse = TRUE,
#          col = "grey20", size = 4, fontface = "bold") +
coord_cartesian(xlim=c(1970, 2010),ylim=c(-8000,8000)) +
xlab("Year") +
ylab("Treatment Effect") +
theme_bw() +
theme(legend.position = c(0.25, 0.2),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
fig_all = ggpubr::ggarrange(fig_basque + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig_tobacco + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
fig_germany + ggpubr::rremove("ylab") +
ggpubr::rremove("xlab"),
labels = c("Basque Terrorism",
"California Tobacco",
"German Reunification"),
label.x = 0.1,
label.y = 0.9,
hjust = c(0, 0, 0),
font.label = list(size = 16, color = "grey20",
face = "bold"),
ncol = 1, nrow = 3,
# common.legend = TRUE, legend = "bottom",
align = "hv")
fig_all = ggpubr::annotate_figure(fig_all,
left = grid::textGrob("Treatment Effect (TE)",
rot = 90, vjust = 1,
gp = grid::gpar(cex = 1.3)),
bottom = grid::textGrob("Time",
gp = grid::gpar(cex = 1.3)))
ggsave("./figures/placebo_all_pred.pdf",
fig_all,  width = 7, height = 7,
units = "in", limitsize = FALSE)
## Plot result -----------------------------------------------------------------
# df.gap
df.mse = readRDS(paste0("./data/df.mse_sim_arima111.Rds"))
avg.log.mse.sc = mean(log(df.mse$mse.postT.raw), na.rm = TRUE)
avg.log.mse.dsc = mean(log(df.mse$mse.postT.TFDTW), na.rm = TRUE)
# plot
df.gap = readRDS(paste0("./data/df.gap_sim_arima111.Rds"))
shock = 10
length = 100
treat_time = 60
n_mse = 10
treatment = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
df.quantile = df.gap %>%
group_by(time) %>%
summarise(mean.sc = mean(gap.sc, na.rm = T),
mean.dsc = mean(gap.dsc, na.rm = T),
quantile.sc.975 = quantile(gap.sc, 0.975, na.rm = T),
quantile.sc.025 = quantile(gap.sc, 0.025, na.rm = T),
quantile.dsc.975 = quantile(gap.dsc, 0.975, na.rm = T),
quantile.dsc.025 = quantile(gap.dsc, 0.025, na.rm = T)) %>%
mutate(group = "quantile",
treatment = treatment)
df.quantile[95:100, c("mean.dsc", "quantile.dsc.975", "quantile.dsc.025")] = NA
color.sc = "#2ab7ca"
color.dsc = "#fe4a49"
colors = c("TE" = "grey20",
"Avg. TE (SC)" = color.sc,
"Avg. TE (DSC)" = color.dsc)
linetypes = c("TE" = "solid",
"Avg. TE (SC)" = "dashed",
"Avg. TE (DSC)" = "dashed")
fills = c("95% Quantile (SC)" = color.sc,
"95% Quantile (DSC)" = color.dsc)
avg.log.mse.sc
avg.log.mse.dsc
fig.big = df.gap %>%
ggplot(aes(x = time, group = group)) +
annotate("rect", xmin = 61, xmax = 70,
ymin = -25, ymax = 35, alpha = .3) +
geom_line(aes(y = gap.sc), col = color.sc, alpha=0.1) +
geom_line(aes(y = gap.dsc), col = color.dsc, alpha=0.1) +
geom_ribbon(aes(ymin = quantile.sc.025, ymax = quantile.sc.975,
fill = "95% Quantile (SC)"), data = df.quantile, alpha=0.6) +
geom_ribbon(aes(ymin = quantile.dsc.025, ymax = quantile.dsc.975,
fill = "95% Quantile (DSC)"), data = df.quantile, alpha=0.6) +
geom_line(aes(x = time, y = treatment, color = "TE", linetype = "TE"),
data = df.quantile, size = 1) +
geom_line(aes(x = time, y = mean.sc, color = "Avg. TE (SC)", linetype = "Avg. TE (SC)"),
data = df.quantile, size = 0.6) +
geom_line(aes(x = time, y = mean.dsc, color = "Avg. TE (DSC)", linetype = "Avg. TE (DSC)"),
data = df.quantile, size = 0.6) +
scale_color_manual(name = NULL, values = colors) +
scale_fill_manual(name = NULL, values = fills) +
scale_linetype_manual(name = NULL, values = linetypes) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
geom_hline(yintercept = 0, linetype="dashed", col = "grey20") +
annotate("text", x = 59, y = 25, label = "Treatment",
col = "grey20", angle = 90) +
annotate("text", x = 28, y = 25, label = "ARIMA(1,1,1)\nar = 0.6, ma = 0.6\nt = -7.51, P < 0.0001",
col = "grey20", size = 5, fontface = "bold") +
annotate("text", x = 28, y = 16, label = "bar(log(MSE))[SC]==0.73", parse = TRUE,
col = "grey20", size = 5, fontface = "bold") +
annotate("text", x = 28, y = 12, label = "bar(log(MSE))[DSC]==-0.67", parse = TRUE,
col = "grey20", size = 5, fontface = "bold") +
coord_cartesian(ylim = c(-20, 30)) +
xlab("Time") +
ylab("Treatment Effect (TE)") +
theme_bw() +
theme(legend.position=c(0.3,0.15),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
ggsave(paste0("./figures/sim_arima111.pdf"),
fig.big, width = 6, height = 4.5,
units = "in", limitsize = FALSE)
## Plot result -----------------------------------------------------------------
# df.gap
df.mse = readRDS(paste0("./data/df.mse_sim_ma06.Rds"))
avg.log.mse.sc = mean(log(df.mse$mse.postT.raw), na.rm = TRUE)
avg.log.mse.dsc = mean(log(df.mse$mse.postT.TFDTW), na.rm = TRUE)
avg.log.mse.sc
avg.log.mse.dsc
df.gap = readRDS(paste0("./data/df.gap_sim_ma06.Rds"))
shock = 10
length = 100
treat_time = 60
n_mse = 10
treatment = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
df.quantile = df.gap %>%
group_by(time) %>%
summarise(mean.sc = mean(gap.sc, na.rm = T),
mean.dsc = mean(gap.dsc, na.rm = T),
quantile.sc.975 = quantile(gap.sc, 0.975, na.rm = T),
quantile.sc.025 = quantile(gap.sc, 0.025, na.rm = T),
quantile.dsc.975 = quantile(gap.dsc, 0.975, na.rm = T),
quantile.dsc.025 = quantile(gap.dsc, 0.025, na.rm = T)) %>%
mutate(group = "quantile",
treatment = treatment)
df.quantile[95:100, c("mean.dsc", "quantile.dsc.975", "quantile.dsc.025")] = NA
color.sc = "#2ab7ca"
color.dsc = "#fe4a49"
# color.sc = "grey70"
# color.dsc = "grey30"
colors = c("TE" = "grey20",
"Avg. TE (SC)" = color.sc,
"Avg. TE (DSC)" = color.dsc)
linetypes = c("TE" = "solid",
"Avg. TE (SC)" = "dashed",
"Avg. TE (DSC)" = "dashed")
fills = c("95% Quantile (SC)" = color.sc,
"95% Quantile (DSC)" = color.dsc)
fig.big = df.gap %>%
ggplot(aes(x = time, group = group)) +
annotate("rect", xmin = 61, xmax = 70,
ymin = -25, ymax = 35, alpha = .3) +
geom_line(aes(y = gap.sc), col = color.sc, alpha=0.1) +
geom_line(aes(y = gap.dsc), col = color.dsc, alpha=0.1) +
geom_ribbon(aes(ymin = quantile.sc.025, ymax = quantile.sc.975,
fill = "95% Quantile (SC)"), data = df.quantile, alpha=0.6) +
geom_ribbon(aes(ymin = quantile.dsc.025, ymax = quantile.dsc.975,
fill = "95% Quantile (DSC)"), data = df.quantile, alpha=0.6) +
geom_line(aes(x = time, y = treatment, color = "TE", linetype = "TE"),
data = df.quantile, size = 1) +
geom_line(aes(x = time, y = mean.sc, color = "Avg. TE (SC)", linetype = "Avg. TE (SC)"),
data = df.quantile, size = 0.6) +
geom_line(aes(x = time, y = mean.dsc, color = "Avg. TE (DSC)", linetype = "Avg. TE (DSC)"),
data = df.quantile, size = 0.6) +
scale_color_manual(name = NULL, values = colors) +
scale_fill_manual(name = NULL, values = fills) +
scale_linetype_manual(name = NULL, values = linetypes) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
geom_hline(yintercept = 0, linetype="dashed", col = "grey20") +
annotate("text", x = 59, y = 25, label = "Treatment",
col = "grey20", angle = 90) +
annotate("text", x = 28, y = 25, label = "ARIMA(0,1,1)\nma = 0.6\nt = -13.56, P < 0.0001",
col = "grey20", size = 5, fontface = "bold") +
annotate("text", x = 28, y = 16, label = "bar(log(MSE))[SC]==1.49", parse = TRUE,
col = "grey20", size = 5, fontface = "bold") +
annotate("text", x = 28, y = 12, label = "bar(log(MSE))[DSC]==-0.33", parse = TRUE,
col = "grey20", size = 5, fontface = "bold") +
coord_cartesian(ylim = c(-20, 30)) +
xlab("Time") +
ylab("Treatment Effect (TE)") +
theme_bw() +
theme(legend.position=c(0.3,0.15),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
ggsave(paste0("./figures/sim_ma06.pdf"),
fig.big, width = 6, height = 4.5,
units = "in", limitsize = FALSE)
## Plot arima(1,1,0) -----------------------------------------------------------
# t.test for log(MSEdsc/MSEsc)
df.mse = readRDS(paste0("./data/df.mse_sim_beta_1.Rds"))
avg.log.mse.sc = mean(log(df.mse$mse.postT.raw), na.rm = TRUE)
avg.log.mse.dsc = mean(log(df.mse$mse.postT.TFDTW), na.rm = TRUE)
avg.log.mse.sc
avg.log.mse.dsc
df.gap = readRDS(paste0("./data/df.gap_sim_beta_1.Rds"))
avg.log.mse.sc = mean(log(df.mse$mse.postT.raw), na.rm = TRUE)
avg.log.mse.dsc = mean(log(df.mse$mse.postT.TFDTW), na.rm = TRUE)
shock = 10
length = 100
treat_time = 60
n_mse = 10
treatment = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
df.quantile = df.gap %>%
group_by(time) %>%
summarise(mean.sc = mean(gap.sc, na.rm = T),
mean.dsc = mean(gap.dsc, na.rm = T),
quantile.sc.975 = quantile(gap.sc, 0.975, na.rm = T),
quantile.sc.025 = quantile(gap.sc, 0.025, na.rm = T),
quantile.dsc.975 = quantile(gap.dsc, 0.975, na.rm = T),
quantile.dsc.025 = quantile(gap.dsc, 0.025, na.rm = T)) %>%
mutate(group = "quantile",
treatment = treatment)
df.quantile[95:100, c("mean.dsc", "quantile.dsc.975", "quantile.dsc.025")] = NA
color.sc = "#2ab7ca"
color.dsc = "#fe4a49"
# color.sc = "grey70"
# color.dsc = "grey30"
colors = c("TE" = "grey20",
"Avg. TE (SC)" = color.sc,
"Avg. TE (DSC)" = color.dsc)
linetypes = c("TE" = "solid",
"Avg. TE (SC)" = "dashed",
"Avg. TE (DSC)" = "dashed")
fills = c("95% Quantile (SC)" = color.sc,
"95% Quantile (DSC)" = color.dsc)
fig.big = df.gap %>%
ggplot(aes(x = time, group = group)) +
annotate("rect", xmin = 61, xmax = 70,
ymin = -25, ymax = 35, alpha = .3) +
geom_line(aes(y = gap.sc), col = color.sc, alpha=0.1) +
geom_line(aes(y = gap.dsc), col = color.dsc, alpha=0.1) +
geom_ribbon(aes(ymin = quantile.sc.025, ymax = quantile.sc.975,
fill = "95% Quantile (SC)"), data = df.quantile, alpha=0.6) +
geom_ribbon(aes(ymin = quantile.dsc.025, ymax = quantile.dsc.975,
fill = "95% Quantile (DSC)"), data = df.quantile, alpha=0.6) +
geom_line(aes(x = time, y = treatment, color = "TE", linetype = "TE"),
data = df.quantile, size = 1) +
geom_line(aes(x = time, y = mean.sc, color = "Avg. TE (SC)", linetype = "Avg. TE (SC)"),
data = df.quantile, size = 0.6) +
geom_line(aes(x = time, y = mean.dsc, color = "Avg. TE (DSC)", linetype = "Avg. TE (DSC)"),
data = df.quantile, size = 0.6) +
scale_color_manual(name = NULL, values = colors) +
scale_fill_manual(name = NULL, values = fills) +
scale_linetype_manual(name = NULL, values = linetypes) +
geom_vline(xintercept = 61, linetype="dashed", col = "grey20") +
geom_hline(yintercept = 0, linetype="dashed", col = "grey20") +
annotate("text", x = 59, y = 25, label = "Treatment",
col = "grey20", angle = 90) +
annotate("text", x = 28, y = 25, label = "ARIMA(1,1,0)\nar = 0.6\nt = -8.24, P < 0.0001",
col = "grey20", size = 5, fontface = "bold") +
annotate("text", x = 28, y = 16, label = "bar(log(MSE))[SC]==0.73", parse = TRUE,
col = "grey20", size = 5, fontface = "bold") +
annotate("text", x = 28, y = 12, label = "bar(log(MSE))[DSC]==-0.53", parse = TRUE,
col = "grey20", size = 5, fontface = "bold") +
coord_cartesian(ylim = c(-20, 30)) +
xlab("Time") +
ylab("Treatment Effect (TE)") +
theme_bw() +
theme(legend.position=c(0.3,0.15),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
ggsave(paste0("./figures/sim_ar06.pdf"),
fig.big, width = 6, height = 4.5,
units = "in", limitsize = FALSE)
## Plot result -----------------------------------------------------------------
# df.gap
df.mse = readRDS(paste0("./data/df.mse_sim_n20_3x.Rds"))
avg.log.mse.sc = mean(log(df.mse$mse.postT.raw), na.rm = TRUE)
avg.log.mse.dsc = mean(log(df.mse$mse.postT.TFDTW), na.rm = TRUE)
# plot
df.gap = readRDS(paste0("./data/df.gap_sim_n20_3x.Rds"))
avg.log.mse.sc
avg.log.mse.dsc
# plot
df.gap = readRDS(paste0("./data/df.gap_sim_n20_3x.Rds"))
shock = 10
length = 20
treat_time = 10
n_mse = 5
treatment = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.15*length)),
rep(shock, round(0.85*length - treat_time)))
df.quantile = df.gap %>%
group_by(time) %>%
summarise(mean.sc = mean(gap.sc, na.rm = T),
mean.dsc = mean(gap.dsc, na.rm = T),
quantile.sc.975 = quantile(gap.sc, 0.975, na.rm = T),
quantile.sc.025 = quantile(gap.sc, 0.025, na.rm = T),
quantile.dsc.975 = quantile(gap.dsc, 0.975, na.rm = T),
quantile.dsc.025 = quantile(gap.dsc, 0.025, na.rm = T)) %>%
mutate(group = "quantile",
treatment = treatment)
df.quantile[18:20, c("mean.dsc", "quantile.dsc.975", "quantile.dsc.025")] = NA
color.sc = "#2ab7ca"
color.dsc = "#fe4a49"
# color.sc = "grey70"
# color.dsc = "grey30"
colors = c("TE" = "grey20",
"Avg. TE (SC)" = color.sc,
"Avg. TE (DSC)" = color.dsc)
linetypes = c("TE" = "solid",
"Avg. TE (SC)" = "dashed",
"Avg. TE (DSC)" = "dashed")
fills = c("95% Quantile (SC)" = color.sc,
"95% Quantile (DSC)" = color.dsc)
fig.big = df.gap %>%
ggplot(aes(x = time, group = group)) +
annotate("rect", xmin = 11, xmax = 16,
ymin = -25, ymax = 35, alpha = .3) +
geom_line(aes(y = gap.sc), col = color.sc, alpha=0.1) +
geom_line(aes(y = gap.dsc), col = color.dsc, alpha=0.1) +
geom_ribbon(aes(ymin = quantile.sc.025, ymax = quantile.sc.975,
fill = "95% Quantile (SC)"), data = df.quantile, alpha=0.6) +
geom_ribbon(aes(ymin = quantile.dsc.025, ymax = quantile.dsc.975,
fill = "95% Quantile (DSC)"), data = df.quantile, alpha=0.6) +
geom_line(aes(x = time, y = treatment, color = "TE", linetype = "TE"),
data = df.quantile, size = 1) +
geom_line(aes(x = time, y = mean.sc, color = "Avg. TE (SC)", linetype = "Avg. TE (SC)"),
data = df.quantile, size = 0.6) +
geom_line(aes(x = time, y = mean.dsc, color = "Avg. TE (DSC)", linetype = "Avg. TE (DSC)"),
data = df.quantile, size = 0.6) +
scale_color_manual(name = NULL, values = colors) +
scale_fill_manual(name = NULL, values = fills) +
scale_linetype_manual(name = NULL, values = linetypes) +
geom_vline(xintercept = 11, linetype="dashed", col = "grey20") +
geom_hline(yintercept = 0, linetype="dashed", col = "grey20") +
annotate("text", x = 10, y = 25, label = "Treatment",
col = "grey20", angle = 90) +
annotate("text", x = 5, y = 25, label = "N = 20\nt = -2.10\nP = 0.0375",
col = "grey20", size = 5, fontface = "bold") +
annotate("text", x = 5, y = 16, label = "bar(log(MSE))[SC]==1.68", parse = TRUE,
col = "grey20", size = 5, fontface = "bold") +
annotate("text", x = 5, y = 12, label = "bar(log(MSE))[DSC]==1.38", parse = TRUE,
col = "grey20", size = 5, fontface = "bold") +
coord_cartesian(ylim = c(-20, 30)) +
xlab("Time") +
ylab("Treatment Effect (TE)") +
theme_bw() +
theme(legend.position=c(0.3,0.15),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
# df.t.test = data.frame(Beta = c(0, 0.5, 1),
#                        t = c(-4.7862, -5.8137, -8.2442),
#                        P = c(0.0001, 0.0001, 0.0001))
#
# fig.small = df.t.test %>%
#   ggplot(aes(x = Beta, y = t)) +
#   annotate("rect", xmin = -0.2, xmax = 1.2,
#            ymin = -15, ymax = -2.63, alpha = .3) +
#   geom_line(size = 1) +
#   geom_point(size = 2, col = color.dsc) +
#   geom_hline(yintercept = 0, linetype="solid", col = "black") +
#   geom_hline(yintercept = -2.63, linetype="dashed", col = "grey20") +
#   annotate("text", x = 0.75, y = -4,
#            label = "P < 0.01", col = "grey20") +
#   scale_x_continuous(breaks = c(0, 0.5, 1),
#                      labels = c("0", "0.5", "1")) +
#   scale_y_continuous(breaks = c(-10, -5, 0)) +
#   coord_cartesian(ylim = c(-10, 0), xlim = c(0, 1)) +
#   xlab(expression(psi)) +
#   ylab("t") +
#   theme_bw() +
#   theme(axis.title.y = element_text(angle = 0, vjust = 0.5))
#
#
# fig.sim = fig.big + annotation_custom(ggplotGrob(fig.small),
#                                       xmin = 5, xmax = 45,
#                                       ymin = 7, ymax = 30)
ggsave(paste0("./figures/sim_n20_3x.pdf"),
fig.big, width = 6, height = 4.5,
units = "in", limitsize = FALSE)
## Plot result -----------------------------------------------------------------
# df.gap
df.mse = readRDS(paste0("./data/df.mse_sim_n30.Rds"))
avg.log.mse.sc = mean(log(df.mse$mse.postT.raw), na.rm = TRUE)
avg.log.mse.dsc = mean(log(df.mse$mse.postT.TFDTW), na.rm = TRUE)
avg.log.mse.sc
avg.log.mse.dsc
df.gap = readRDS(paste0("./data/df.gap_sim_n30.Rds"))
shock = 10
length = 30
treat_time = 20
n_mse = 5
treatment = c(rep(0, treat_time),
seq(0, shock, length.out = round(0.1*length)),
rep(shock, round(0.9*length - treat_time)))
df.quantile = df.gap %>%
group_by(time) %>%
summarise(mean.sc = mean(gap.sc, na.rm = T),
mean.dsc = mean(gap.dsc, na.rm = T),
quantile.sc.975 = quantile(gap.sc, 0.975, na.rm = T),
quantile.sc.025 = quantile(gap.sc, 0.025, na.rm = T),
quantile.dsc.975 = quantile(gap.dsc, 0.975, na.rm = T),
quantile.dsc.025 = quantile(gap.dsc, 0.025, na.rm = T)) %>%
mutate(group = "quantile",
treatment = treatment)
df.quantile[28:30, c("mean.dsc", "quantile.dsc.975", "quantile.dsc.025")] = NA
color.sc = "#2ab7ca"
color.dsc = "#fe4a49"
# color.sc = "grey70"
# color.dsc = "grey30"
colors = c("TE" = "grey20",
"Avg. TE (SC)" = color.sc,
"Avg. TE (DSC)" = color.dsc)
linetypes = c("TE" = "solid",
"Avg. TE (SC)" = "dashed",
"Avg. TE (DSC)" = "dashed")
fills = c("95% Quantile (SC)" = color.sc,
"95% Quantile (DSC)" = color.dsc)
fig.big = df.gap %>%
ggplot(aes(x = time, group = group)) +
annotate("rect", xmin = 21, xmax = 26,
ymin = -25, ymax = 35, alpha = .3) +
geom_line(aes(y = gap.sc), col = color.sc, alpha=0.1) +
geom_line(aes(y = gap.dsc), col = color.dsc, alpha=0.1) +
geom_ribbon(aes(ymin = quantile.sc.025, ymax = quantile.sc.975,
fill = "95% Quantile (SC)"), data = df.quantile, alpha=0.6) +
geom_ribbon(aes(ymin = quantile.dsc.025, ymax = quantile.dsc.975,
fill = "95% Quantile (DSC)"), data = df.quantile, alpha=0.6) +
geom_line(aes(x = time, y = treatment, color = "TE", linetype = "TE"),
data = df.quantile, size = 1) +
geom_line(aes(x = time, y = mean.sc, color = "Avg. TE (SC)", linetype = "Avg. TE (SC)"),
data = df.quantile, size = 0.6) +
geom_line(aes(x = time, y = mean.dsc, color = "Avg. TE (DSC)", linetype = "Avg. TE (DSC)"),
data = df.quantile, size = 0.6) +
scale_color_manual(name = NULL, values = colors) +
scale_fill_manual(name = NULL, values = fills) +
scale_linetype_manual(name = NULL, values = linetypes) +
geom_vline(xintercept = 21, linetype="dashed", col = "grey20") +
geom_hline(yintercept = 0, linetype="dashed", col = "grey20") +
annotate("text", x = 20, y = 25, label = "Treatment",
col = "grey20", angle = 90) +
annotate("text", x = 10, y = 25, label = "N = 30\nt = -2.15\nP = 0.0345",
col = "grey20", size = 5, fontface = "bold") +
annotate("text", x = 10, y = 16, label = "bar(log(MSE))[SC]==0.34", parse = TRUE,
col = "grey20", size = 5, fontface = "bold") +
annotate("text", x = 10, y = 12, label = "bar(log(MSE))[DSC]==-0.09", parse = TRUE,
col = "grey20", size = 5, fontface = "bold") +
coord_cartesian(ylim = c(-20, 30)) +
xlab("Time") +
ylab("Treatment Effect (TE)") +
theme_bw() +
theme(legend.position=c(0.3,0.15),
legend.box = "horizontal",
legend.background = element_rect(fill=NA))
ggsave(paste0("./figures/sim_n30_3x.pdf"),
fig.big, width = 6, height = 4.5,
units = "in", limitsize = FALSE)
